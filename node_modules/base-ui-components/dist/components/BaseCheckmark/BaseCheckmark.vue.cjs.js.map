{"version":3,"file":"BaseCheckmark.vue.cjs.js","sources":["../../../src/components/BaseCheckmark/BaseCheckmark.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"['base-checkbox-container', 'base-checkbox-container-' + checkBoxSize]\"\n    @keydown.enter.stop=\"clicked\"\n    @click.stop=\"clicked\">\n    <input\n      :id=\"internalId\"\n      v-model=\"checkedInt\"\n      :name=\"label\"\n      :value=\"radioValueInt\"\n      :type=\"markStyle === 'checkbox' ? 'checkbox' : 'radio'\"\n      :class=\"['base-checkbox-input', { 'base-checkbox-checked': checkedInt }]\"\n      @keydown.enter.prevent=\"\">\n    <div\n      :class=\"[\n        'base-checkmark-container',\n        'base-checkmark-container-' + checkBoxSize,\n        { 'base-radiomark': markStyle === 'radio' && checkedInt === radioValueInt }]\">\n      <base-icon\n        v-if=\"markStyle === 'checkbox' && checkedInt\"\n        :class=\"['base-checkmark', 'base-checkmark-' + checkBoxSize]\"\n        name=\"check-mark\" />\n    </div>\n    <!-- need to disable because label is there - it is just in BaseInput component -->\n    <!-- eslint-disable-next-line  vuejs-accessibility/label-has-for -->\n    <label\n      :for=\"internalId\"\n      :class=\"['base-checkbox-labeltext', { hide: !showLabel }]\">{{ label }}</label>\n  </div>\n</template>\n\n<script>\nimport { createId } from '@/utils/utils';\nimport BaseIcon from '../BaseIcon/BaseIcon';\n\n/**\n * Checkbox and Radio Button Component\n */\n\nexport default {\n  name: 'BaseCheckmark',\n  components: {\n    BaseIcon,\n  },\n  model: {\n    prop: 'checked',\n    event: 'clicked',\n  },\n  props: {\n    /**\n     * choose the style\n     * @values radio, checkbox\n     */\n    markStyle: {\n      type: String,\n      default: 'radio',\n      validator(val) {\n        return (val === 'radio' || val === 'checkbox');\n      },\n    },\n    /**\n     * specify a descriptive label\n     * this will not be displayed but is only there for usability purposes\n     * TODO: for radio button label should actually be visible!\n     */\n    label: {\n      type: String,\n      default: 'select',\n    },\n    /**\n     * specify a value for the radio button - if none is specified the label will be used to\n     * determine if radio button should be active!\n     */\n    radioValue: {\n      type: String,\n      default: '',\n    },\n    /**\n     * define if label should be visible - default set false because\n     * currently not needed in base project\n     */\n    showLabel: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * checkbox checked or radio button checked can be set from outside, default\n     * value depending on type of selector\n     */\n    checked: {\n      type: [Boolean, String],\n      default: false,\n    },\n    /**\n     * set the size of the checkBox\n     * @values large, small\n     */\n    checkBoxSize: {\n      type: String,\n      default: 'small',\n      validator(val) {\n        return val === 'small' || val === 'large';\n      },\n    },\n  },\n  data() {\n    return {\n      checkedInt: false,\n    };\n  },\n  computed: {\n    internalId() {\n      return createId();\n    },\n    radioValueInt() {\n      return this.radioValue || this.label;\n    },\n  },\n  watch: {\n    checked: {\n      handler(val) {\n        this.checkedInt = val;\n      },\n      immediate: true,\n    },\n  },\n  methods: {\n    clicked() {\n      if (this.markStyle === 'checkbox') {\n        this.checkedInt = !this.checkedInt;\n      }\n      /**\n       * event emitted on radio button / checkmark click,\n       * emitting input label\n       *\n       * @event clicked\n       * @param {string, boolean} - emitting boolean value for checkmark or radio value\n       */\n      this.$emit('clicked', this.markStyle === 'checkbox' ? this.checkedInt : this.radioValueInt);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  @import '../../styles/variables.scss';\n\n  .base-checkbox-container {\n    position: relative;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    display: flex;\n    align-items: center;\n    transition: all 0.2s ease;\n\n    .base-checkbox-container-small {\n      width: $spacing-small*2;\n    }\n\n    .base-checkbox-container-large {\n      width: $spacing*2;\n    }\n\n    &:hover input ~ .base-checkmark-container-small {\n      border: 1.5px solid $app-color;\n    }\n\n    & input:checked ~ .base-checkmark-container-small {\n      border: 1.5px solid $app-color;\n    }\n\n    & input:focus ~ .base-checkmark-container-small {\n      border: 1.5px solid $app-color;\n    }\n\n    & .base-checkbox-checked:focus ~ .base-checkmark-container-small svg {\n     fill: $app-color;\n    }\n\n    .base-checkbox-input {\n      position: absolute;\n      opacity: 0;\n      cursor: pointer;\n      width: 100%;\n      height: 100%;\n      z-index: map-get($zindex, boxcontent);\n\n      &:focus ~ .base-checkmark-container {\n        border-color: $app-color;\n      }\n    }\n\n    .base-checkmark-container {\n      border-radius: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      .base-checkmark {\n        opacity: 1;\n      }\n    }\n\n    .base-checkmark-container-small {\n      border: 1px solid black;\n      height: $spacing-small*2;\n      width: $spacing-small*2;\n\n      .base-checkmark-small {\n        height: $spacing-small;\n        width: $spacing-small;\n        top: $spacing-small-half;\n        left: $spacing-small-half;\n      }\n    }\n\n    .base-checkmark-container-large {\n      border: 2px solid white;\n      height: $spacing*2;\n      width: $spacing*2;\n\n      .base-checkmark-large {\n        height: $spacing;\n        width: $spacing;\n        top: $spacing-small;\n        left: $spacing-small;\n        color: white;\n      }\n    }\n\n    .base-radiomark {\n      &:after {\n        position: absolute;\n        content: \"\";\n        left: $spacing-small;\n        top: 50%;\n        width: $spacing-small;\n        height: $spacing-small;\n        background-color: black;\n        border-radius: $spacing-small;\n        transform: translate(-50%, -50%);\n      }\n    }\n\n    .base-checkbox-labeltext {\n      padding-left: $spacing;\n    }\n  }\n</style>\n"],"names":["_sfc_main","BaseIcon","val","createId"],"mappings":"6SAuCAA,EAAA,CACA,KAAA,gBACA,WAAA,CACA,SAAAC,EAAA,OACA,EACA,MAAA,CACA,KAAA,UACA,MAAA,SACA,EACA,MAAA,CAKA,UAAA,CACA,KAAA,OACA,QAAA,QACA,UAAAC,EAAA,CACA,OAAAA,IAAA,SAAAA,IAAA,UACA,CACA,EAMA,MAAA,CACA,KAAA,OACA,QAAA,QACA,EAKA,WAAA,CACA,KAAA,OACA,QAAA,EACA,EAKA,UAAA,CACA,KAAA,QACA,QAAA,EACA,EAKA,QAAA,CACA,KAAA,CAAA,QAAA,MAAA,EACA,QAAA,EACA,EAKA,aAAA,CACA,KAAA,OACA,QAAA,QACA,UAAAA,EAAA,CACA,OAAAA,IAAA,SAAAA,IAAA,OACA,CACA,CACA,EACA,MAAA,CACA,MAAA,CACA,WAAA,EACA,CACA,EACA,SAAA,CACA,YAAA,CACA,OAAAC,EAAA,SAAA,CACA,EACA,eAAA,CACA,OAAA,KAAA,YAAA,KAAA,KACA,CACA,EACA,MAAA,CACA,QAAA,CACA,QAAAD,EAAA,CACA,KAAA,WAAAA,CACA,EACA,UAAA,EACA,CACA,EACA,QAAA,CACA,SAAA,CACA,KAAA,YAAA,aACA,KAAA,WAAA,CAAA,KAAA,YASA,KAAA,MAAA,UAAA,KAAA,YAAA,WAAA,KAAA,WAAA,KAAA,aAAA,CACA,CACA,CACA"}