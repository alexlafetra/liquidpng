{"version":3,"file":"BaseExpandRow.vue.es.js","sources":["../../../src/components/BaseExpandRow/BaseExpandRow.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"['base-expand-row',\n             { 'base-expand-row--expandable': expandable },\n             { 'base-expand-row--expanded': isExpandedInternal }]\">\n    <div\n      :id=\"'base-expand-row-' + id\"\n      class=\"base-expand-row-header\"\n      :aria-expanded=\"expandable ? isExpandedInternal.toString() : null\">\n      <BaseCheckmark\n        v-if=\"isSelectable\"\n        :key=\"id + 'checkmark'\"\n        title=\"checkbox\"\n        mark-style=\"checkbox\"\n        class=\"base-expand-row-checkbox\"\n        :checked=\"isSelected\"\n        @clicked=\"checkboxClicked\" />\n      <component\n        :is=\"expandable ? 'button' : 'div'\"\n        :type=\"expandable ? 'button' : null\"\n        :class=\"['base-expand-row-button', { selectable: isSelectable }]\"\n        @click=\"expandable ? clicked() : null\">\n        <div\n          v-if=\"icon || hasIconSlot\"\n          class=\"base-expand-row-icon\">\n          <!-- @slot slot to inject icon/image left side before label -->\n          <slot name=\"icon\">\n            <BaseIcon\n              :name=\"icon\"\n              title=\"open\" />\n          </slot>\n        </div>\n\n        <div class=\"base-expand-row-title-subtitle-wrapper\">\n          <div class=\"base-expand-row-title base-text-fade-out\">\n            {{ title }}\n          </div>\n          <div\n            v-if=\"subtitle\"\n            class=\"base-expand-row-subtitle base-text-fade-out\">\n            {{ subtitle }}\n          </div>\n        </div>\n        <BaseIcon\n          v-if=\"expandable\"\n          name=\"drop-down\"\n          title=\"open\"\n          class=\"base-expand-row-collapse-icon\" />\n      </component>\n    </div>\n    <div\n      role=\"region\"\n      :aria-labelledby=\"'base-expand-row-' + id\"\n      :aria-hidden=\"!isExpandedInternal ? 'true' : 'false'\"\n      :class=\"['base-expand-row-body', { 'base-expand-row-body-bg': bodyHasBackground }]\">\n      <!-- @slot slot for expanded content -->\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script>\nimport BaseIcon from '../BaseIcon/BaseIcon';\nimport BaseCheckmark from '../BaseCheckmark/BaseCheckmark';\n\nexport default {\n  name: 'BaseExpandRow',\n  components: {\n    BaseCheckmark,\n    BaseIcon,\n  },\n  props: {\n    /**\n     * specify if box is expandable\n     */\n    expandable: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Title of the row.\n     */\n    title: {\n      type: String,\n      default: '',\n    },\n    /**\n     * Optional subtitle of the row.\n     */\n    subtitle: {\n      type: String,\n      default: '',\n    },\n    /**\n     * Lets you optionally specify an icon that is displayed before the title.\n     * For valid values, see [BaseIcon](BaseIcon).\n     */\n    icon: {\n      type: String,\n      default: '',\n    },\n    /**\n     * set the background of collapsed expand-row-body\n     */\n    bodyHasBackground: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Set this to `true` if the row should be in expanded state.\n     */\n    isExpanded: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Lets you specify if the row is selectable. If `true`, a check box appears\n     * on the left side. The `isSelected` prop determines whether the check box is\n     * actually selected or not.\n     */\n    isSelectable: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Lets you specify if the row is currently selected.\n     */\n    isSelected: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      id: null,\n      isExpandedInternal: false,\n      isSelectedInternal: false,\n    };\n  },\n  computed: {\n    hasIconSlot() {\n      return !!this.$slots.icon;\n    },\n  },\n  watch: {\n    /**\n     * watch for expanded/collapsed state changes from outside\n     * @param {boolean} val - the prop value set from outside\n     */\n    isExpanded(val) {\n      this.isExpandedInternal = val;\n    },\n    /**\n     * watch for select state changes from outside\n     * @param {boolean} val - the prop value set from outside\n     */\n    isSelected(val) {\n      this.isSelectedInternal = val;\n    },\n  },\n  created() {\n    // eslint-disable-next-line\n    this.id = this._uid;\n    this.isSelectedInternal = this.isSelected;\n    this.isExpandedInternal = this.isExpanded;\n  },\n  methods: {\n    clicked() {\n      this.isExpandedInternal = !this.isExpandedInternal;\n      /**\n       * Event triggered when the row is expanded or collapsed.\n       * The payload value `true` indicates expanded state, `false` indicates collapsed state.\n       *\n       * @event expanded\n       * @param {Boolean} - is row expanded\n       */\n      this.$emit('expanded', this.isExpandedInternal);\n    },\n    checkboxClicked() {\n      this.isSelectedInternal = !this.isSelectedInternal;\n      /**\n       * Event triggered when the *check box* is clicked; this is applicable\n       * only if the row is selectable and thus has a check box.\n       * The payload indicates the selected state (true or false).\n       *\n       * @event selected\n       * @param {Boolean} - was row selected\n       */\n      this.$emit('selected', this.isSelectedInternal);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  @import \"../../styles/variables\";\n\n  .base-expand-row {\n    margin-bottom: $border-width;\n    background-color: $background-color;\n\n    .base-expand-row-header {\n      display: flex;\n      justify-content: flex-start;\n      align-items: center;\n      background: $box-color;\n      box-shadow: $box-shadow-reg;\n      transition: $box-transition;\n\n      .base-expand-row-checkbox {\n        padding: 0 $spacing;\n        width: $spacing * 3;\n      }\n\n      .base-expand-row-button {\n        height: $row-height-large;\n        padding: 0 $spacing;\n        width: 100%;\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n\n        .base-expand-row-title-subtitle-wrapper {\n          flex: auto;\n          margin-right: $spacing;\n          overflow: hidden;\n\n          .base-expand-row-title {\n            color: $font-color;\n            text-align: left;\n            white-space: nowrap;\n          }\n\n          .base-expand-row-subtitle {\n            font-size: $font-size-small;\n            color: $font-color-second;\n            text-align: left;\n            white-space: nowrap;\n          }\n        }\n\n        .base-expand-row-icon {\n          height: $icon-large;\n          width: $icon-large;\n          margin-right: $spacing;\n          color: currentColor;\n          flex-shrink: 0;\n\n          svg,\n          img {\n            width: 100%;\n          }\n        }\n\n        .base-expand-row-collapse-icon {\n          transition: $drop-down-arrow-animation;\n          height: $icon-small;\n          width: $icon-small;\n          min-width: $icon-small;\n          color: $font-color;\n        }\n\n        &.selectable {\n          // if row is selectable, we must account for the width of the check box.\n          // therefore, decrease 100% width by the width of .base-expand-row-checkbox\n          width: calc(100% - #{$spacing} * 3);\n          padding: 0 $spacing 0 0;\n        }\n      }\n\n      &:focus {\n        outline: none;\n      }\n    }\n\n    .base-expand-row-body {\n      padding: $spacing;\n\n      &.base-expand-row-body-bg {\n        margin-top: $border-width;\n        background-color: $box-color;\n      }\n    }\n\n    &.base-expand-row--expandable {\n\n      .base-expand-row-button {\n\n        &:focus,\n        &:hover {\n          cursor: pointer;\n\n          .base-expand-row-collapse-icon {\n            color: $app-color;\n          }\n        }\n      }\n    }\n\n    &.base-expand-row--expanded {\n\n      .base-expand-row-header {\n        .base-expand-row-button {\n          .base-expand-row-title-subtitle-wrapper {\n            .base-expand-row-title {\n              color: $font-color;\n              font-weight: bold;\n            }\n          }\n        }\n      }\n\n      .base-expand-row-body {\n        display: block;\n      }\n\n      .base-expand-row-collapse-icon {\n        transform: rotate(180deg);\n      }\n    }\n\n    .base-expand-row-body {\n      display: none;\n    }\n  }\n</style>\n"],"names":["_sfc_main","BaseCheckmark","BaseIcon","val"],"mappings":";;;;AAiEA,MAAAA,IAAA;AAAA,EACA,MAAA;AAAA,EACA,YAAA;AAAA,IACA,eAAAC;AAAA,IACA,UAAAC;AAAA,EACA;AAAA,EACA,OAAA;AAAA;AAAA;AAAA;AAAA,IAIA,YAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,OAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,UAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,MAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,mBAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,YAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,cAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,YAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,OAAA;AACA,WAAA;AAAA,MACA,IAAA;AAAA,MACA,oBAAA;AAAA,MACA,oBAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,UAAA;AAAA,IACA,cAAA;AACA,aAAA,CAAA,CAAA,KAAA,OAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,OAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,WAAAC,GAAA;AACA,WAAA,qBAAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,WAAAA,GAAA;AACA,WAAA,qBAAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,UAAA;AAEA,SAAA,KAAA,KAAA,MACA,KAAA,qBAAA,KAAA,YACA,KAAA,qBAAA,KAAA;AAAA,EACA;AAAA,EACA,SAAA;AAAA,IACA,UAAA;AACA,WAAA,qBAAA,CAAA,KAAA,oBAQA,KAAA,MAAA,YAAA,KAAA,kBAAA;AAAA,IACA;AAAA,IACA,kBAAA;AACA,WAAA,qBAAA,CAAA,KAAA,oBASA,KAAA,MAAA,YAAA,KAAA,kBAAA;AAAA,IACA;AAAA,EACA;AACA;;;;;;;;;;;;;;;;;;;;;;;"}