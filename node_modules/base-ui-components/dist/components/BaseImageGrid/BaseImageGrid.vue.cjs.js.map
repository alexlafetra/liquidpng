{"version":3,"file":"BaseImageGrid.vue.cjs.js","sources":["../../../src/components/BaseImageGrid/BaseImageGrid.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"['base-image-grid',\n             'base-image-grid--' + imagesInt.length]\">\n    <div\n      v-for=\"(image, index) in imagesInt\"\n      :key=\"'image' + index\"\n      class=\"base-image-grid__item\">\n      <BaseImage\n        :lazyload=\"true\"\n        :src=\"src(image)\"\n        :srcset=\"srcset(image)\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport BaseImage from '@/components/BaseImage/BaseImage';\n\n/**\n * Base Component to render 1 to 4 images in a static grid\n */\nexport default {\n  name: 'BaseImageGrid',\n  components: {\n    BaseImage,\n  },\n  props: {\n    /**\n     * specify alt text (used for each image)\n     */\n    alt: {\n      type: String,\n      default: '',\n    },\n    /**\n     * specify lazy image loading\n     */\n    lazyload: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * specify images to display in a grid\n     *\n     * array variants to render a single image using `src` or `srcset` for a responsive image:\n     * **src**: `['path']`\n     * **srcset**: `[{ '640w': 'path' }]`\n     */\n    images: {\n      type: Array,\n      default: () => ([]),\n    },\n  },\n  computed: {\n    /**\n     * Reduce images array to the first 4 images\n     * @returns {*[]}\n     */\n    imagesInt() {\n      return this.images.slice(0, 4);\n    },\n  },\n  methods: {\n    /**\n     * get single src\n     *\n     * @param {string|object} data\n     * @returns {string}\n     */\n    src(data) {\n      return typeof data === 'string'\n        ? data\n        // get last array elements path\n        : Object.entries(data).slice(-1)[0][1];\n    },\n    /**\n     * get srcset\n     *\n     * @param {object} data\n     * @returns {array}\n     */\n    srcset(data) {\n      return typeof data === 'object' ? [data] : [];\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '../../styles/variables.scss';\n\n$baseImageGrid: base-image-grid;\n.#{$baseImageGrid} {\n  display: grid;\n  grid-gap: 3px;\n  height: 100%;\n  width: 100%;\n\n  &__item {\n    overflow: hidden;\n    background-color: $background-color;\n\n    img {\n      object-fit: cover;\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  // 1 image\n  &--1 {\n    grid-template-rows: 1fr;\n  }\n\n  // 2 images\n  &--2 {\n    grid-template-rows: 1fr 1fr;\n  }\n\n  // 3 images\n  &--3 {\n    grid-template-rows: 1fr 1fr;\n    grid-template-columns: 1fr 1fr;\n\n    .#{$baseImageGrid}__item {\n      &:nth-of-type(3) {\n        grid-column: 1 / span 2;\n      }\n    }\n  }\n\n  // 4 images\n  &--4 {\n    grid-template-rows: 1fr 1fr;\n    grid-template-columns: 1fr 1fr;\n  }\n}\n</style>\n"],"names":["_sfc_main","BaseImage","data"],"mappings":"yQAsBAA,EAAA,CACA,KAAA,gBACA,WAAA,CACA,UAAAC,EAAA,OACA,EACA,MAAA,CAIA,IAAA,CACA,KAAA,OACA,QAAA,EACA,EAIA,SAAA,CACA,KAAA,QACA,QAAA,EACA,EAQA,OAAA,CACA,KAAA,MACA,QAAA,IAAA,CAAA,CACA,CACA,EACA,SAAA,CAKA,WAAA,CACA,OAAA,KAAA,OAAA,MAAA,EAAA,CAAA,CACA,CACA,EACA,QAAA,CAOA,IAAAC,EAAA,CACA,OAAA,OAAAA,GAAA,SACAA,EAEA,OAAA,QAAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CACA,EAOA,OAAAA,EAAA,CACA,OAAA,OAAAA,GAAA,SAAA,CAAAA,CAAA,EAAA,CAAA,CACA,CACA,CACA"}