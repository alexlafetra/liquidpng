{"version":3,"file":"BaseMap.vue.cjs.js","sources":["../../../src/components/BaseMap/BaseMap.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"mapElement\"\n    :style=\"cssProps\"\n    class=\"base-map\" />\n</template>\n\n<script>\n\n/**\n * A component to display a Leaflet-map with multiple locations\n */\n\nexport default {\n  name: 'BaseMap',\n  props: {\n    /**\n     * define map attribution\n     */\n    attribution: {\n      type: String,\n      default: 'Source: <a href=\"https://openstreetmap.org/\">OpenStreetMap contributors</a>',\n    },\n    /**\n     * define position of map attribution\n     *   @values topright, bottomleft, bottomright\n     */\n    attributionPosition: {\n      type: String,\n      default: 'bottomright',\n      validator: val => ['topright', 'bottomleft', 'bottomright'].includes(val),\n    },\n    /**\n     * set array index of marker to center map from outside\n     */\n    centerMarker: {\n      type: Number,\n      default: null,\n    },\n    /**\n     * define number of items for cluster sizes\n     *   structure: `{ medium: 5, large: 20, xlarge: 100 }`\n     *   Note: properties `medium`, `large`, `xlarge` are mandatory\n     */\n    clusterSizes: {\n      type: Object,\n      default: () => ({ medium: 5, large: 20, xlarge: 100 }),\n      validator: data => data.medium && data.large && data.xlarge,\n    },\n    /**\n     * define map copyright\n     */\n    copyright: {\n      type: String,\n      default: '<a href=http://creativecommons.org/licenses/by-sa/3.0/>CC BY-SA 3.0</a>',\n    },\n    /**\n     * set array index of marker to highlight it from outside\n     */\n    highlightMarker: {\n      type: Number,\n      default: null,\n    },\n    /**\n     * define html code for a custom icon\n     */\n    icon: {\n      type: String,\n      // eslint-disable-next-line max-len\n      default: '<svg viewBox=\"0 0 70.866 70.866\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m35.433 0a22.731 22.731 0 0 0-22.731 22.82 24.125 24.125 0 0 0 1.872 9.1814l19.611 38.063a1.3718 1.3718 0 0 0 2.496 0l19.611-38.063a22.249 22.249 0 0 0 1.872-9.1814 22.731 22.731 0 0 0-22.731-22.82zm0 32.858a10.216 10.216 0 1 1 10.216-10.216 10.241 10.241 0 0 1-10.216 10.216z\" fill=\"#010101\"/></svg>',\n    },\n    /**\n     * define icon size\n     */\n    iconSize: {\n      type: Number,\n      default: 32,\n    },\n    /**\n     * define custom options for map data\n     *   e.g. {\n     *          style: 'normal',\n     *          subdomains: ['mapsneu'],\n     *          tileMatrixSet: 'google3857',\n     *          type: 'geolandbasemap'\n     *   }\n     *\n     *   usage custom keys in `url` property:\n     *   https://{s}.wien.gv.at/basemap/{type}/{style}/{tileMatrixSet}/{z}/{y}/{x}.png\n     *\n     *   for more information refer to the [Leaflet TileLayer documentation](https://leafletjs.com/reference.html#tilelayer)\n     */\n    options: {\n      type: Object,\n      default: () => ({}),\n    },\n    /**\n     * define marker\n     *   structure: [{\n     *     coordinates: [16.382782, 48.208309],\n     *     latLng: [48.208309, 16.382782],\n     *     data: [ 'University of Applied Arts', 'Oskar Kokoschka-Platz 2',\n     *     '1010 Vienna', 'Austria']\n     *   }]\n     *   Note: either GeoJSON coordinates or latLng is mandatory\n     */\n    marker: {\n      type: Array,\n      default: () => [],\n      validator: data => data.every(item => (item.latLng || item.coordinates)),\n    },\n    /**\n     * show popups for marker\n     */\n    markerPopups: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * define max zoom factor\n     */\n    maxZoom: {\n      type: Number,\n      default: 18,\n    },\n    /**\n     * define url to tileLayer service\n     */\n    url: {\n      type: String,\n      default: '',\n    },\n    /**\n     * specify service for the [tileLayer](https://leafletjs.com/examples/wms/wms.html)\n     * @values WMTS, TMS, WMS'\n     */\n    tileLayerService: {\n      type: String,\n      default: 'WMTS',\n      validator(val) {\n        return ['WMTS', 'TMS', 'WMS'].includes(val);\n      },\n    },\n    /**\n     * define initial zoom factor\n     */\n    zoom: {\n      type: Number,\n      default: 16,\n    },\n  },\n  data() {\n    return {\n      L: null,\n      map: null,\n      activePopUp: null,\n      boundsPadding: [0, 20],\n      highlightedMarker: null,\n      markerClass: 'base-map-marker-icon',\n      markerClusterClass: 'base-map-marker-cluster',\n      popupOptions: {\n        offset: [10, -25],\n        closeButton: false,\n        keepInView: true,\n      },\n      scrollWheelZoom: false,\n    };\n  },\n  computed: {\n    // Observer to check if component is in viewport and init map\n    observer() {\n      return new IntersectionObserver((entries, observer) => {\n        entries.forEach((entry) => {\n          // If the entry is not in the viewport, do nothing\n          if (!entry.isIntersecting) return;\n\n          // Stop observing\n          observer.unobserve(entry.target);\n\n          // Init map\n          this.init();\n        });\n      });\n    },\n    cssProps() {\n      return {\n        '--leaflet-popup-offset-bottom': `${this.popupOptions.offset[1]}px`,\n      };\n    },\n    // compare marker objects and remove duplicates\n    markerFiltered() {\n      return Array.from(new Set(this.marker.map(JSON.stringify))).map(JSON.parse);\n    },\n  },\n  watch: {\n    centerMarker(value) {\n      if (value !== null) {\n        this.map.setView(\n          this.getLatLng(this.markerFiltered[value]),\n          this.zoom,\n        );\n      }\n    },\n    highlightMarker(value, before) {\n      if (value !== null) {\n        // close all open popups\n        this.map.closePopup();\n\n        // reset all marker\n        this.resetAllMarker();\n\n        // get all marker and filter by id\n        this.map.eachLayer((layer) => {\n          /* eslint-disable no-underscore-dangle */\n          // highlight markerCluster\n          if (layer._bounds && layer._icon) {\n            const marker = this.getLatLng(this.markerFiltered[value]);\n            const bounds = this.L.latLngBounds(layer._bounds);\n\n            if (bounds.contains(marker)) {\n              layer._icon.classList.add(`${this.markerClusterClass}--active`);\n              return;\n            }\n          }\n          /* eslint-enable no-underscore-dangle */\n\n          // highlight marker\n          if (layer.options.id != null && layer.options.id === value) {\n            // eslint-disable-next-line no-underscore-dangle\n            this.highlightedMarker = layer._icon;\n            this.highlightedMarker.classList.add(`${this.markerClass}--active`);\n          }\n        });\n        return;\n      }\n\n      // reset active marker\n      if (this.highlightedMarker != null && this.activePopUp !== before) {\n        this.highlightedMarker.classList.remove(`${this.markerClass}--active`);\n        this.highlightedMarker = null;\n      }\n\n      // reset active markerCluster\n      const markerClusterActive = this.$el.querySelector(`.${this.markerClusterClass}--active`);\n      if (markerClusterActive) {\n        markerClusterActive.classList.remove(`${this.markerClusterClass}--active`);\n      }\n    },\n  },\n  beforeDestroy() {\n    this.observer.disconnect();\n  },\n  mounted() {\n    // Add observer to check if component is in viewport and init map\n    this.observer.observe(this.$el);\n  },\n  methods: {\n    async init() {\n      // Check if leaflet map is already initialized\n      if (this.L) {\n        return;\n      }\n\n      // Import Leaflet and related plugins\n      this.L = await import('leaflet');\n      const { ResponsivePopup } = await import('leaflet-responsive-popup');\n      const { MarkerClusterGroup } = await import('leaflet.markercluster');\n\n      // Initialize Leaflet map\n      this.map = this.L.map(this.$refs.mapElement, {\n        scrollWheelZoom: this.scrollWheelZoom,\n        tap: false, // fix clickEvent for macOS Safari\n      });\n\n      // Set position of attribution\n      this.map.attributionControl.setPosition(this.attributionPosition);\n\n      // Draw Leaflet map\n      const mapConfig = {\n        maxZoom: this.maxZoom,\n        attribution: [this.attribution, this.copyright].join(', '),\n        tms: this.tileLayerService === 'TMS',\n        ...this.options,\n      };\n\n      if (this.tileLayerService === 'WMS') {\n        this.L.tileLayer.wms(this.url, mapConfig).addTo(this.map);\n      } else {\n        this.L.tileLayer(this.url, mapConfig).addTo(this.map);\n      }\n\n      // Add marker to map\n      if (!this.markerFiltered.length) {\n        return;\n      }\n\n      // Custom icon\n      const iconOptions = {\n        className: this.markerClass,\n        html: this.icon,\n        iconSize: [this.iconSize, this.iconSize],\n        iconAnchor: [this.iconSize / 2, this.iconSize],\n      };\n      const markerIcon = this.L.divIcon(iconOptions);\n\n      // Define Leaflet clusterGroup\n      this.markerCluster = new MarkerClusterGroup({\n        maxClusterRadius: 50,\n        showCoverageOnHover: false,\n        iconCreateFunction: (cluster) => {\n          const items = cluster.getAllChildMarkers().length;\n          let classSize = 'small';\n          let size = 48;\n\n          if (items > this.clusterSizes.medium) {\n            classSize = 'medium';\n            size = 64;\n          }\n\n          if (items > this.clusterSizes.large) {\n            classSize = 'large';\n            size = 80;\n          }\n\n          if (items > this.clusterSizes.xlarge) {\n            classSize = 'xlarge';\n            size = 128;\n          }\n\n          return this.L.divIcon({\n            html: `<div class=\"${this.markerClusterClass}__inner\">${items}</div>`,\n            className: `${this.markerClusterClass} ${this.markerClusterClass}--${classSize}`,\n            iconSize: this.L.point(size, size),\n          });\n        },\n      });\n\n      this.markerFiltered.forEach((item, index) => {\n        const popup = new ResponsivePopup(this.popupOptions);\n        const markerOptions = {\n          id: index,\n          icon: markerIcon,\n        };\n\n        // check if geo reference is present before setting marker on map\n        if (!this.getLatLng(item)) {\n          return;\n        }\n\n        // Define marker to map\n        const marker = this.L.marker(this.L.latLng(this.getLatLng(item)), markerOptions)\n          .on('mouseover', this.activateMarker)\n          .on('mouseout', this.resetMarker);\n\n        // Set popup content\n        if (this.markerPopups && Array.isArray(item.data)) {\n          popup.setContent(item.data.join('<br>'));\n          marker.bindPopup(popup);\n        }\n\n        // Add marker to cluster\n        this.markerCluster.addLayer(marker);\n      });\n\n      // Add clusterGroup to map\n      this.map.addLayer(this.markerCluster);\n\n      // Check if marker has property latLng or coordinates again, otherwise do not render to map\n      const marker = this.markerFiltered.filter(item => (item.latLng || item.coordinates));\n      if (!marker.length) {\n        return;\n      }\n\n      // Center map based on Marker(s)\n      // has to be called after marker have been set to map\n      const bounds = new this.L.LatLngBounds(\n        this.markerFiltered.map(item => this.getLatLng(item)),\n      );\n\n      this.map.fitBounds(bounds, {\n        padding: this.boundsPadding,\n        maxZoom: this.zoom,\n      });\n    },\n    activateMarker(e) {\n      /* eslint-disable no-underscore-dangle */\n      const { id } = e.target.options;\n      const marker = e.target._icon;\n      /* eslint-enable no-underscore-dangle */\n\n      // reset all marker\n      this.resetAllMarker();\n\n      // set active and populate markerState\n      if (!e.target.options.active) {\n        this.activePopUp = id;\n        this.markerState(id);\n        marker.classList.add(`${this.markerClass}--active`);\n\n        // eslint-disable-next-line no-param-reassign\n        e.target.options.active = true;\n      }\n    },\n    resetMarker(e) {\n      // eslint-disable-next-line no-underscore-dangle\n      const marker = e.target._icon;\n\n      marker.classList.remove(`${this.markerClass}--active`);\n      this.activePopUp = null;\n      this.markerState(null);\n\n      // eslint-disable-next-line no-param-reassign\n      delete e.target.options.active;\n    },\n    resetAllMarker() {\n      this.map.eachLayer((layer) => {\n        // eslint-disable-next-line no-underscore-dangle\n        const marker = layer._icon;\n\n        if (marker) {\n          marker.classList.remove(`${this.markerClass}--active`);\n          marker.classList.remove(`${this.markerClusterClass}--active`);\n          this.activePopUp = null;\n          this.markerState(null);\n          // eslint-disable-next-line no-param-reassign\n          delete layer.options.active;\n        }\n      });\n    },\n    markerState(value) {\n      /**\n       * Event emitted on mouseenter, mouseleave of a map marker\n       * mouseenter: index of marker object in component property 'marker' array\n       * mouseleave: null\n       *\n       * @event highlighted\n       * @property {number} - array index or null\n       */\n      this.$emit('highlighted', value);\n    },\n    getLatLng(item) {\n      if (item.coordinates) {\n        return [item.coordinates[1], item.coordinates[0]];\n      }\n\n      if (item.latLng) {\n        return item.latLng;\n      }\n\n      return null;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .base-map {\n    min-height: 200px;\n  }\n</style>\n\n<style lang=\"scss\">\n  /* for some reason this is not working as \"leaflet/dist/leaflet.css\" (webpack)\n  or \"~leaflet/dist/leaflet.css\" (rollup)\n  (compare BaseCarousel where exactly the same (first version) IS working */\n  @import '../../../node_modules/leaflet/dist/leaflet.css';\n  @import '../../../node_modules/leaflet.markercluster/dist/MarkerCluster.css';\n  @import '../../../node_modules/leaflet-responsive-popup/leaflet.responsive.popup.css';\n  @import \"../../styles/variables\";\n\n  /* Cluster */\n  $clusterClass: '.base-map-marker-cluster';\n  #{$clusterClass} {\n    &__inner {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      color: white;\n      font-weight: bold;\n      font-size: $font-size-regular;\n      background-clip: padding-box;\n      border-radius: 50%;\n      border-style: solid;\n      border-color: $map-cluster-bg;\n      background-color: $map-cluster-bg-inner;\n      transition: all 250ms ease-in-out;\n    }\n\n    &.base-map-marker-cluster--small #{$clusterClass}__inner {\n      border-width: 4px;\n    }\n\n    &.base-map-marker-cluster--medium #{$clusterClass}__inner {\n      border-width: 8px;\n    }\n\n    &.base-map-marker-cluster--large #{$clusterClass}__inner {\n      border-width: 8px;\n    }\n\n    &.base-map-marker-cluster--xlarge #{$clusterClass}__inner {\n      border-width: 16px;\n    }\n\n    &--active,\n    &:hover {\n      #{$clusterClass}__inner {\n        background-color: $map-cluster-bg-inner-hover;\n        border-color:  $map-cluster-bg-hover;\n      }\n    }\n  }\n\n  // cluster spider lines\n  .leaflet-pane > svg path.leaflet-interactive {\n    stroke: $app-color;\n  }\n\n  /* marker */\n  .base-map-marker-icon {\n    > svg path {\n      fill: $app-color;\n      transition: fill 250ms ease-in-out;\n    }\n\n    &--active,\n    &:hover {\n      > svg path {\n        fill: $app-color-secondary;\n      }\n    }\n  }\n\n  /* popup */\n  .leaflet-popup {\n\n    &.leaflet-resp-popup-north-west .leaflet-popup-content-wrapper,\n    &.leaflet-resp-popup-west-south .leaflet-popup-content-wrapper,\n    &.leaflet-resp-popup-south-east .leaflet-popup-content-wrapper {\n      border-radius: 0;\n    }\n\n    &.leaflet-resp-popup-south,\n    &.leaflet-resp-popup-south-east {\n      margin-top: var(--leaflet-popup-offset-bottom);\n    }\n  }\n\n  .leaflet-popup-tip-container {\n    display: none;\n  }\n\n  .leaflet-popup-content-wrapper {\n    width: 225px;\n    border-radius: 0;\n  }\n\n  .leaflet-popup-content {\n    margin: $spacing-small $spacing-large $spacing $spacing-small;\n    font-size: 14px !important;\n    line-height: 1.4em;\n    color: $font-color;\n  }\n\n  .leaflet-container a.leaflet-popup-close-button {\n    padding: $spacing-small $spacing-small 0 0;\n  }\n\n  .leaflet-control a {\n    color: $app-color;\n\n    &:hover {\n      color: $app-color-secondary;\n    }\n  }\n</style>\n"],"names":["_sfc_main","val","data","item","entries","observer","entry","value","before","layer","marker","markerClusterActive","ResponsivePopup","MarkerClusterGroup","mapConfig","iconOptions","markerIcon","cluster","items","classSize","size","index","popup","markerOptions","bounds","e","id"],"mappings":"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"}