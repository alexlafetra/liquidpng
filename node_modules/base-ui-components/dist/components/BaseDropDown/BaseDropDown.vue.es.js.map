{"version":3,"file":"BaseDropDown.vue.es.js","sources":["../../../src/components/BaseDropDown/BaseDropDown.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"baseDropdown\"\n    v-click-outside=\"() => showDropDown = false\"\n    class=\"base-drop-down\">\n    <div\n      :class=\"['base-drop-down-label-wrapper',\n               { hide: !getLangLabel(label, true) || !showLabel }]\">\n      <!-- TODO: check if this is correct HTML - label associated with button? -->\n      <!-- eslint-disable-next-line  vuejs-accessibility/label-has-for -->\n      <label\n        :for=\"getLangLabel(label) + '-' + id\"\n        class=\"base-drop-down-label\">\n        {{ getLangLabel(label, true) }}\n      </label>\n    </div>\n    <button\n      :id=\"getLangLabel(label) + '-' + id\"\n      :aria-expanded=\"String(showDropDown)\"\n      :style=\"{ 'background-color': headerBackgroundColor }\"\n      :disabled=\"isDisabled\"\n      :class=\"['base-drop-down-head', { 'base-drop-down-head-spacing': withSpacing }]\"\n      aria-haspopup=\"listbox\"\n      type=\"button\"\n      @click.prevent=\"showDropDown = !showDropDown\"\n      @keydown.enter.esc.down.up.prevent=\"selectByKey\"\n      @keydown.tab=\"selectByKey\">\n      <div\n        ref=\"dropDownButton\"\n        :class=\"['base-drop-down-head-text-wrapper',\n                 { 'base-drop-down-head-text-fade-out': showFadeOut }]\">\n        <span\n          ref=\"headText\"\n          class=\"base-drop-down-head-text\">\n          {{ selectedOptionInt }}\n        </span>\n      </div>\n      <!-- @slot place elements right of header -->\n      <slot name=\"header-right\">\n        <base-icon\n          :class=\"['base-drop-down-icon', { 'base-drop-down-icon-rotated': showDropDown }]\"\n          name=\"drop-down\" />\n      </slot>\n    </button>\n    <div\n      v-if=\"showDropDown\"\n      ref=\"dropdownContainer\"\n      :style=\"{ [alignDropDown]: 0, 'max-height': maxDropDownHeight }\"\n      class=\"base-drop-down-body\">\n      <!-- @slot create custom drop down body -->\n      <slot>\n        <ul\n          :aria-labelledby=\"getLangLabel(label) + '-' + id\"\n          role=\"listbox\"\n          class=\"base-drop-down-body-list\">\n          <li\n            v-for=\"(option, index) in options\"\n            ref=\"option\"\n            :key=\"option[valueProp]\"\n            :class=\"[\n              'base-drop-down-option',\n              {\n                'base-drop-down-option-selected': selectedOption\n                  && option[valueProp] === selectedOption[valueProp],\n              },\n              { 'base-drop-down-option-key-selected': keySelectedIndex === index }]\"\n            role=\"option\"\n            :aria-selected=\"(selectedOption\n              && option[valueProp] === selectedOption[valueProp]).toString()\"\n            tabindex=\"0\"\n            @keydown.enter=\"selectValue(option)\"\n            @keydown.tab=\"selectByKey\"\n            @click=\"selectValue(option)\">\n            {{ getLangLabel(option.label, true) }}\n          </li>\n        </ul>\n      </slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { debounce } from '@/utils/utils';\nimport ClickOutside from 'vue-click-outside';\nimport i18n from '../../mixins/i18n';\nimport BaseIcon from '../BaseIcon/BaseIcon';\n\n/**\n * Accessible drop down component\n */\nexport default {\n  name: 'BaseDropDown',\n  components: {\n    BaseIcon,\n  },\n  directives: {\n    ClickOutside,\n  },\n  mixins: [\n    i18n,\n  ],\n  model: {\n    prop: 'selectedOption',\n    event: 'value-selected',\n  },\n  props: {\n    /**\n     * specify options to choose from\n     *   needs to be an array with label and value properties\n     */\n    options: {\n      type: Array,\n      default: () => [],\n    },\n    /**\n     * label for the drop down, recommended to define for accessibility\n     */\n    label: {\n      type: String,\n      default: 'Drop Down',\n    },\n    /**\n     * placeholder appearing in select when no option was\n     * selected\n     */\n    placeholder: {\n      type: String,\n      default: 'Select',\n    },\n    /**\n     * the selected value\n     */\n    selectedOption: {\n      type: Object,\n      default: () => ({ value: '', label: '' }),\n    },\n    /**\n     * define if label should be shown\n     */\n    showLabel: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * set the background color of drop down head\n     */\n    headerBackgroundColor: {\n      type: String,\n      default: 'inherit',\n    },\n    /**\n     * set a language (ISO 639-1)\n     */\n    language: {\n      type: String,\n      default: '',\n      validator: val => !val || val.length === 2,\n    },\n    /**\n     * set the name of the property that holds the value\n     */\n    valueProp: {\n      type: String,\n      default: 'value',\n    },\n    /**\n     * flag to set drop down inactive\n     */\n    isDisabled: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * flag to disable spacing left and right\n     * (needed for sidebar drop downs)\n     */\n    withSpacing: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * align drop down with left or right border\n     */\n    alignDropDown: {\n      type: String,\n      default: 'left',\n      validator(val) {\n        return ['left', 'right'].includes(val);\n      },\n    },\n    /**\n     * set id if drop down with this label appears more than once\n     */\n    id: {\n      type: [String, Number],\n      default: '',\n    },\n  },\n  data() {\n    return {\n      showDropDown: false,\n      keySelectedIndex: -1,\n      showFadeOut: false,\n      maxDropDownHeight: '0',\n      resizeObserver: null,\n    };\n  },\n  computed: {\n    selectedOptionInt() {\n      return this.getLangLabel(this.selectedOption.label, true) || this.placeholder || '';\n    },\n  },\n  watch: {\n    showDropDown(val) {\n      if (val) {\n        // dont let drop down size be larger than window\n        const maxHeight = window.innerHeight - this.$el.offsetTop - 120;\n        this.maxDropDownHeight = `${maxHeight < 300 ? maxHeight : 300}px`;\n      }\n      // reset index on close\n      if (!val) {\n        this.keySelectedIndex = -1;\n      }\n    },\n  },\n  mounted() {\n    this.initObserver();\n  },\n  beforeDestroy() {\n    if (this.resizeObserver) this.resizeObserver.unobserve(this.$refs.baseDropdown);\n  },\n  methods: {\n    initObserver() {\n      // create an observer with the set overflow calc function\n      const resizeObserver = new ResizeObserver(debounce(50, () => this.setOverflow()));\n      // put it on the relevant element\n      resizeObserver.observe(this.$refs.baseDropdown);\n      // store it\n      this.resizeObserver = resizeObserver;\n    },\n    // event triggered by clicking on option or Enter after\n    // selecting via keys\n    selectValue(option) {\n      this.showDropDown = false;\n      /**\n       * Event emitted when an option is selected\n       *\n       * @event value-selected\n       * @param { Object } - the selected option\n       */\n      this.$emit('value-selected', option);\n    },\n    // adding key navigation for accessibility\n    selectByKey(event) {\n      const { key } = event;\n      if (key === 'Space') {\n        this.showDropDown = !this.showDropDown;\n      } else if (this.showDropDown && (key === 'ArrowUp' || (event.shiftKey && key === 'Tab'))) {\n        if (this.keySelectedIndex > 0) {\n          this.keySelectedIndex -= 1;\n        }\n      } else if (this.showDropDown && (key === 'ArrowDown' || key === 'Tab')) {\n        if (this.keySelectedIndex < this.options.length - 1) {\n          this.keySelectedIndex += 1;\n        }\n      } else if (key === 'Enter') {\n        if (this.showDropDown && this.keySelectedIndex >= 0) {\n          this.selectValue(this.options[this.keySelectedIndex]);\n        } else {\n          this.showDropDown = !this.showDropDown;\n        }\n      } else if (key === 'Escape') {\n        this.showDropDown = false;\n      }\n      if (this.$refs.option && this.$refs.option[this.keySelectedIndex]\n        && this.$refs.dropdownContainer.scrollHeight\n        !== this.$refs.dropdownContainer.clientHeight) {\n        this.$refs.option[this.keySelectedIndex].scrollIntoView({ block: 'nearest', inline: 'nearest' });\n      }\n    },\n    setOverflow() {\n      // eslint-disable-next-line max-len\n      const headerWidth = this.$refs.dropDownButton ? this.$refs.dropDownButton.getBoundingClientRect().width : 0;\n      const textWidth = this.$refs.headText ? this.$refs.headText.getBoundingClientRect().width : 0;\n      this.showFadeOut = textWidth > headerWidth;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  @import '../../styles/variables.scss';\n\n  .base-drop-down {\n    display: inline-block;\n    position: relative;\n\n    .base-drop-down-label-wrapper {\n      margin-bottom: $spacing-small;\n\n      .base-drop-down-label {\n        color: $font-color-second;\n        margin-bottom: $spacing-small;\n      }\n    }\n\n    .base-drop-down-head {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      height: $row-height-small;\n      width: 100%;\n      line-height: $row-height-small;\n      cursor: pointer;\n      color: $font-color-second;\n      fill: $font-color-second;\n      background-color: $background-color;\n      padding: 0;\n\n      &.base-drop-down-head-spacing {\n        padding: 0 $spacing;\n      }\n\n      .base-drop-down-head-text-wrapper {\n        overflow: hidden;\n        position: relative;\n        margin-right: $spacing;\n        transition: all 0.2s ease;\n        width: 100%;\n        text-align: left;\n\n        .base-drop-down-head-text {\n          white-space: nowrap;\n          text-align: left;\n        }\n\n        &.base-drop-down-head-text-fade-out::after {\n          content: '';\n          height: 100%;\n          width: $fade-out-width;\n          position: absolute;\n          top: 0;\n          right: -1px;\n          background: linear-gradient(to right, rgba(240, 240, 240, 0) , rgba(240, 240, 240, 1));\n        }\n      }\n\n      &:hover {\n        color: $app-color;\n        fill: $app-color;\n      }\n\n      &:active .base-drop-down-icon, &:focus .base-drop-down-icon {\n        fill: $app-color;\n      }\n\n      &:disabled {\n        cursor: default;\n        color: $graytext-color;\n        fill: $graytext-color;\n\n        .base-drop-down-icon {\n          fill: $graytext-color;\n        }\n      }\n\n      .base-drop-down-icon {\n        transition: $drop-down-arrow-animation;\n        height: $icon-small;\n        width: $icon-small;\n        flex-shrink: 0;\n\n        &.base-drop-down-icon-rotated {\n          transform: rotate(180deg);\n        }\n      }\n    }\n\n    .base-drop-down-body {\n      position: absolute;\n      background-color: white;\n      z-index: map-get($zindex, dropdown);\n      box-shadow: $drop-shadow;\n      max-height: 300px;\n      max-width: calc(100vw - 3 * #{$spacing});\n      min-width: 100%;\n      overflow-y: auto;\n      overflow-x: hidden;\n      cursor: pointer;\n\n      .base-drop-down-body-list {\n\n        .base-drop-down-option {\n          min-height: $row-height-small;\n          padding: $spacing-small-half $spacing;\n          line-height: $line-height;\n          width: 100%;\n          transition: all 0.2s ease;\n\n          &.base-drop-down-option-selected {\n            color: $app-color;\n          }\n\n          &:hover, &.base-drop-down-option-key-selected {\n            background-color: $button-header-color;\n          }\n        }\n      }\n    }\n  }\n</style>\n"],"names":["_sfc_main","BaseIcon","ClickOutside","i18n","val","maxHeight","resizeObserver","debounce","option","event","key","headerWidth","textWidth"],"mappings":"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"}