import "lazysizes";
import n from "../BaseIcon/BaseIcon.vue.es.js";
import a from "../BaseImageBox/BaseImageBox.vue.es.js";
import "./BaseCarousel.vue.es2.js";
import "./BaseCarousel.vue.es3.js";
import o from "../../_virtual/_plugin-vue2_normalizer.es.js";
const p = {
  name: "BaseCarousel",
  components: {
    BaseIcon: n,
    BaseImageBox: a
  },
  props: {
    /**
     * items to display
     *
     * array of objects with the following **required** properties:
     *     **title** `?string` - the title to display.
     *     **subtext** `?string` - the text below the title.
     *     **description** `?string` - the type of item.
     *     **additional** `?string` - additional information (e.g. dates).
     *     **href** `string` - an url to follow upon item click - this is required if item should be rendered
     *      as a link element.
     *     **previews** `Object[]`- an array of image urls in different sizes in the following form:
     *     e.g. `[{ '460w': 'image-url' }, { '640w': 'image url' },...]`
     */
    items: {
      type: Array,
      default: () => []
    },
    /**
     * specify [swiper API options](https://swiperjs.com/swiper-api)
     */
    swiperOptions: {
      type: Object,
      default: () => ({})
    },
    /**
     * specify how the link element should be rendered -
     * this needs to be a valid vue link component (e.g. `RouterLink`, `NuxtLink`) and `vue-router` is necessary
     */
    renderLinkElementAs: {
      type: String,
      default: "RouterLink"
    }
  },
  data() {
    return {
      swiper: void 0,
      swiperIsActive: !1,
      swiperOptionsInt: {}
    };
  },
  computed: {
    boxSize() {
      return this.swiperIsActive ? { height: "400px" } : { "min-height": "250px", "max-height": "350px" };
    },
    vueRouterAvailable() {
      return !!this.$router;
    }
  },
  watch: {
    data() {
      this.swiper.update();
    },
    swiperOptions: {
      handler(e) {
        JSON.stringify(e) !== JSON.stringify(this.swiperOptionsInt) && (this.swiperOptionsInt = {
          ...this.swiperOptionsInt,
          ...JSON.parse(JSON.stringify(e))
        });
      },
      immediate: !0
    }
  },
  mounted() {
    this.initSwiper();
  },
  methods: {
    getImageSrc(e, t) {
      let s = "";
      return e && e.length && (s = e.map((i) => Object.keys(i)[0] === t ? Object.values(i)[0] : "").filter((i) => i !== "").toString(), s.length || (s = Object.values(e[0])[0])), s;
    },
    async initSwiper() {
      const { Swiper: e } = await import("swiper"), { Autoplay: t } = await import("swiper"), { Keyboard: s } = await import("swiper"), { Navigation: i } = await import("swiper"), { Pagination: r } = await import("swiper");
      this.swiperIsActive = !0, this.swiperOptionsInt.init = !1, this.swiperOptionsInt.autoplay && (this.swiperOptionsInt.autoplay = {}, this.swiperOptionsInt.autoplay.delay = this.swiperOptionsInt.autoplayDelay || 3e3, this.swiperOptionsInt.autoplay.disableOnInteraction = !0), this.swiperOptionsInt.navigation = {
        nextEl: ".swiper-button-next",
        prevEl: ".swiper-button-prev"
      }, this.swiperOptionsInt.modules = [t, s, i, r], setTimeout(() => {
        this.swiper = new e(".swiper", this.swiperOptionsInt), this.swiper.init(), this.$emit("initialized", !0);
      }, 0);
    },
    subtext(e) {
      return typeof e == "object" && typeof e[0] == "string" ? e.join(", ") : e;
    },
    boxClicked(e) {
      this.$emit("clicked", e);
    }
  }
};
var l = function() {
  var t = this, s = t._self._c;
  return s("div", [s("div", { staticClass: "base-carousel swiper" }, [s("div", { staticClass: "swiper-wrapper" }, t._l(t.items, function(i, r) {
    return s("div", { directives: [{ name: "show", rawName: "v-show", value: t.swiperIsActive, expression: "swiperIsActive" }], key: r, class: ["base-carousel-slide", { "swiper-slide": t.swiperIsActive }] }, [s("BaseImageBox", { staticStyle: { "margin-right": "0" }, attrs: { title: i.title, subtext: t.subtext(i.subtext), description: i.description, additional: i.additional, "image-url": t.getImageSrc(i.previews, t.items.length < 3 ? "768w" : "640w"), "box-size": t.boxSize, lazyload: !0, "image-first": !0, "center-header": !0, "render-element-as": t.vueRouterAvailable && i.href ? t.renderLinkElementAs : "div", "link-to": t.vueRouterAvailable && i.href ? i.href : "" }, on: { clicked: function(w) {
      return t.boxClicked(i);
    } } })], 1);
  }), 0), t.items.length > 2 ? s("div", { staticClass: "swiper-pagination" }) : t._e(), t.items.length > 1 ? [s("base-icon", { staticClass: "swiper-button swiper-button-prev", attrs: { name: "prev" } }), s("base-icon", { staticClass: "swiper-button swiper-button-next", attrs: { name: "next" } })] : t._e()], 2)]);
}, u = [], c = /* @__PURE__ */ o(
  p,
  l,
  u,
  !1,
  null,
  "f872ccc1",
  null,
  null
);
const b = c.exports;
export {
  b as default
};
//# sourceMappingURL=BaseCarousel.vue.es.js.map
