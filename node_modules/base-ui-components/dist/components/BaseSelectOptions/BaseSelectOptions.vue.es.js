import l from "../BaseButton/BaseButton.vue.es.js";
import "./BaseSelectOptions.vue.es2.js";
import n from "../../_virtual/_plugin-vue2_normalizer.es.js";
const i = {
  name: "BaseSelectOptions",
  components: {
    BaseButton: l
  },
  props: {
    /**
     * specify the text displayed for number of selected entries:
     * `x {selectedNumberText}`
     */
    selectedNumberText: {
      type: String,
      default: "entries selected"
    },
    /**
     * the text displayed for select / deselect all
     */
    selectText: {
      type: String,
      default: "All"
    },
    /**
     * the text displayed for select / deselect all
     */
    deselectText: {
      type: String,
      default: "None"
    },
    /**
     * provide a list of currently visible entries
     */
    list: {
      type: Array,
      default: () => []
    },
    /**
     * provide a list of selected entries
     */
    selectedList: {
      type: Array,
      default: () => []
    },
    /**
     * disable the button by setting this prop to true
     */
    selectAllDisabled: {
      type: Boolean,
      default: !1
    },
    /**
     * By default, the "All/None" button appears on the right, and the counter of
     * selected items appears on the left. Set this to `true` to reverse the order.
     */
    reverse: {
      type: Boolean,
      default: !1
    }
  },
  data() {
    return {
      selectedInt: !1,
      // used to change the flex direction of select options from 'row' to 'row-reverse' (#1692)
      flexDirection: "row"
    };
  },
  computed: {
    numberSelected() {
      return this.selectedList.length;
    },
    allSelected() {
      const s = this.selectedList.length && this.selectedList[0].id ? this.selectedList.map((t) => t.id) : this.selectedList;
      return this.list.filter((t) => !s.includes(t.id)).length === 0;
    }
  },
  watch: {
    allSelected: {
      handler(s) {
        s !== this.selectedInt && (this.selectedInt = s);
      },
      immediate: !0
    }
  },
  created() {
    this.flexDirection = this.reverse ? "row-reverse" : "row";
  },
  methods: {
    select() {
      this.selectedInt = !this.selectedInt, this.$emit("selected", this.selectedInt);
    }
  }
};
var c = function() {
  var e = this, t = e._self._c;
  return t("div", { staticClass: "base-select-options", style: { "--direction": e.flexDirection } }, [t("div", { staticClass: "base-select-options__number-selected" }, [e._t("selectedText", function() {
    return [e._v(" " + e._s(`${e.numberSelected} ${e.selectedNumberText}`) + " ")];
  })], 2), t("BaseButton", { staticClass: "base-select-options__select-button", attrs: { text: e.allSelected ? e.deselectText : e.selectText, disabled: e.selectAllDisabled, "button-style": "secondary" }, on: { clicked: e.select } })], 1);
}, r = [], d = /* @__PURE__ */ n(
  i,
  c,
  r,
  !1,
  null,
  "9e700383",
  null,
  null
);
const f = d.exports;
export {
  f as default
};
//# sourceMappingURL=BaseSelectOptions.vue.es.js.map
