import l from "../BaseIcon/BaseIcon.vue.es.js";
import "./BaseProgressBar.vue.es2.js";
import d from "../../_virtual/_plugin-vue2_normalizer.es.js";
const u = {
  name: "BaseProgressBar",
  components: {
    BaseIcon: l
  },
  props: {
    /**
     * additional error message
     */
    errorMessage: {
      type: String,
      default: ""
    },
    /**
     * filename that will be displayed in the bar
     */
    fileName: {
      type: String,
      default: ""
    },
    /**
     * filesize that will be displayed in the bar
     */
    fileSize: {
      type: String,
      default: ""
    },
    /**
     * progress of the upload (percentage)
     * @values 0-100
     */
    progress: {
      type: [Number, String],
      default: 0,
      validator(r) {
        return r >= 0 && r <= 100;
      }
    },
    /**
     * indicate the success or fail of an upload
     *   @values success, fail, ''
     */
    status: {
      type: String,
      default: "",
      validator(r) {
        return ["success", "fail", ""].includes(r);
      }
    },
    /**
     * show an remove icon
     */
    showRemove: {
      type: Boolean,
      default: !1
    }
  },
  data() {
    return {
      fadeOutDarkWidth: 30,
      showFadeOut: !0,
      showDarkFadeOut: !1
    };
  },
  watch: {
    progress(r) {
      if (this.showFadeOut) {
        const s = this.$refs.progressBarFadeOut.clientWidth, e = Math.ceil(this.$refs.progressBar.clientWidth / 100 * r), a = this.$refs.progressBarContent, i = window.getComputedStyle(a), n = Number(i.getPropertyValue("padding-left").replace("px", "")), t = this.$refs.progressBarFadeOut.offsetLeft + n;
        if (e >= t) {
          this.showDarkFadeOut = !0;
          const o = e - t;
          this.fadeOutDarkWidth = o > s ? 0 : s - o;
        } else
          this.fadeOutDarkWidth = s, this.showDarkFadeOut = !1;
      }
    }
  },
  mounted() {
    this.$refs && this.$refs.progressBarFileName && (this.showFadeOut = this.$refs.progressBarFileName.scrollWidth > this.$refs.progressBarFileName.clientWidth);
  },
  methods: {
    remove() {
      this.$emit("remove-item");
    }
  }
};
var f = function() {
  var s = this, e = s._self._c;
  return e("div", { ref: "progressBar", staticClass: "base-progress-bar", attrs: { "aria-valuenow": s.progress, role: "progressbar", "aria-valuemin": "0", "aria-valuemax": "100" } }, [e("div", { staticClass: "base-progress-bar__container" }, [e("div", { ref: "progressBarProgress", staticClass: "base-progress-bar__progress", style: { width: `${s.progress}%` } }), e("div", { ref: "progressBarContent", staticClass: "base-progress-bar__content" }, [e("div", { ref: "progressBarFileName", staticClass: "base-progress-bar__file-name" }, [s._v(" " + s._s(s.fileName) + " "), s.showFadeOut ? e("div", { ref: "progressBarFadeOut", class: [
    "base-progress-bar__fade-out",
    { "base-progress-bar__fade-out-hide": s.fadeOutDarkWidth === 0 }
  ] }) : s._e(), s.showFadeOut ? e("div", { class: [
    "base-progress-bar__fade-out-dark-window",
    { "base-progress-bar__fade-out-dark-window-show": s.showDarkFadeOut }
  ] }, [e("div", { staticClass: "base-progress-bar__fade-out-dark-cover", style: { transform: `translateX(-${s.fadeOutDarkWidth}px)` } }, [e("div", { staticClass: "base-progress-bar__fade-out-dark", style: { transform: `translateX(${s.fadeOutDarkWidth}px)` } })])]) : s._e()]), s.fileSize ? e("span", { staticClass: "base-progress-bar__file-size" }, [s._v(" " + s._s(s.fileSize) + " ")]) : s._e(), s.status === "success" ? e("base-icon", { staticClass: "base-progress-bar__status-icon base-progress-bar__status-icon-success", attrs: { name: "success" } }) : s._e(), s.status === "fail" ? e("base-icon", { staticClass: "base-progress-bar__status-icon base-progress-bar__status-icon-fail", attrs: { title: s.errorMessage, name: "attention" } }) : s._e(), s.showRemove ? e("base-icon", { staticClass: "base-progress-bar__status-icon base-progress-bar__status-icon-remove", attrs: { name: "remove" }, nativeOn: { click: function(a) {
    return s.remove.apply(null, arguments);
  } } }) : s._e()], 1)]), s.status === "fail" && s.errorMessage ? e("div", { staticClass: "base-progress-bar__error-message" }, [s._v(" " + s._s(s.errorMessage) + " ")]) : s._e()]);
}, c = [], p = /* @__PURE__ */ d(
  u,
  f,
  c,
  !1,
  null,
  "f3f8025c",
  null,
  null
);
const h = p.exports;
export {
  h as default
};
//# sourceMappingURL=BaseProgressBar.vue.es.js.map
