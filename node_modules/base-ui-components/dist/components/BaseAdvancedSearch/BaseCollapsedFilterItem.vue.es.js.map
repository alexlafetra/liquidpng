{"version":3,"file":"BaseCollapsedFilterItem.vue.es.js","sources":["../../../src/components/BaseAdvancedSearch/BaseCollapsedFilterItem.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"filterChip\"\n    role=\"listitem\"\n    tabindex=\"0\"\n    class=\"base-collapsed-filter-item\"\n    @keydown=\"removeChip\">\n    <!-- if value is single value of date or time range add an 'from' or 'until' character -->\n    <span\n      v-if=\"isDateOrTimeRange\"\n      class=\"base-collapsed-filter-item__until\">\n      {{ rangeIndicator }}\n    </span>\n    <!-- per default use BaseChip component except for type `boolean`\n      enable interpret-text-as-html for chips input fields and chips WITH ids -->\n    <BaseChip\n      v-if=\"!isBoolean && hasValue\"\n      :entry=\"value.labelInternal\"\n      :is-linked=\"true\"\n      :text-styling=\"chipStyling\"\n      :interpret-text-as-html=\"interpretLabelAsHtml && !!value.idInternal\"\n      :assistive-text=\"filterItemLabel\"\n      class=\"base-collapsed-filter-item__chip\"\n      @remove-entry=\"removeChip\" />\n    <!-- for boolean we use a checkmark icon instead of text -->\n    <div\n      v-else-if=\"isBoolean && hasValue\"\n      class=\"base-collapsed-filter-item__chip base-collapsed-filter-item__boolean-value\">\n      <BaseIcon\n        :title=\"filterItemLabel\"\n        name=\"check-mark\"\n        class=\"base-collapsed-filter-item__icon\" />\n      <BaseIcon\n        name=\"remove\"\n        class=\"base-collapsed-filter-item__icon-remove\"\n        @click.native.stop=\"removeChip\" />\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport BaseChip from '@/components/BaseChip/BaseChip';\nimport BaseIcon from '@/components/BaseIcon/BaseIcon';\n\nexport default {\n  name: 'BaseCollapsedFilterItem',\n  components: {\n    BaseIcon,\n    BaseChip,\n  },\n  props: {\n    /**\n     * the chip object to be displayed. Needs to be an object with idInternal (optional) and labelInternal\n     */\n    value: {\n      type: [Object],\n      required: true,\n      validator: val => Object.keys(val)\n        .includes('labelInternal'),\n    },\n    /**\n     * the `field_type` of the form field for which the chip should be displayed\n     */\n    type: {\n      type: String,\n      default: 'text',\n    },\n    /**\n     * for date and time ranges it needs to be determined if a 'until' character should\n     *  be displayed\n     */\n    rangeIndicator: {\n      type: String,\n      default: 'from',\n    },\n    /**\n     * needed for cursor styling if over chips if list is scrollable\n     */\n    isScrolling: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * needed for cursor styling if over chips\n     */\n    scrollable: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * if necessary selected chip text can be rendered as v-html directive\n     * will only be applied to values with `idInternal`\n     */\n    interpretLabelAsHtml: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * provide assistive text for boolean values and to inform user of chip\n     * removal options\n     *\n     * **booleanFilterLabel**: Set text that should be read for a boolean filter value. You may add\n     *  the string {label} which will be replaced by the filter label.\n     * **optionToRemoveSelected**: text read when an option is focused (and thus selected), should\n     *  announce to the screen reader user that option can now be removed via Backspace or Delete.\n     *  You may add the string {label} which will be replaced by the filter label.\n     */\n    assistiveText: {\n      type: Object,\n      default: () => ({\n        booleanFilterLabel: 'Filter was set.',\n        optionToRemoveSelected: 'Press delete or backspace to remove.',\n      }),\n    },\n  },\n  computed: {\n    /**\n     * is the type of the value to be displayed boolean\n     * @returns {boolean}\n     */\n    isBoolean() {\n      return this.type === 'boolean';\n    },\n    isDateOrTimeRange() {\n      return ['date', 'time'].includes(this.type) && this.rangeIndicator;\n    },\n    /**\n     * does the provided value exist and have a labelInternal\n     * @returns {boolean}\n     */\n    hasValue() {\n      return !!this.value && !!this.value.labelInternal;\n    },\n    /**\n     * need to overwrite chips styling cursor and user-select in case\n     *  row is scrollable - if not return empty object\n     * @returns {{cursor: (string), userSelect: (string)}|{}}\n     */\n    chipStyling() {\n      return this.scrollable ? ({\n        cursor: this.isScrolling ? 'grabbing' : 'grab',\n        userSelect: this.isScrolling ? 'none' : 'unset',\n      }) : {};\n    },\n    filterItemLabel() {\n      if (this.isBoolean && this.assistiveText.booleanFilterLabel\n        && this.assistiveText.optionToRemoveSelected) {\n        return `${this.assistiveText.booleanFilterLabel}. ${this.assistiveText.optionToRemoveSelected}`;\n      }\n      if (this.isBoolean && this.assistiveText.booleanFilterLabel) {\n        return this.assistiveText.booleanFilterLabel;\n      }\n      if (!this.isBoolean && this.assistiveText.optionToRemoveSelected) {\n        return `${this.value.labelInternal}. ${this.assistiveText.optionToRemoveSelected}`;\n      }\n      return this.value.labelInternal.toString();\n    },\n  },\n  methods: {\n    /**\n     * propagate to parent when the remove icon was clicked\n     */\n    removeChip(event) {\n      const { type, key } = event;\n      // if event is not coming from 'keydown' it should go through - if it is\n      // a keydown event we need to check if correct keys were triggered\n      if (type !== 'keydown' || (type === 'keydown' && ['Backspace', 'Delete'].includes(key))) {\n        /**\n         * inform parent about chip removal\n         * @event remove-chip\n         */\n        this.$emit('remove-chip');\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"../../styles/variables\";\n\n.base-collapsed-filter-item {\n  flex-shrink: 0;\n\n  &:focus {\n    .base-collapsed-filter-item__chip {\n      background-color: $app-color-secondary;\n    }\n  }\n\n  .base-collapsed-filter-item__boolean-value {\n    display: flex;\n    align-items: center;\n    background: $background-color;\n    padding: $chips-spacing 0 $chips-spacing $spacing-small;\n    margin: $chips-spacing*4 $spacing-small $chips-spacing*4 0;\n\n    .base-collapsed-filter-item__icon {\n      height: $icon-medium;\n      width: $icon-medium;\n    }\n    .base-collapsed-filter-item__icon-remove {\n      padding: $spacing-small;\n      height: calc(#{$icon-min} + (2 * #{$spacing-small}));\n      width: calc(#{$icon-min} + (2 * #{$spacing-small}));\n      cursor: pointer;\n    }\n  }\n\n  .base-collapsed-filter-item__until {\n    margin: 0 #{$spacing-small-half} 0 0;\n  }\n}\n</style>\n"],"names":["_sfc_main","BaseIcon","BaseChip","val","event","type","key"],"mappings":";;;;AA6CA,MAAAA,IAAA;AAAA,EACA,MAAA;AAAA,EACA,YAAA;AAAA,IACA,UAAAC;AAAA,IACA,UAAAC;AAAA,EACA;AAAA,EACA,OAAA;AAAA;AAAA;AAAA;AAAA,IAIA,OAAA;AAAA,MACA,MAAA,CAAA,MAAA;AAAA,MACA,UAAA;AAAA,MACA,WAAA,CAAAC,MAAA,OAAA,KAAAA,CAAA,EACA,SAAA,eAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,MAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,gBAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,aAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,YAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,sBAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,eAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA,OAAA;AAAA,QACA,oBAAA;AAAA,QACA,wBAAA;AAAA,MACA;AAAA,IACA;AAAA,EACA;AAAA,EACA,UAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,YAAA;AACA,aAAA,KAAA,SAAA;AAAA,IACA;AAAA,IACA,oBAAA;AACA,aAAA,CAAA,QAAA,MAAA,EAAA,SAAA,KAAA,IAAA,KAAA,KAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,WAAA;AACA,aAAA,CAAA,CAAA,KAAA,SAAA,CAAA,CAAA,KAAA,MAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,cAAA;AACA,aAAA,KAAA,aAAA;AAAA,QACA,QAAA,KAAA,cAAA,aAAA;AAAA,QACA,YAAA,KAAA,cAAA,SAAA;AAAA,MACA,IAAA;IACA;AAAA,IACA,kBAAA;AACA,aAAA,KAAA,aAAA,KAAA,cAAA,sBACA,KAAA,cAAA,yBACA,GAAA,KAAA,cAAA,kBAAA,KAAA,KAAA,cAAA,sBAAA,KAEA,KAAA,aAAA,KAAA,cAAA,qBACA,KAAA,cAAA,qBAEA,CAAA,KAAA,aAAA,KAAA,cAAA,yBACA,GAAA,KAAA,MAAA,aAAA,KAAA,KAAA,cAAA,sBAAA,KAEA,KAAA,MAAA,cAAA,SAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,SAAA;AAAA;AAAA;AAAA;AAAA,IAIA,WAAAC,GAAA;AACA,YAAA,EAAA,MAAAC,GAAA,KAAAC,EAAA,IAAAF;AAGA,OAAAC,MAAA,aAAAA,MAAA,aAAA,CAAA,aAAA,QAAA,EAAA,SAAAC,CAAA,MAKA,KAAA,MAAA,aAAA;AAAA,IAEA;AAAA,EACA;AACA;;;;;;;;;;;;;;;;;"}