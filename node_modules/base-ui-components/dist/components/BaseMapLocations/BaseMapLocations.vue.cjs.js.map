{"version":3,"file":"BaseMapLocations.vue.cjs.js","sources":["../../../src/components/BaseMapLocations/BaseMapLocations.vue"],"sourcesContent":["<template>\n  <div class=\"base-map-locations\">\n    <div\n      class=\"base-map-locations__map\"\n      :style=\"additionalMapStyles\">\n      <BaseMap\n        v-if=\"initMap\"\n        :attribution=\"attribution\"\n        :attribution-position=\"attributionPosition\"\n        :cluster-sizes=\"clusterSizes\"\n        :copyright=\"copyright\"\n        :center-marker=\"centeredMarker\"\n        :icon=\"icon\"\n        :icon-size=\"iconSize\"\n        :highlight-marker=\"highlightedMarker\"\n        :marker=\"locationsFiltered\"\n        :marker-popups=\"markerPopups\"\n        :max-zoom=\"maxZoom\"\n        :options=\"options\"\n        :style=\"additionalMapStyles\"\n        :tile-layer-service=\"tileLayerService\"\n        :url=\"url\"\n        :zoom=\"zoom\"\n        @highlighted=\"highlightLocation\" />\n    </div>\n\n    <h2\n      v-if=\"label\"\n      class=\"base-map-locations__label\">\n      {{ label }}\n    </h2>\n\n    <div class=\"base-map-locations__list\">\n      <template\n        v-for=\"(location, index) in locationsFiltered\">\n        <!-- TODO: leaving focusin and focusout events for now even though they have no effect\n          because component is not accessible at all in general -->\n        <BaseTextList\n          v-if=\"location.latLng || location.coordinates\"\n          :key=\"index\"\n          :data=\"[location]\"\n          :class=\"['base-map-locations__list__group',\n                   { 'base-map-locations__list__group--highlight': index === highlightedLocation }]\"\n          @click.native=\"centeredMarker = index\"\n          @focusin.native=\"highlightedMarker = index\"\n          @mouseenter.native=\"highlightedMarker = index\"\n          @focusout.native=\"resetMarker\"\n          @mouseleave.native=\"resetMarker\" />\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\nimport BaseTextList from '@/components/BaseTextList/BaseTextList';\n\n/**\n * A component to display Basemap, locations-list and interact with each other\n */\n\nexport default {\n  name: 'BaseMapLocations',\n  components: {\n    BaseMap: () => import('../BaseMap/BaseMap').then(m => m.default || m),\n    BaseTextList,\n  },\n  props: {\n    /**\n     * set additional styles for map e.g. height\n     */\n    additionalMapStyles: {\n      type: Object,\n      default: () => ({ height: '368px' }),\n    },\n    /**\n     * define map attribution\n     */\n    attribution: {\n      type: String,\n      default: 'Source: <a href=https://openstreetmap.org/>OpenStreetMap contributors</a>',\n    },\n    /**\n     * define position of map attribution\n     *   @values topright, bottomleft, bottomright\n     */\n    attributionPosition: {\n      type: String,\n      default: 'bottomright',\n      validate(val) {\n        return ['topright', 'bottomleft', 'bottomright'].includes(val);\n      },\n    },\n    /**\n     * define number of items for cluster sizes\n     *   structure: `{ medium: 5, large: 20, xlarge: 100 }`\n     *   Note: properties `medium`, `large`, `xlarge` are mandatory\n     */\n    clusterSizes: {\n      type: Object,\n      default: () => ({ medium: 5, large: 20, xlarge: 100 }),\n      validator: data => data.medium && data.large && data.xlarge,\n    },\n    /**\n     * define map copyright\n     */\n    copyright: {\n      type: String,\n      default: '<a href=http://creativecommons.org/licenses/by-sa/3.0/>CC BY-SA 3.0</a>',\n    },\n    /**\n     * define html code for a custom icon\n     */\n    icon: {\n      type: String,\n      // eslint-disable-next-line max-len\n      default: '<svg viewBox=\"0 0 70.866 70.866\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m35.433 0a22.731 22.731 0 0 0-22.731 22.82 24.125 24.125 0 0 0 1.872 9.1814l19.611 38.063a1.3718 1.3718 0 0 0 2.496 0l19.611-38.063a22.249 22.249 0 0 0 1.872-9.1814 22.731 22.731 0 0 0-22.731-22.82zm0 32.858a10.216 10.216 0 1 1 10.216-10.216 10.241 10.241 0 0 1-10.216 10.216z\" fill=\"#010101\"/></svg>',\n    },\n    /**\n     * define icon size\n     */\n    iconSize: {\n      type: Number,\n      default: 32,\n    },\n    /**\n     * define label for the locations-list\n     */\n    label: {\n      type: String,\n      default: 'Addresses',\n    },\n    /**\n     * define locations\n     *   structure: [{\n     *     coordinates: [16.382782, 48.208309],\n     *     latLng: [48.208309, 16.382782],\n     *     data: [ 'University of Applied Arts', 'Oskar Kokoschka-Platz 2',\n     *     '1010 Vienna', 'Austria']\n     *   }]\n     *   Note: either coordinates or latLng is mandatory\n     */\n    locations: {\n      type: Array,\n      default: () => [],\n      validator: data => data.filter(item => (item.latLng || item.coordinates)).length\n        === data.length,\n    },\n    /**\n     * deactivate popups for marker\n     */\n    markerPopups: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * define max zoom factor\n     */\n    maxZoom: {\n      type: Number,\n      default: 18,\n    },\n    /**\n     * define custom options for map data\n     *   e.g. {\n     *          style: 'normal',\n     *          subdomains: ['mapsneu'],\n     *          tileMatrixSet: 'google3857',\n     *          type: 'geolandbasemap'\n     *   }\n     *\n     *   usage custom keys in `url` property:\n     *   https://{s}.wien.gv.at/basemap/{type}/{style}/{tileMatrixSet}/{z}/{y}/{x}.png\n     *\n     *   for more information refer to the [Leaflet TileLayer documentation](https://leafletjs.com/reference.html#tilelayer)\n     */\n    options: {\n      type: Object,\n      default: () => ({}),\n    },\n    /**\n     * define url to tileLayer service\n     */\n    url: {\n      type: String,\n      default: '',\n    },\n    /**\n     * specify service for the [tileLayer](https://leafletjs.com/examples/wms/wms.html)\n     * @values WMTS, TMS, WMS'\n     */\n    tileLayerService: {\n      type: String,\n      default: 'WMTS',\n      validator(val) {\n        return ['WMTS', 'TMS', 'WMS'].includes(val);\n      },\n    },\n    /**\n     * define initial zoom factor\n     */\n    zoom: {\n      type: Number,\n      default: 16,\n    },\n  },\n  data() {\n    return {\n      highlightedMarker: null,\n      highlightedLocation: null,\n      centeredMarker: null,\n      initMap: false,\n    };\n  },\n  computed: {\n    // Observer to check if component is in viewport and show baseMap\n    observer() {\n      return new IntersectionObserver((entries, observer) => {\n        entries.forEach((entry) => {\n          // If the entry is not in the viewport, do nothing\n          if (!entry.isIntersecting) return;\n\n          // Stop observing\n          observer.unobserve(entry.target);\n\n          // Init map\n          this.initMap = true;\n        });\n      });\n    },\n    // compare marker objects and remove duplicates\n    locationsFiltered() {\n      return Array.from(new Set(this.locations.map(JSON.stringify))).map(JSON.parse);\n    },\n  },\n  beforeDestroy() {\n    this.observer.disconnect();\n  },\n  mounted() {\n    // Add observer to check if component is in viewport and init baseMap\n    this.observer.observe(this.$el);\n  },\n  methods: {\n    highlightLocation(value) {\n      this.highlightedLocation = value;\n    },\n    resetMarker() {\n      this.highlightedMarker = null;\n      this.centeredMarker = null;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  @import \"../../styles/variables\";\n\n  .base-map-locations {\n\n    &__map {\n      margin-bottom: $spacing;\n    }\n\n    &__list {\n      display: flex;\n      flex-wrap: wrap;\n\n      &__group {\n        width: calc(33% - #{$spacing-large});\n        margin-right: $spacing-large;\n        margin-bottom: $spacing;\n\n        @media screen and (max-width: $tablet) {\n          width: calc(50% - #{$spacing});\n          margin-right: $spacing;\n          margin-bottom: $spacing;\n        }\n\n        @media screen and (max-width: $mobile) {\n          width: 100%;\n          margin-bottom: $spacing-small;\n        }\n\n        .base-text-list__content {\n          transition: color 250ms ease-in-out;\n        }\n\n        &--highlight :deep(.base-text-list__content) {\n          color: $app-color !important;\n        }\n\n        &:hover ::v-deep {\n          cursor: pointer;\n\n          .base-text-list__content {\n            color: $app-color !important;\n          }\n        }\n      }\n    }\n  }\n</style>\n"],"names":["_sfc_main","m","BaseTextList","val","data","item","entries","observer","entry","value"],"mappings":"kRA4DAA,EAAA,CACA,KAAA,mBACA,WAAA,CACA,QAAA,IAAA,QAAA,QAAA,EAAA,KAAA,IAAA,QAAA,+BAAA,GAAA,KAAAC,GAAAA,EAAA,SAAAA,CAAA,EACA,aAAAC,EAAA,OACA,EACA,MAAA,CAIA,oBAAA,CACA,KAAA,OACA,QAAA,KAAA,CAAA,OAAA,SACA,EAIA,YAAA,CACA,KAAA,OACA,QAAA,2EACA,EAKA,oBAAA,CACA,KAAA,OACA,QAAA,cACA,SAAAC,EAAA,CACA,MAAA,CAAA,WAAA,aAAA,aAAA,EAAA,SAAAA,CAAA,CACA,CACA,EAMA,aAAA,CACA,KAAA,OACA,QAAA,KAAA,CAAA,OAAA,EAAA,MAAA,GAAA,OAAA,MACA,UAAAC,GAAAA,EAAA,QAAAA,EAAA,OAAAA,EAAA,MACA,EAIA,UAAA,CACA,KAAA,OACA,QAAA,yEACA,EAIA,KAAA,CACA,KAAA,OAEA,QAAA,2XACA,EAIA,SAAA,CACA,KAAA,OACA,QAAA,EACA,EAIA,MAAA,CACA,KAAA,OACA,QAAA,WACA,EAWA,UAAA,CACA,KAAA,MACA,QAAA,IAAA,CAAA,EACA,UAAAA,GAAAA,EAAA,OAAAC,GAAAA,EAAA,QAAAA,EAAA,WAAA,EAAA,SACAD,EAAA,MACA,EAIA,aAAA,CACA,KAAA,QACA,QAAA,EACA,EAIA,QAAA,CACA,KAAA,OACA,QAAA,EACA,EAeA,QAAA,CACA,KAAA,OACA,QAAA,KAAA,CAAA,EACA,EAIA,IAAA,CACA,KAAA,OACA,QAAA,EACA,EAKA,iBAAA,CACA,KAAA,OACA,QAAA,OACA,UAAAD,EAAA,CACA,MAAA,CAAA,OAAA,MAAA,KAAA,EAAA,SAAAA,CAAA,CACA,CACA,EAIA,KAAA,CACA,KAAA,OACA,QAAA,EACA,CACA,EACA,MAAA,CACA,MAAA,CACA,kBAAA,KACA,oBAAA,KACA,eAAA,KACA,QAAA,EACA,CACA,EACA,SAAA,CAEA,UAAA,CACA,OAAA,IAAA,qBAAA,CAAAG,EAAAC,IAAA,CACAD,EAAA,QAAAE,GAAA,CAEAA,EAAA,iBAGAD,EAAA,UAAAC,EAAA,MAAA,EAGA,KAAA,QAAA,GACA,CAAA,CACA,CAAA,CACA,EAEA,mBAAA,CACA,OAAA,MAAA,KAAA,IAAA,IAAA,KAAA,UAAA,IAAA,KAAA,SAAA,CAAA,CAAA,EAAA,IAAA,KAAA,KAAA,CACA,CACA,EACA,eAAA,CACA,KAAA,SAAA,YACA,EACA,SAAA,CAEA,KAAA,SAAA,QAAA,KAAA,GAAA,CACA,EACA,QAAA,CACA,kBAAAC,EAAA,CACA,KAAA,oBAAAA,CACA,EACA,aAAA,CACA,KAAA,kBAAA,KACA,KAAA,eAAA,IACA,CACA,CACA"}