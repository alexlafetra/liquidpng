import "./BaseBox.vue.es2.js";
import a from "../../_virtual/_plugin-vue2_normalizer.es.js";
const l = {
  name: "BaseBox",
  props: {
    /**
     * specify the tag type of the box
     */
    renderElementAs: {
      type: String,
      default: "div"
    },
    /**
     * define the size of the box
     * should be an object with width and / or height
     */
    boxSize: {
      type: Object,
      default: () => ({ width: "200px" })
    },
    /**
     * define the ratio of width and height of the box
     * (in percent string, e.g. 1:1 --> '100', 1:2 --> '50')
     */
    boxRatio: {
      type: String,
      default: "100"
    },
    /**
     *  enable or disable hover
     */
    boxHover: {
      type: Boolean,
      default: !0
    },
    /**
     *  set boxShadow size
     *  @values large, small, none
     */
    boxShadowSize: {
      type: String,
      default: "small",
      validator: (t) => ["none", "small", "large"].includes(t)
    },
    /**
     * set disabled attribute (e.g. for button elements)
     */
    disabled: {
      type: Boolean,
      default: !1
    },
    additionalAttributes: {
      type: Object,
      default: () => ({})
    }
  },
  methods: {
    clicked(t) {
      this.$emit("clicked", t);
    }
  }
};
var n = function() {
  var e = this, o = e._self._c;
  return o(e.renderElementAs, e._b({ tag: "compontent", class: [
    "base-box",
    "base-box-" + e.$props.boxRatio,
    "base-box-shadow-" + e.boxShadowSize,
    { "base-box-hover": e.boxHover && !e.disabled }
  ], style: e.boxSize, attrs: { disabled: e.disabled, type: e.renderElementAs === "button" ? "button" : "" }, on: { click: e.clicked } }, "compontent", e.additionalAttributes, !1), [e._t("default")], 2);
}, s = [], d = /* @__PURE__ */ a(
  l,
  n,
  s,
  !1,
  null,
  "a080b5a2",
  null,
  null
);
const b = d.exports;
export {
  b as default
};
//# sourceMappingURL=BaseBox.vue.es.js.map
