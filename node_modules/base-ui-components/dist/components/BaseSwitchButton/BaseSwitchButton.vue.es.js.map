{"version":3,"file":"BaseSwitchButton.vue.es.js","sources":["../../../src/components/BaseSwitchButton/BaseSwitchButton.vue"],"sourcesContent":["<template>\n  <fieldset\n    :class=\"['base-switch-buttons', { 'base-switch-buttons--gap': type === 'prominent' }]\">\n    <!-- we need to separate legend here from the actually displayed label because\n      legend is not accessible if wrapped in a span but i can not style the legend the way\n      i want without the span -->\n    <legend\n      class=\"hide\">\n      {{ label }}\n    </legend>\n    <span\n      :class=\"['base-switch-buttons__legend', { 'hide': !showLabel },\n               { 'base-switch-buttons__legend--disabled': disabled },\n               { 'base-switch-buttons__legend--gap': type === 'normal' }]\">\n      {{ label }}\n    </span>\n\n    <template\n      v-for=\"(option, index) in options\">\n      <label\n        :key=\"option.value + 'label'\"\n        :for=\"optionIds[index]\"\n        :title=\"!showButtonsLabelInt ? option.label : undefined\"\n        :class=\"['base-switch-buttons__button',\n                 `base-switch-buttons__button--${type}`,\n                 { [`base-switch-buttons__button--${type}-active`]: option.value === selectedOption },\n                 { 'base-switch-buttons__button--icon-only': !showButtonsLabel },\n                 { 'base-switch-buttons__button--disabled': disabled }]\">\n        <input\n          :id=\"optionIds[index]\"\n          :key=\"option.value + 'input'\"\n          v-model=\"selectedOption\"\n          :tabindex=\"option.value === selectedOption ? 0 : -1\"\n          :checked=\"option.value === selectedOption\"\n          :aria-checked=\"option.value === selectedOption\"\n          :value=\"option.value\"\n          :name=\"label\"\n          :disabled=\"disabled\"\n          class=\"hide\"\n          type=\"radio\"\n          @keydown.enter.prevent=\"\">\n        <BaseIcon\n          v-if=\"option?.icon?.length > 0 && iconPosition === 'left'\"\n          :name=\"option.icon\"\n          :class=\"['base-switch-buttons__icon',\n                   `base-switch-buttons__icon--${iconSize}`]\" />\n        <span\n          v-if=\"showButtonsLabelInt\">\n          {{ option.label }}\n        </span>\n        <BaseIcon\n          v-if=\"option?.icon?.length > 0 && iconPosition === 'right'\"\n          :name=\"option.icon\"\n          :class=\"['base-switch-buttons__icon',\n                   `base-switch-buttons__icon--${iconSize}`]\" />\n        <!-- @slot slot to display something right of text (e.g. icon), or if `showButtonsLabel` false - generally right of the button content\n        @binding {string} value - the value of the option object\n        --->\n        <slot\n          :value=\"option.value\"\n          name=\"right-of-content\" />\n      </label>\n    </template>\n  </fieldset>\n</template>\n\n<script>\nimport BaseIcon from '../BaseIcon/BaseIcon';\n/**\n * accessible tab switch buttons\n */\nexport default {\n  name: 'BaseSwitchButton',\n  components: { BaseIcon },\n  model: {\n    prop: 'activeTab',\n    event: 'switch',\n  },\n  props: {\n    /**\n     * specify the tabs as array of object with `value`, `label` and (optional) `icon` properties\n     */\n    options: {\n      type: Array,\n      default: () => [{ label: 'tab', value: 'tab', icon: '' }],\n      validator: arr => arr.every(val => ['label', 'value'].every(prop => Object.keys(val).includes(prop))),\n    },\n    /**\n     * set the currently active tab (specify the value of the object not the label)\n     */\n    activeTab: {\n      type: String,\n      required: true,\n      default: () => (this.options[0] ? this.options[0].value : 'tab'),\n    },\n    /**\n     * set a label for the switches, not visible per default (set `showLabel` to `true` if label should be shown) but required for accessibility\n     */\n    label: {\n      type: String,\n      required: true,\n    },\n    /**\n     * set a type for the button's active state rendering style\n     *  **normal**: gives the switch a more subtle, more condensed look with active item only indicated by grey border,\n     *    buttons have a label per default (`showButtonsLabel` is `true`).\n     *  **prominent**: larger buttons with more spacing and permanent border around each item, active item is\n     *    indicated by a 2px (app-)colored bottom border, button labels are not shown per default (`showButtonsLabel` is `false`)\n     *    so the property `icon` should be set for each switch item in `options`.\n     */\n    type: {\n      type: String,\n      default: 'normal',\n      validator: val => ['normal', 'prominent'].includes(val),\n    },\n    /**\n     * set if the switch label is shown\n     */\n    showLabel: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * define if the label of the single buttons should be shown (or just icons). This\n     * property is default undefined and is determined internally individually for each type:\n     *  **normal**: default is `true`\n     *  **prominent**: default is `false`\n     */\n    showButtonsLabel: {\n      type: Boolean,\n      default: undefined,\n    },\n    /**\n     * specify where the icon should be rendered\n     */\n    iconPosition: {\n      type: String,\n      default: 'right',\n      validator: val => ['right', 'left'].includes(val),\n    },\n    /**\n     * specify icon size\n     * this prop currently only applies to `type` 'prominent'\n     */\n    iconSize: {\n      type: String,\n      default: 'medium',\n      validator(val) {\n        return ['small', 'medium', 'large'].includes(val);\n      },\n    },\n    /**\n     * set true if the buttons should be visible but disabled, so they\n     * will appear greyed out and not be clickable\n     */\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      selectedOption: this.activeTab,\n    };\n  },\n  computed: {\n    // to ensure a unique id (made problems on field duplication)\n    optionIds() {\n      return this.options.map(option => this.generateId(option.value));\n    },\n    defaultShowButtonsLabel() {\n      return this.type === 'normal';\n    },\n    showButtonsLabelInt() {\n      return this.showButtonsLabel ?? this.defaultShowButtonsLabel;\n    },\n  },\n  watch: {\n    selectedOption(val) {\n      /**\n       * Event emitted on options switch, value of options object is emitted\n       *\n       * @event switch\n       * @param { string } - the `value` of the selected option object\n       */\n      this.$emit('switch', val);\n    },\n    activeTab(val) {\n      if (val !== this.selectedOption) {\n        this.selectedOption = val;\n      }\n    },\n  },\n  methods: {\n    generateId(value) {\n      return `${value}${(Math.floor(Math.random() * 1000000)).toString()}`;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  @import '../../styles/variables.scss';\n\n  .base-switch-buttons {\n    clear: both;\n    display: flex;\n    position: relative;\n    align-items: center;\n    background-color: inherit;\n\n    &.base-switch-buttons--gap {\n      gap: $spacing;\n    }\n\n    .base-switch-buttons__legend {\n      display: flex;\n\n      &.base-switch-buttons__legend--disabled {\n        color: $font-color-second;\n      }\n\n      &.base-switch-buttons__legend--gap {\n        padding-right: $spacing-small;\n      }\n    }\n\n    .base-switch-buttons__button {\n      position: relative;\n      display: inline-flex;\n      align-items: center;\n      gap: $spacing-small;\n      padding: $spacing-small-half $spacing;\n      cursor: pointer;\n      background-color: inherit;\n      flex: 0 0 auto;\n      transition: border 0.2s ease;\n\n      &.base-switch-buttons__button--normal {\n        // white border to prevent twitching when adding colored border\n        border: 1px solid rgba(255, 255, 255, 0);\n\n        &.base-switch-buttons__button--normal-active {\n          border: $input-field-border;\n        }\n\n        &:focus-within {\n          border-bottom-color: $app-color;\n        }\n      }\n\n      &.base-switch-buttons__button--prominent {\n        justify-content: center;\n        border: $input-field-border;\n        height: $row-height-small;\n\n        &.base-switch-buttons__button--prominent-active {\n          box-shadow: inset 0 -#{$border-width} 0 0 #{$app-color};\n\n          &.base-switch-buttons__button--disabled {\n            box-shadow: inset 0 -#{$border-width} 0 0 #{$graytext-color};\n          }\n        }\n\n        &.base-switch-buttons__button--icon-only {\n          width: 50px;\n          padding: 0;\n        }\n\n        &:focus-within {\n          border-color: $app-color;\n        }\n      }\n\n      .base-switch-buttons__icon {\n        flex: 0 0 auto;\n\n        &.base-switch-buttons__icon--small {\n          height: $icon-small;\n          width: $icon-small;\n        }\n\n        &.base-switch-buttons__icon--medium {\n          height: $icon-medium;\n          width: $icon-medium;\n        }\n\n        &.base-switch-buttons__icon--large {\n          height: $icon-large;\n          width: $icon-large;\n        }\n      }\n\n      &:hover .base-switch-buttons__icon,\n      &:active .base-switch-buttons__icon {\n        color: $app-color;\n      }\n\n      &.base-switch-buttons__button--disabled {\n        cursor: default;\n        color: $graytext-color;\n\n        &:hover .base-switch-buttons__icon,\n        &:active .base-switch-buttons__icon {\n          color: $graytext-color;\n        }\n      }\n    }\n  }\n\n  @media screen and (max-width: $mobile) {\n    .base-switch-buttons {\n      margin: $spacing-small 0;\n\n      .base-switch-buttons__button {\n        padding: $spacing-small $spacing;\n\n        &.base-switch-buttons__button--prominent {\n          height: calc(#{$row-height-small} + #{$spacing-small});\n        }\n      }\n    }\n  }\n</style>\n"],"names":["_sfc_main","BaseIcon","arr","val","prop","this","option","value"],"mappings":";;;AAuEA,MAAAA,IAAA;AAAA,EACA,MAAA;AAAA,EACA,YAAA,EAAA,UAAAC,EAAA;AAAA,EACA,OAAA;AAAA,IACA,MAAA;AAAA,IACA,OAAA;AAAA,EACA;AAAA,EACA,OAAA;AAAA;AAAA;AAAA;AAAA,IAIA,SAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA,MAAA,CAAA,EAAA,OAAA,OAAA,OAAA,OAAA,MAAA,IAAA;AAAA,MACA,WAAA,CAAAC,MAAAA,EAAA,MAAA,CAAAC,MAAA,CAAA,SAAA,OAAA,EAAA,MAAA,CAAAC,MAAA,OAAA,KAAAD,CAAA,EAAA,SAAAC,CAAA,CAAA,CAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,WAAA;AAAA,MACA,MAAA;AAAA,MACA,UAAA;AAAA,MACA,SAAA,MAAAC,WAAA,QAAA,CAAA,IAAAA,WAAA,QAAA,CAAA,EAAA,QAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,OAAA;AAAA,MACA,MAAA;AAAA,MACA,UAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,MAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,MACA,WAAA,CAAAF,MAAA,CAAA,UAAA,WAAA,EAAA,SAAAA,CAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,WAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,kBAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,cAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,MACA,WAAA,CAAAA,MAAA,CAAA,SAAA,MAAA,EAAA,SAAAA,CAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,UAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,MACA,UAAAA,GAAA;AACA,eAAA,CAAA,SAAA,UAAA,OAAA,EAAA,SAAAA,CAAA;AAAA,MACA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,UAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,OAAA;AACA,WAAA;AAAA,MACA,gBAAA,KAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,UAAA;AAAA;AAAA,IAEA,YAAA;AACA,aAAA,KAAA,QAAA,IAAA,CAAAG,MAAA,KAAA,WAAAA,EAAA,KAAA,CAAA;AAAA,IACA;AAAA,IACA,0BAAA;AACA,aAAA,KAAA,SAAA;AAAA,IACA;AAAA,IACA,sBAAA;AACA,aAAA,KAAA,oBAAA,KAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,OAAA;AAAA,IACA,eAAAH,GAAA;AAOA,WAAA,MAAA,UAAAA,CAAA;AAAA,IACA;AAAA,IACA,UAAAA,GAAA;AACA,MAAAA,MAAA,KAAA,mBACA,KAAA,iBAAAA;AAAA,IAEA;AAAA,EACA;AAAA,EACA,SAAA;AAAA,IACA,WAAAI,GAAA;AACA,aAAA,GAAAA,CAAA,GAAA,KAAA,MAAA,KAAA,OAAA,IAAA,GAAA,EAAA,SAAA,CAAA;AAAA,IACA;AAAA,EACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}