"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const d=require("vue"),u=require("../../utils/utils.cjs.js"),m=require("../../directives/InsertTextAsHtml.cjs.js"),f=require("./BaseAdvancedSearchRow.vue.cjs.js"),h=require("../../composables/useAnnouncer.cjs.js");require("./BaseAdvancedSearch.vue.cjs2.js");const y=require("../../_virtual/_plugin-vue2_normalizer.cjs.js"),F={name:"BaseAdvancedSearch",components:{BaseAdvancedSearchRow:f.default,BaseCollapsedFilterRow:d.defineAsyncComponent(()=>Promise.resolve().then(()=>require("./BaseCollapsedFilterRow.vue.cjs.js")).then(t=>t.default||t)),BaseForm:d.defineAsyncComponent(()=>Promise.resolve().then(()=>require("../BaseForm/BaseForm.vue.cjs.js")).then(t=>t.default||t)),BaseButton:d.defineAsyncComponent(()=>Promise.resolve().then(()=>require("../BaseButton/BaseButton.vue.cjs.js")).then(t=>t.default||t))},directives:{insertTextAsHtml:m.default},props:{mode:{type:String,default:"list",validator:t=>["list","form"].includes(t)},filterList:{type:Array,default:()=>[],validator:t=>!t.length||t.every(e=>!!e.type&&(!["chips","chipssingle"].includes(e.type)||e.freetext_allowed||!!e.options))},appliedFilters:{type:Array,default:()=>[],validator:t=>!t.length||t.every(e=>e.type)},defaultFilter:{type:Object,default:()=>({label:"Fulltext",id:"default",type:"text",options:[],filter_values:[]}),validator:t=>t===null||t.type&&(!["chips","chipssingle"].includes(t.type)||t.options)},formFilterList:{type:Object,default:()=>({})},formFilterValues:{type:Object,default:()=>({})},formProps:{type:Object,default:()=>({})},autocompleteResults:{type:Array,default:()=>[]},language:{type:String,default:"en"},isLoadingIndex:{type:Number,default:-1},advancedSearchText:{type:Object,default:()=>({title:"Advanced Search",subtext:"Select a filter",availableOptions:"Available options",collapsedDateTime:{from:"from",until:"until",range:"to"},advancedButtonLabel:"Advanced Search"})},dropDownInfoTexts:{type:Object,default:()=>({autocompleteNoOptions:"No matching options found",autocompleteOngoing:"Autocomplete is being fetched...",autocompleteInitial:"Please start typing or select a filter to see options",chipsNoOptions:"No more options available",chipsMaxOptions:"Please start typing to see options",chipsNoMatch:"No matching options were found",chipsOngoing:"Options are being loaded..."}),validator:t=>["autocompleteNoOptions","autocompleteOngoing","autocompleteInitial","chipsNoOptions","chipsOngoing","chipsMaxOptions","chipsNoMatch"].every(e=>Object.keys(t).includes(e))},placeholder:{type:[Object,String],default:()=>({filterRow:"Add values to your filter",main:"Search and Discover"}),validator:t=>typeof t=="string"||["filterRow","main"].every(e=>Object.keys(t).includes(e))},identifierPropertyName:{type:[Object,String],default:()=>({filter:"id",autocompleteOption:"id",controlledVocabularyOption:"id",formInputs:"source"})},labelPropertyName:{type:[Object,String],default:()=>({filter:"label",autocompleteOption:"title",controlledVocabularyOption:"label",formInputs:"label"})},autocompletePropertyNames:{type:Object,default:()=>({label:"label",id:"id",data:"data"}),validator:t=>["id","label","data"].every(e=>Object.keys(t).includes(e))},assistiveText:{type:Object,default:()=>({addFilter:"Add filter",removeFilter:"Remove filter",selectFilterLabel:"Select filter",searchLabel:"Search for Entries",selectedOption:"",autocompleteLoaderActive:"loading options.",autocompleteResultsRetrieved:"{optionsNumber} options found in {collectionsNumber} categories.",autocompleteNoResults:"No results found.",autocompleteInitial:"Please start typing to see suggestions.",categoryAnnouncement:"category {label}.",optionsAnnouncement:"{number} options.",autocompleteOptionFilledToForm:"option {optionLabel} filled to field {fieldLabel}.",advancedButtonDescription:"Click to {state} advanced search form.",formState:{open:"open",close:"close"},removeAllFiltersLabel:"Remove all filters.",removeFilterValueNotification:"Filter value {value} was removed from filter {label}.",collapsedFilterRowRemovedNotification:"All search filters were reset.",collapsedAppliedFiltersLabel:"Currently applied Filters",collapsedBooleanFilterValue:"Filter {label} was set",collapsedOptionToRemoveSelected:"Press delete or backspace to remove.",results:""})},applyBoxShadow:{type:Boolean,default:!0},dateFieldDelay:{type:Number,default:0},advancedFormOpen:{type:Boolean,default:!0},highlightAutocompleteMatch:{type:Boolean,default:!1},highlightAutocompleteTags:{type:Array,default:()=>[]},interpretFormChipsLabelAsHtml:{type:Boolean,default:!1}},emits:["search","fetch-autocomplete","fetch-form-autocomplete","update:applied-filters","update:form-filter-values","update:advanced-form-open"],setup(){const t=d.ref(null),{announcement:e}=h.useAnnouncer(t);return{searchContainer:t,announcement:e}},data(){return{appliedFiltersInt:[],mainFilter:null,filtersAutocompleteResults:[],autocompleteIndex:-1,originalMainFilter:null,formOpen:!0,formFilterValuesInt:{},originalFilterValues:null,formMounted:!1,resizeObserver:null,showAdvancedSearchButtonText:!0,assistiveTextNotification:""}},computed:{amendedFormProps(){if(!this.interpretFormChipsLabelAsHtml)return this.formProps;const t=this.formProps.fieldProps||{},e=this.renderFormChipsLabelAsHtml.reduce((s,i)=>({...s,...this.addNewPropertyValueToNestedObject(i,t||{},"interpretChipsLabelAsHtml",!0,!1)}),{});return{...this.formProps,fieldProps:{...t,...e}}},filtersLoadingState(){return[...this.appliedFiltersInt.map((t,e)=>this.autocompleteIndex===e),this.autocompleteIndex===this.appliedFiltersInt.length]},displayedFilters(){const t=[...this.filterList].filter(e=>!e.hidden);return u.sort(t,this.labelPropertyName.filter)},mainFilterIndex(){const t=this.appliedFilters.length-1;return t>0?t:0},collapsedFiltersArray:{get(){return Object.entries(this.formFilterValuesInt).filter(([,t])=>u.hasData(t)).sort(([t],[e])=>this.formFilterList[t]&&this.formFilterList[e]&&this.formFilterList[t]["x-attrs"].order>this.formFilterList[e]["x-attrs"].order?1:-1).map(([t,e])=>{const s=this.formFilterList[t],i=s.type==="array"&&!s["x-attrs"].field_type.includes("chips");return(i?e:[e]).map((l,o)=>({labelInternal:s.title,idInternal:`${t}${i?`-group-${o}`:""}`,filter_values:this.getCollapsedFilterValue(l,s,t)}))}).flat()},set(t){this.formFilterValuesInt=t.reduce((e,s)=>{const[,i,r]=s.idInternal.match(/(.*?)(-group-\d*)?$/),l=this.formFilterList[i],o=this.setFormFilterValues(s.filter_values,l),a=r&&e&&e[i]?e[i]:[];return{...e,[i]:r?a.concat(o):o}},{}),this.search()}},renderFormChipsLabelAsHtml(){const{fieldProps:t}=this.formProps;if(!t)return this.interpretFormChipsLabelAsHtml;const e=this.filterHtmlRenderFields(this.formFilterList);return e.length?e:this.interpretFormChipsLabelAsHtml},rowId(){return u.createId()},advancedButtonDescription(){return this.assistiveText.advancedButtonDescription?this.assistiveText.advancedButtonDescription.replace("{state}",this.assistiveText.formState[this.formOpen?"close":"open"]):""}},watch:{autocompleteResults(t){this.autocompleteIndex>=0&&(this.$set(this.filtersAutocompleteResults,this.autocompleteIndex,[...t]),this.autocompleteIndex=-1)},appliedFiltersInt:{handler(t){JSON.stringify(t)!==JSON.stringify(this.appliedFilters.slice(1))&&this.$emit("update:applied-filters",[...t,this.mainFilter])},deep:!0},appliedFilters:{handler(t){t&&JSON.stringify(t.slice(0,-1))!==JSON.stringify(this.appliedFiltersInt)&&([,...this.appliedFiltersInt]=JSON.parse(JSON.stringify([t,...t.slice(0,-1)]))),t&&t.length>=1&&JSON.stringify(this.mainFilter)!==JSON.stringify(t[this.mainFilterIndex])?[this.mainFilter]=JSON.parse(JSON.stringify(t.slice(-1))):(!t||t<1)&&(this.mainFilter={...this.defaultFilter})},immediate:!0},mainFilter(t){if(t&&t.filter_values){const e=u.hasData(t.filter_values),s=!!this.originalMainFilter&&!!this.originalMainFilter.filter_values&&u.hasData(this.originalMainFilter.filter_values);this.originalMainFilter&&(e&&this.originalMainFilter[this.identifierPropertyName.filter]!==t[this.identifierPropertyName.filter]||e!==s||e&&s&&JSON.stringify(this.originalMainFilter.filter_values!==JSON.stringify(t.filter_values)))&&(this.originalMainFilter=JSON.parse(JSON.stringify(this.mainFilter)),this.search(!0))}this.$emit("update:applied-filters",[...this.appliedFiltersInt,t]),this.$emit("update:form-filter-values",{...this.formFilterValuesInt,default:this.mainFilter.filter_values})},formFilterValuesInt:{handler(t){const e={...this.formFilterValues};this.$delete(e,"default"),JSON.stringify(t)!==JSON.stringify(e)&&this.$emit("update:form-filter-values",{...t,default:this.mainFilter.filter_values})},deep:!0},formFilterValues:{handler(t){if(this.mode==="form"&&t&&JSON.stringify(t)!==JSON.stringify({...this.formFilterValuesInt,default:this.mainFilter.filter_values})){const{default:e,...s}=t;this.formFilterValuesInt=JSON.parse(JSON.stringify(s)),this.$set(this.mainFilter,"filter_values",t.default||[""]),this.search()}},immediate:!0},advancedFormOpen:{handler(t){this.formOpen=t},immediate:!0},formOpen(t){this.$emit("update:advanced-form-open",t)},assistiveTextNotification(t){t&&setTimeout(()=>{this.assistiveTextNotification=""},300)}},created(){this.mainFilter||(this.mainFilter=JSON.parse(JSON.stringify(this.defaultFilter))),this.originalMainFilter=JSON.parse(JSON.stringify(this.mainFilter))},mounted(){this.mode==="form"&&this.initObserver()},beforeDestroy(){this.resizeObserver&&this.resizeObserver.unobserve(this.$refs.searchContainer)},methods:{extractNestedPropertyValue:u.extractNestedPropertyValue,initObserver(){const t=new ResizeObserver(u.debounce(50,([e])=>{this.showAdvancedSearchButtonText=e.contentRect.width>=460}));t.observe(this.$refs.searchContainer),this.resizeObserver=t},fetchAutocomplete({input:t,filter:e},s){t?this.autocompleteIndex=s:this.$set(this.filtersAutocompleteResults,s,[]),this.$emit("fetch-autocomplete",{searchString:t,filter:e,index:s})},search(t=!1){const e=this.mode==="form"?this.formFilterList:this.filterList;let s=[];if(this.mode==="form"?s=Object.entries(this.formFilterValuesInt).filter(([,i])=>u.hasData(i)).map(([i,r])=>{var l,o,a;return{[this.identifierPropertyName.filter]:i,type:((o=(l=e[i])==null?void 0:l["x-attrs"])==null?void 0:o.field_type)??"text",filter_values:typeof r=="object"&&r.length&&!((a=e[i])!=null&&a.type.includes("chips"))?r.filter(n=>u.hasData(n)):r}}):s=this.appliedFiltersInt.map(i=>({[this.identifierPropertyName.filter]:i[this.identifierPropertyName.filter],type:i.type,filter_values:i.filter_values})),t||JSON.stringify(this.originalFilterValues)!==JSON.stringify(s)){this.originalFilterValues=JSON.parse(JSON.stringify(s));const i={[this.identifierPropertyName.filter]:this.mainFilter[this.identifierPropertyName.filter],type:this.mainFilter.type,filter_values:this.mainFilter.filter_values};this.$emit("search",[...s,i])}},addFilterRow({filter:t,input:e}){let s=t.type.includes("date")?t.filter_values:[...t.filter_values],i=!1;t.type==="text"&&e.trim()&&(!t.filter_values||!t.filter_values.length||this.mainFilter.filter_values[0]!==e.trim())?(s=[e],i=!0):t.type==="chips"&&t.freetext_allowed&&e.trim()&&(s=[...t.filter_values,{[this.labelPropertyName.autocompleteOption]:e}],i=!0),this.appliedFiltersInt.push({...t,filter_values:s}),this.mainFilter={...this.defaultFilter,filter_values:null},this.originalMainFilter=JSON.parse(JSON.stringify(this.mainFilter)),i&&this.search(),this.$nextTick(()=>{Array.from(this.$refs.mainSearch.$el.getElementsByTagName("input")).find(l=>l.id.includes("search-input")).focus()})},removeFilter(t,e){this.appliedFiltersInt.splice(e,1),this.search()},updateFilter(t,e){this.$set(this.appliedFiltersInt,e,JSON.parse(JSON.stringify(t))),this.search()},fillOptionToForm({entry:t,collectionId:e}){var s,i;if(this.mode==="form"&&e&&!((s=this.formFilterValuesInt[e])!=null&&s.map(r=>r[this.identifierPropertyName.formInputs]).includes(t[this.identifierPropertyName.autocompleteOption]))){const r=this.formFilterList[e];if(r){const l=r["x-attrs"];if(l.field_type==="chips"){const o=((i=this.formProps.fieldProps)==null?void 0:i[e])||{},a=o.labelPropertyName||this.labelPropertyName.formInputs,n=o.identifierPropertyName||this.identifierPropertyName.formInputs,p={[a]:t[this.labelPropertyName.autocompleteOption],[n]:t[this.identifierPropertyName.autocompleteOption],...t};r.type==="array"?this.formFilterValuesInt[e]?this.formFilterValuesInt[e].push(p):this.$set(this.formFilterValuesInt,e,[p]):r.type==="object"&&this.$set(this.formFilterValuesInt,e,p)}else(!l||l.field_type==="text")&&this.$set(this.formFilterValuesInt,e,t[this.labelPropertyName.autocompleteOption]??t);if(this.mainFilter.filter_values=[],this.assistiveText.autocompleteOptionFilledToForm){const o=t[this.labelPropertyName.autocompleteOption],a=r.title;this.announcement=this.assistiveText.autocompleteOptionFilledToForm.replace("{optionLabel}",o).replace("{fieldLabel}",a)}this.search()}else this.$set(this.mainFilter,"filter_values",[t]),this.originalMainFilter=JSON.parse(JSON.stringify(this.mainFilter)),this.search(!0)}},fetchFormAutocomplete(t){this.$emit("fetch-form-autocomplete",t)},updateFormFilters(t){this.formFilterValuesInt=JSON.parse(JSON.stringify(t)),this.search()},removeAllFilters(){this.formFilterValuesInt={},this.assistiveTextNotification=this.assistiveText.collapsedFilterRowRemovedNotification||"",this.search()},formIsMounted(){setTimeout(()=>{this.formMounted=!0},200)},openAdvancedSearch(){this.$refs.mainSearch.isActive=!1,this.formOpen=!this.formOpen},getCollapsedFilterValue(t,e,s,i=[]){const r=e["x-attrs"].field_type;if(r==="integer"||r==="float"||typeof t=="number")return{values:[{labelInternal:t.toString()}],fieldId:s,fieldType:r};if(r==="boolean"||typeof t=="boolean")return{values:[{labelInternal:t}],fieldId:s,fieldType:r};if(r==="text"||r==="autocomplete"||typeof t=="string"){let l=t;return r==="date"&&t&&(l=this.formatToDisplayDate(t)),{values:[{labelInternal:l}],fieldId:s,fieldType:r}}if(r==="chips"){const l=u.extractNestedPropertyValue(i.length?[s].concat(i).join("."):s,this.formProps.fieldProps),o=(l==null?void 0:l.labelPropertyName)||this.labelPropertyName.formInputs,a=(l==null?void 0:l.identifierPropertyName)||this.identifierPropertyName.formInputs;return{values:t.map(n=>{const p=typeof n=="object"?n:{};return{labelInternal:n[o]??n,idInternal:n[a]||"",...p}}),fieldId:s,fieldType:r}}return r==="group"?{values:Object.entries(t).reduce((l,[o,a])=>(l.push(this.getCollapsedFilterValue(a,e.items?e.items.properties[o]:e.properties[o],o,[o].concat(i))),l),[]),fieldType:r,fieldId:s}:r==="date"&&typeof t!="string"?{values:Object.values(t).map(l=>({labelInternal:l?this.formatToDisplayDate(l):""})),fieldId:s,fieldType:Object.keys(t).reduce((l,o)=>{const a=o.split("_")[0];return a!==l?l+a:l},"")}:t},formatToDisplayDate(t){const{groups:{minus:e,year:s,month:i,day:r}={}}=t.match(/((?<minus>-)?(?<year>\d{4})-?(?<month>\d{2})?-?(?<day>\d{2})?)/)||{};return s?`${r?`${r}.`:""}${i?`${i}.`:""}${e||""}${s}`:""},formatToStorageDate(t){const{groups:{minus:e,year:s,month:i,day:r}={}}=t.match(/(?<day>\d{2})?\.?(?<month>\d{2})?\.?(?<minus>-)?(?<year>\d{4})/)||{};return s?`${e||""}${s}${i?`-${i}`:""}${r?`-${r}`:""}`:""},setFormFilterValues(t,e,s=[]){const{values:i,fieldType:r,fieldId:l}=t;if(e.type==="string")return r==="date"?this.formatToStorageDate(i[0].labelInternal):i[0].labelInternal;if(e.type==="boolean")return i[0].labelInternal;if(e.type==="integer"||e.type==="float")return Number(i[0].labelInternal);if((r.includes("date")||r.includes("time"))&&e.type==="object"){const o=Object.keys(e.properties);return i.reduce((a,n,p)=>({...a,[o[p]]:this.formatToStorageDate(n.labelInternal)}),{})}if(r.includes("chips")){const o=u.extractNestedPropertyValue(s.length?[l].concat(s).join("."):l,this.formProps.fieldProps),a=(o==null?void 0:o.labelPropertyName)||this.labelPropertyName.formInputs,n=(o==null?void 0:o.identifierPropertyName)||this.identifierPropertyName.formInputs;return i.filter(p=>!!p.labelInternal).map(p=>{const c=JSON.parse(JSON.stringify(p));return this.$delete(c,"labelInternal"),this.$delete(c,"idInternal"),{...c,[a]:p.labelInternal,[n]:p.idInternal}})}return!r.includes("chips")&&e.type==="array"?this.setFormFilterValues(t,e.items):r==="group"&&e.type==="object"?i.filter(o=>u.hasData(o.values)).reduce((o,a)=>({...o,[a.fieldId]:this.setFormFilterValues(a,e.properties[a.fieldId],[a.fieldId].concat(s))}),{}):null},filterHtmlRenderFields(t,e=[]){const{fieldProps:s}=this.formProps;return Object.entries(t).reduce((i,[r,l])=>{const{field_type:o}=l["x-attrs"]?l["x-attrs"]:{};if(o==="group"){const a=this.filterHtmlRenderFields(l.properties||l.items.properties,[r].concat(e));return a.length?i.concat({[r]:a}):i}if(o==="chips"){const a=((e.length?u.extractNestedPropertyValue(e.join("."),s):s)||{})[r];if(!this.interpretFormChipsLabelAsHtml&&(a!=null&&a.interpretChipsLabelAsHtml)||this.interpretFormChipsLabelAsHtml&&(!a||!Object.keys(a).includes("interpretChipsLabelAsHtml")||a.interpretChipsLabelAsHtml))return i.concat(r)}return i},[])},addNewPropertyValueToNestedObject(t,e,s,i,r=!1){if(typeof t=="string"){const l=e[t]||{};return{[t]:{...r?l:{},[s]:i,...r?{}:l}}}return typeof t=="object"?Object.entries(t).reduce((l,[o,a])=>({...l,[o]:{...e[o],...a.reduce((n,p)=>({...n,...this.addNewPropertyValueToNestedObject(p,e[o]||{},s,i)}),{})}}),{}):{}}}};var b=function(){var e=this,s=e._self._c;return s("div",{ref:"searchContainer",staticClass:"base-advanced-search"},[e.mode==="list"&&e.appliedFiltersInt&&e.appliedFiltersInt.length?e._l(e.appliedFiltersInt,function(i,r){return s("BaseAdvancedSearchRow",{key:"filter-"+r,staticClass:"base-advanced-search__filter-row",attrs:{mode:e.mode,"search-row-id":`${e.rowId}-${i[e.identifierPropertyName.filter]}-${r}`,"is-main-search":!1,"autocomplete-results":e.filtersAutocompleteResults[r],"filter-list":e.displayedFilters,"applied-filter":i,"is-loading":e.filtersLoadingState[r],"default-filter":e.defaultFilter,placeholder:e.placeholder.filterRow||e.placeholder,"autocomplete-property-names":e.autocompletePropertyNames,"label-property-name":e.labelPropertyName,"identifier-property-name":e.identifierPropertyName,"drop-down-info-texts":e.dropDownInfoTexts,"advanced-search-text":e.advancedSearchText,"assistive-text":{addFilter:e.assistiveText.addFilter,removeFilter:e.assistiveText.removeFilter,selectFilterLabel:e.assistiveText.selectFilterLabel,searchLabel:e.assistiveText.searchLabel,selectedOption:e.assistiveText.selectedOption,loaderActive:e.assistiveText.autocompleteLoaderActive,autocompleteResultsRetrieved:e.assistiveText.autocompleteResultsRetrieved,autocompleteNoResults:e.assistiveText.autocompleteNoResults,autocompleteInitial:e.assistiveText.autocompleteInitial,categoryAnnouncement:e.assistiveText.categoryAnnouncement,optionsAnnouncement:e.assistiveText.optionsAnnouncement},"date-field-delay":e.dateFieldDelay,language:e.language,"highlight-autocomplete-match":e.highlightAutocompleteMatch,"highlight-autocomplete-tags":e.highlightAutocompleteTags},on:{"remove-filter":function(l){return e.removeFilter(l,r)},"update:applied-filter":function(l){return e.updateFilter(l,r)},"fetch-autocomplete-results":function(l){return e.fetchAutocomplete(l,r)}},scopedSlots:e._u([{key:"autocomplete-option",fn:function({option:l,collectionId:o}){return[e._t("autocomplete-option",null,{option:l,collectionId:o})]}}],null,!0)})}):e._e(),s("BaseAdvancedSearchRow",e._g({ref:"mainSearch",attrs:{"search-row-id":`main-${e.rowId}`,mode:e.mode,"applied-filter":e.mainFilter,"filter-list":e.displayedFilters,"form-filter-list":e.formFilterList,"default-filter":e.defaultFilter,"autocomplete-results":e.filtersAutocompleteResults[e.mainFilterIndex],"is-loading":e.filtersLoadingState[e.mainFilterIndex],placeholder:e.placeholder.main||e.placeholder,"autocomplete-property-names":e.autocompletePropertyNames,"label-property-name":e.labelPropertyName,"identifier-property-name":e.identifierPropertyName,"drop-down-info-texts":e.dropDownInfoTexts,"advanced-search-text":e.advancedSearchText,"assistive-text":{addFilter:e.assistiveText.addFilter,removeFilter:e.assistiveText.removeFilter,selectFilterLabel:e.assistiveText.selectFilterLabel,searchLabel:e.assistiveText.searchLabel,selectedOption:e.assistiveText.selectedOption,loaderActive:e.assistiveText.autocompleteLoaderActive,autocompleteResultsRetrieved:e.assistiveText.autocompleteResultsRetrieved,autocompleteNoResults:e.assistiveText.autocompleteNoResults,autocompleteInitial:e.assistiveText.autocompleteInitial,categoryAnnouncement:e.assistiveText.categoryAnnouncement,optionsAnnouncement:e.assistiveText.optionsAnnouncement,results:e.assistiveText.results},"date-field-delay":e.dateFieldDelay,language:e.language,"highlight-autocomplete-match":e.highlightAutocompleteMatch,"highlight-autocomplete-tags":e.highlightAutocompleteTags},on:{"update:appliedFilter":function(i){e.mainFilter=i},"update:applied-filter":function(i){e.mainFilter=i},"add-filter-row":e.addFilterRow,"fetch-autocomplete-results":function(i){return e.fetchAutocomplete(i,e.mainFilterIndex)},"option-selected":e.fillOptionToForm},scopedSlots:e._u([{key:"after",fn:function(){return[e.mode==="form"?s("BaseButton",{class:["base-advanced-search__expand-button",{"base-button-icon-rotate-180":e.formOpen}],attrs:{text:e.showAdvancedSearchButtonText?e.advancedSearchText.advancedButtonLabel:"","aria-expanded":`${e.formOpen}`,"aria-controls":`${e.rowId}-form`,description:e.advancedButtonDescription,"button-style":"row",icon:"drop-down","icon-size":"small","icon-position":"right"},nativeOn:{click:function(i){return i.preventDefault(),i.stopPropagation(),e.openAdvancedSearch.apply(null,arguments)},keydown:function(i){return!i.type.indexOf("key")&&e._k(i.keyCode,"enter",13,i.key,"Enter")&&e._k(i.keyCode,"space",32,i.key,[" ","Spacebar"])?null:(i.preventDefault(),i.stopPropagation(),e.openAdvancedSearch.apply(null,arguments))},focusin:function(i){i.stopPropagation()}}}):e._e()]},proxy:!0},{key:"below",fn:function(){return[e.mode==="form"&&e.formOpen?s("BaseForm",e._b({class:["base-advanced-search__search-form",{"base-advanced-search__search-form--hidden":!e.formMounted}],attrs:{id:`${e.rowId}-form`,"form-field-json":e.formFilterList,"value-list":e.formFilterValuesInt,"label-property-name":e.labelPropertyName.formInputs,"identifier-property-name":e.identifierPropertyName.formInputs},on:{"input-complete":e.updateFormFilters,"fetch-autocomplete":e.fetchFormAutocomplete,"form-mounted":e.formIsMounted},scopedSlots:e._u([{key:"label-addition",fn:function({fieldName:i,groupNames:r}){return[e._t("form-label-addition",null,{fieldName:i,groupNames:r})]}},{key:"pre-input-field",fn:function({fieldName:i,groupNames:r}){return[e._t("form-pre-input-field",null,{fieldName:i,groupNames:r})]}},{key:"input-field-addition-before",fn:function({fieldName:i,groupNames:r}){return[e._t("form-input-field-addition-before",null,{fieldName:i,groupNames:r})]}},{key:"input-field-inline-before",fn:function({fieldName:i,groupNames:r}){return[e._t("form-input-field-inline-before",null,{fieldName:i,groupNames:r})]}},{key:"input-field-addition-after",fn:function({fieldName:i,groupNames:r}){return[e._t("form-input-field-addition-after",null,{fieldName:i,groupNames:r})]}},{key:"post-input-field",fn:function({fieldName:i,groupNames:r}){return[e._t("form-post-input-field",null,{fieldName:i,groupNames:r})]}},{key:"error-icon",fn:function(){return[e._t("form-error-icon")]},proxy:!0},{key:"remove-icon",fn:function(){return[e._t("form-remove-icon")]},proxy:!0},{key:"below-input",fn:function({fieldName:i,groupNames:r}){return[e._t("form-below-input",null,{fieldName:i,groupNames:r})]}},{key:"drop-down-entry",fn:function({option:i,fieldName:r,groupNames:l}){return[e._t("form-drop-down-entry",function(){return[e.mode==="form"&&(typeof e.renderFormChipsLabelAsHtml=="boolean"&&e.renderFormChipsLabelAsHtml||typeof e.renderFormChipsLabelAsHtml=="object"&&(e.renderFormChipsLabelAsHtml.includes(r)||l!=null&&l.length&&e.renderFormChipsLabelAsHtml.some(o=>typeof o=="object"&&e.extractNestedPropertyValue(l.join("."),o).includes(r))))?[s("span",{directives:[{name:"insert-text-as-html",rawName:"v-insert-text-as-html",value:{value:i[e.labelPropertyName.formInputs],interpretTextAsHtml:!0},expression:`{
                  value: option[labelPropertyName.formInputs],
                  interpretTextAsHtml: true,
                }`}]})]:e._e()]},{fieldName:r,groupNames:l,option:i})]}}],null,!0)},"BaseForm",e.amendedFormProps,!1)):e.mode==="form"&&!e.formOpen&&e.collapsedFiltersArray.length?s("div",[s("BaseCollapsedFilterRow",{attrs:{filters:e.collapsedFiltersArray,"date-time-text":e.advancedSearchText.collapsedDateTime,"interpret-label-as-html":e.renderFormChipsLabelAsHtml,"assistive-text":{removeFiltersLabel:e.assistiveText.removeAllFiltersLabel,filterRemovedNotification:e.assistiveText.removeFilterValueNotification,appliedFiltersLabel:e.assistiveText.collapsedAppliedFiltersLabel,booleanFilterLabel:e.assistiveText.collapsedBooleanFilterValue,optionToRemoveSelected:e.assistiveText.collapsedOptionToRemoveSelected}},on:{"update:filters":function(i){e.collapsedFiltersArray=i},"remove-all":e.removeAllFilters}})],1):e._e()]},proxy:!0},{key:"autocomplete-option",fn:function({option:i,collectionId:r}){return[e._t("autocomplete-option",function(){return[e.mode==="form"&&(typeof e.renderFormChipsLabelAsHtml=="boolean"&&e.renderFormChipsLabelAsHtml||typeof e.renderFormChipsLabelAsHtml=="object"&&e.renderFormChipsLabelAsHtml.includes(r))?[s("span",{directives:[{name:"insert-text-as-html",rawName:"v-insert-text-as-html",value:{value:i[e.labelPropertyName.autocompleteOption],interpretTextAsHtml:!0},expression:`{
              value: autocompleteOption[labelPropertyName.autocompleteOption],
              interpretTextAsHtml: true,
            }`}]})]:e._e()]},{option:i,collectionId:r})]}}],null,!0)},e.$listeners)),e.assistiveTextNotification?s("span",{staticClass:"assistive-text",attrs:{"aria-live":"assertive"}},[e._v(" "+e._s(e.assistiveTextNotification)+" ")]):e._e()],2)},g=[],v=y.default(F,b,g,!1,null,"a5184ef3",null,null);const N=v.exports;exports.default=N;
//# sourceMappingURL=BaseAdvancedSearch.vue.cjs.js.map
