{"version":3,"file":"InsertTextAsHtml.es.js","sources":["../../src/directives/InsertTextAsHtml.js"],"sourcesContent":["/**\n * directive to insert text string as innerHTML conditionally (this is not possible\n *  with v-html)\n * @param {HTMLElement} el - the dom element\n * @param {string} value - the binding.value object property to provide the string to insert\n * @param {boolean} interpretTextAsHtml - the binding.value object property that specifies if\n *  text should be inserted as innerHTML or innerText\n */\n// just use function - that will guarantee calling on bind and update hooks\nexport default function InsertTextAsHtml(el, { value: { value, interpretTextAsHtml } }) {\n  // ONLY reassign the value when the content really changed otherwise the HTML elements\n  // are permanently repainted on every udpate!\n  if ((interpretTextAsHtml && value !== el.innerHTML) || el.innerText !== value) {\n    if (interpretTextAsHtml && value) {\n      // eslint-disable-next-line no-param-reassign\n      el.innerHTML = value;\n    } else {\n      // eslint-disable-next-line no-param-reassign\n      el.innerText = value;\n    }\n  }\n}\n"],"names":["InsertTextAsHtml","el","_ref","_ref$value","value","interpretTextAsHtml","innerHTML","innerText"],"mappings":"AASe,SAASA,EAAiBC,GAAEC,GAA6C;AAAA,MAAAC,IAAAD,EAAzCE,OAASA,IAAKD,EAALC,OAAOC,IAAmBF,EAAnBE;AAG7D,GAAKA,KAAuBD,MAAUH,EAAGK,aAAcL,EAAGM,cAAcH,OAClEC,KAAuBD,IAEzBH,EAAGK,YAAYF,IAGfH,EAAGM,YAAYH;AAGrB;"}