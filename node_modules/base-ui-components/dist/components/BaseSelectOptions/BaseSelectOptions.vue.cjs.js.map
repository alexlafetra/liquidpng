{"version":3,"file":"BaseSelectOptions.vue.cjs.js","sources":["../../../src/components/BaseSelectOptions/BaseSelectOptions.vue"],"sourcesContent":["<template>\n  <div\n    class=\"base-select-options\"\n    :style=\"{ '--direction': flexDirection }\">\n    <div class=\"base-select-options__number-selected\">\n      <!-- @slot here number of selected entries is indicated - replace with this slot for customization. -->\n      <slot name=\"selectedText\">\n        {{ `${numberSelected} ${selectedNumberText}` }}\n      </slot>\n    </div>\n    <BaseButton\n      :text=\"allSelected ? deselectText : selectText\"\n      :disabled=\"selectAllDisabled\"\n      button-style=\"secondary\"\n      class=\"base-select-options__select-button\"\n      @clicked=\"select\" />\n  </div>\n</template>\n\n<script>\nimport BaseButton from '../BaseButton/BaseButton';\n\n/**\n * component to enable display of selected items and a select all\n */\nexport default {\n  name: 'BaseSelectOptions',\n  components: {\n    BaseButton,\n  },\n  props: {\n    /**\n     * specify the text displayed for number of selected entries:\n     * `x {selectedNumberText}`\n     */\n    selectedNumberText: {\n      type: String,\n      default: 'entries selected',\n    },\n    /**\n     * the text displayed for select / deselect all\n     */\n    selectText: {\n      type: String,\n      default: 'All',\n    },\n    /**\n     * the text displayed for select / deselect all\n     */\n    deselectText: {\n      type: String,\n      default: 'None',\n    },\n    /**\n     * provide a list of currently visible entries\n     */\n    list: {\n      type: Array,\n      default: () => [],\n    },\n    /**\n     * provide a list of selected entries\n     */\n    selectedList: {\n      type: Array,\n      default: () => [],\n    },\n    /**\n     * disable the button by setting this prop to true\n     */\n    selectAllDisabled: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * By default, the \"All/None\" button appears on the right, and the counter of\n     * selected items appears on the left. Set this to `true` to reverse the order.\n     */\n    reverse: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      selectedInt: false,\n      // used to change the flex direction of select options from 'row' to 'row-reverse' (#1692)\n      flexDirection: 'row',\n    };\n  },\n  computed: {\n    numberSelected() {\n      return this.selectedList.length;\n    },\n    allSelected() {\n      // not just calc comparing selectedList with list because with pagination\n      // selectedList can contain entries that are currently not incluced in list\n      const idList = this.selectedList.length && this.selectedList[0].id\n        ? this.selectedList.map(entry => entry.id) : this.selectedList;\n      const unselectedLength = this.list\n        .filter(entry => !idList.includes(entry.id)).length;\n      return unselectedLength === 0;\n    },\n  },\n  watch: {\n    allSelected: {\n      handler(val) {\n        if (val !== this.selectedInt) {\n          this.selectedInt = val;\n        }\n      },\n      immediate: true,\n    },\n  },\n  created() {\n    // swap position of select options based on the 'reverse' prop (#1692)\n    this.flexDirection = this.reverse ? 'row-reverse' : 'row';\n  },\n  methods: {\n    select() {\n      this.selectedInt = !this.selectedInt;\n      /**\n       * emitted on select all button click\n       *\n       * @event selected\n       * @param {boolean} - were all entries selected\n       */\n      this.$emit('selected', this.selectedInt);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  @import \"../../styles/variables\";\n\n  .base-select-options {\n    display: flex;\n    // flex direction can be 'row' or 'row-reverse' and depends on the 'reverse' prop (#1692)\n    flex-direction: var(--direction);\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n    margin-bottom: $spacing-small;\n\n    .base-select-options__number-selected {\n      font-size: $font-size-small;\n      color: $font-color-second;\n      margin: $spacing-small-half $spacing-small;\n    }\n\n    .base-select-options__select-button {\n      // to keep button aligned right when parent wraps\n      margin-left: auto;\n\n      &:hover,\n      &:focus {\n        color: $app-color;\n      }\n    }\n  }\n</style>\n"],"names":["_sfc_main","BaseButton","idList","entry","val"],"mappings":"+QAyBAA,EAAA,CACA,KAAA,oBACA,WAAA,CACA,WAAAC,EAAA,OACA,EACA,MAAA,CAKA,mBAAA,CACA,KAAA,OACA,QAAA,kBACA,EAIA,WAAA,CACA,KAAA,OACA,QAAA,KACA,EAIA,aAAA,CACA,KAAA,OACA,QAAA,MACA,EAIA,KAAA,CACA,KAAA,MACA,QAAA,IAAA,CAAA,CACA,EAIA,aAAA,CACA,KAAA,MACA,QAAA,IAAA,CAAA,CACA,EAIA,kBAAA,CACA,KAAA,QACA,QAAA,EACA,EAKA,QAAA,CACA,KAAA,QACA,QAAA,EACA,CACA,EACA,MAAA,CACA,MAAA,CACA,YAAA,GAEA,cAAA,KACA,CACA,EACA,SAAA,CACA,gBAAA,CACA,OAAA,KAAA,aAAA,MACA,EACA,aAAA,CAGA,MAAAC,EAAA,KAAA,aAAA,QAAA,KAAA,aAAA,CAAA,EAAA,GACA,KAAA,aAAA,IAAAC,GAAAA,EAAA,EAAA,EAAA,KAAA,aAGA,OAFA,KAAA,KACA,OAAAA,GAAA,CAAAD,EAAA,SAAAC,EAAA,EAAA,CAAA,EAAA,SACA,CACA,CACA,EACA,MAAA,CACA,YAAA,CACA,QAAAC,EAAA,CACAA,IAAA,KAAA,cACA,KAAA,YAAAA,EAEA,EACA,UAAA,EACA,CACA,EACA,SAAA,CAEA,KAAA,cAAA,KAAA,QAAA,cAAA,KACA,EACA,QAAA,CACA,QAAA,CACA,KAAA,YAAA,CAAA,KAAA,YAOA,KAAA,MAAA,WAAA,KAAA,WAAA,CACA,CACA,CACA"}