{"version":3,"file":"BaseCarousel.vue.es.js","sources":["../../../src/components/BaseCarousel/BaseCarousel.vue"],"sourcesContent":["<template>\n  <div>\n    <div\n      class=\"base-carousel swiper\">\n      <div\n        class=\"swiper-wrapper\">\n        <div\n          v-for=\"(item, index) in items\"\n          v-show=\"swiperIsActive\"\n          :key=\"index\"\n          :class=\"['base-carousel-slide', { 'swiper-slide': swiperIsActive }]\">\n          <BaseImageBox\n            :title=\"item.title\"\n            :subtext=\"subtext(item.subtext)\"\n            :description=\"item.description\"\n            :additional=\"item.additional\"\n            :image-url=\"getImageSrc(item.previews, items.length < 3 ? '768w' : '640w')\"\n            :box-size=\"boxSize\"\n            :lazyload=\"true\"\n            :image-first=\"true\"\n            :center-header=\"true\"\n            :render-element-as=\"vueRouterAvailable && item.href ? renderLinkElementAs : 'div'\"\n            :link-to=\"vueRouterAvailable && item.href ? item.href : ''\"\n            style=\"margin-right: 0\"\n            @clicked=\"boxClicked(item)\" />\n        </div>\n      </div>\n\n      <div\n        v-if=\"items.length > 2\"\n        class=\"swiper-pagination\" />\n\n      <template\n        v-if=\"items.length > 1\">\n        <base-icon\n          name=\"prev\"\n          class=\"swiper-button swiper-button-prev\" />\n\n        <base-icon\n          name=\"next\"\n          class=\"swiper-button swiper-button-next\" />\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\nimport 'lazysizes';\nimport BaseIcon from '../BaseIcon/BaseIcon';\nimport BaseImageBox from '../BaseImageBox/BaseImageBox';\n\nexport default {\n  name: 'BaseCarousel',\n  components: {\n    BaseIcon,\n    BaseImageBox,\n  },\n  props: {\n    /**\n     * items to display\n     *\n     * array of objects with the following **required** properties:\n     *     **title** `?string` - the title to display.\n     *     **subtext** `?string` - the text below the title.\n     *     **description** `?string` - the type of item.\n     *     **additional** `?string` - additional information (e.g. dates).\n     *     **href** `string` - an url to follow upon item click - this is required if item should be rendered\n     *      as a link element.\n     *     **previews** `Object[]`- an array of image urls in different sizes in the following form:\n     *     e.g. `[{ '460w': 'image-url' }, { '640w': 'image url' },...]`\n     */\n    items: {\n      type: Array,\n      default: () => ([]),\n    },\n    /**\n     * specify [swiper API options](https://swiperjs.com/swiper-api)\n     */\n    swiperOptions: {\n      type: Object,\n      default: () => ({}),\n    },\n    /**\n     * specify how the link element should be rendered -\n     * this needs to be a valid vue link component (e.g. `RouterLink`, `NuxtLink`) and `vue-router` is necessary\n     */\n    renderLinkElementAs: {\n      type: String,\n      default: 'RouterLink',\n    },\n  },\n  data() {\n    return {\n      swiper: undefined,\n      swiperIsActive: false,\n      swiperOptionsInt: {},\n    };\n  },\n  computed: {\n    boxSize() {\n      return this.swiperIsActive ? { height: '400px' } : { 'min-height': '250px', 'max-height': '350px' };\n    },\n    vueRouterAvailable() {\n      return !!this.$router;\n    },\n  },\n  watch: {\n    data() {\n      this.swiper.update();\n    },\n    swiperOptions: {\n      handler(val) {\n        if (JSON.stringify(val) !== JSON.stringify(this.swiperOptionsInt)) {\n          this.swiperOptionsInt = {\n            ...this.swiperOptionsInt,\n            ...JSON.parse(JSON.stringify(val)),\n          };\n        }\n      },\n      immediate: true,\n    },\n  },\n  mounted() {\n    this.initSwiper();\n  },\n  methods: {\n    getImageSrc(object, value) {\n      let imageSrc = '';\n      if (object && object.length) {\n        // filter by value\n        imageSrc = object.map(obj => ((Object.keys(obj)[0] === value) ? Object.values(obj)[0] : ''))\n          .filter(obj => obj !== '').toString();\n\n        // otherwise take first one\n        if (!imageSrc.length) {\n          // eslint-disable-next-line\n          imageSrc = Object.values(object[0])[0];\n        }\n      }\n      return imageSrc;\n    },\n    async initSwiper() {\n      // import swiper and plugins\n      // to avoid import/require issues in an SSR setup\n      // we import swiper when the component is already mounted\n      const { Swiper } = await import('swiper');\n      const { Autoplay } = await import('swiper');\n      const { Keyboard } = await import('swiper');\n      const { Navigation } = await import('swiper');\n      const { Pagination } = await import('swiper');\n\n      this.swiperIsActive = true;\n      this.swiperOptionsInt.init = false;\n      if (this.swiperOptionsInt.autoplay) {\n        this.swiperOptionsInt.autoplay = {};\n        this.swiperOptionsInt.autoplay.delay = this.swiperOptionsInt.autoplayDelay || 3000;\n        this.swiperOptionsInt.autoplay.disableOnInteraction = true;\n      }\n\n      this.swiperOptionsInt.navigation = {\n        nextEl: '.swiper-button-next',\n        prevEl: '.swiper-button-prev',\n      };\n      this.swiperOptionsInt.modules = [Autoplay, Keyboard, Navigation, Pagination];\n\n      setTimeout(() => {\n        this.swiper = new Swiper('.swiper', this.swiperOptionsInt);\n        this.swiper.init();\n        /**\n         * event triggered when slider is initialized\n         *\n         * @event initialized\n         * @param { boolean } - was carousel initialized\n         */\n        this.$emit('initialized', true);\n      }, 0);\n    },\n    subtext(value) {\n      return typeof value === 'object' && typeof value[0] === 'string' ? value.join(', ') : value;\n    },\n    boxClicked(item) {\n      /**\n       * event triggered by a ClickEvent on one of the carousel boxes\n       *\n       * @event clicked\n       * @param {Object} - the carousel item that was clicked\n       */\n      this.$emit('clicked', item);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  @import \"../../styles/variables\";\n\n  .base-carousel {\n    max-width: 1400px;\n    margin: 0 auto;\n    position: relative;\n\n    .base-carousel-slide {\n      margin-bottom: 0;\n\n      @media screen and (max-width: $mobile) {\n        margin-bottom: $spacing;\n      }\n    }\n\n    .swiper-wrapper {\n      display: flex;\n    }\n\n    .swiper-button {\n      display: none;\n      position: absolute;\n      top: calc(50% - #{$line-height} - #{$spacing});\n      z-index: 1;\n      width: $icon-large;\n      height: $icon-large;\n      fill: white;\n      transform: translateY(-50%);\n      transition: fill 250ms ease-in-out;\n\n      &:focus,\n      &:hover {\n        fill: $app-color;\n        cursor: pointer;\n      }\n\n      &-prev {\n        left: $spacing;\n      }\n\n      &-next {\n        right: $spacing;\n      }\n\n      @media screen and (max-width: $mobile) {\n        display: block;\n      }\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n  @import \"../../styles/variables\";\n\n  // import swiper styles\n  @import '../../../node_modules/swiper/swiper.scss';\n  @import '../../../node_modules/swiper/modules/navigation/navigation.scss';\n  @import '../../../node_modules/swiper/modules/pagination/pagination.scss';\n  @import '../../../node_modules/swiper/modules/keyboard/keyboard.scss';\n  @import '../../../node_modules/swiper/modules/autoplay/autoplay.scss';\n\n  .base-carousel {\n    .base-image-box-image {\n      max-width: inherit !important;\n      left: 50%;\n      transform: translate(-50%, -50%) !important;\n    }\n\n    &.swiper {\n      opacity: 0;\n\n      &.swiper-initialized {\n        opacity: 1;\n      }\n    }\n\n    .swiper-pagination {\n      display: none;\n\n      @media screen and (min-width: $mobile-min-width) {\n        display: flex;\n        justify-content: center;\n        position: relative;\n      }\n    }\n\n    .swiper-pagination-bullet {\n      width: 10px;\n      height: 10px;\n      border-radius: 50%;\n      background: $pagination-bullet-color;\n      margin: $spacing-large $spacing-small $spacing !important;\n      cursor: pointer;\n\n      &:focus {\n        outline: none;\n      }\n\n      &:only-child {\n        display: none;\n      }\n    }\n\n    .swiper-pagination-bullet-active {\n      opacity: 1;\n      background: $app-color;\n\n      &:hover,\n      &:focus {\n        box-shadow: $box-shadow-hov;\n      }\n    }\n  }\n</style>\n"],"names":["_sfc_main","BaseIcon","BaseImageBox","val","object","value","imageSrc","obj","Swiper","Autoplay","Keyboard","Navigation","Pagination","item"],"mappings":"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"}