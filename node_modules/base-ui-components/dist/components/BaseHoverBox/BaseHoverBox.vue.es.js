import a from "../BaseImageBox/BaseImageBox.vue.es.js";
import "./BaseHoverBox.vue.es2.js";
import r from "../../_virtual/_plugin-vue2_normalizer.es.js";
const s = {
  name: "BaseHoverBox",
  components: {
    BaseImageBox: a
  },
  props: {
    /**
     * The title of the item in question, also used as img alt text
     * (atm - TODO: should there be a separate alt text (then again - what would that be since
     * file uploads dont have any properties)?)
     */
    title: {
      type: String,
      default: "No title"
    },
    /**
     * Text displayed directly below title (max one line; max 2 lines with title)
     */
    subtext: {
      type: String,
      default: ""
    },
    /**
     * should the title be displayed or box only display the image
     */
    showTitle: {
      type: Boolean,
      default: !0
    },
    /**
     * Specify text that should be displayed in the info box, should be an array of strings
     */
    boxText: {
      type: Array,
      default() {
        return [];
      }
    },
    /**
     * image url
     */
    imageUrl: {
      type: String,
      default: null
    },
    /**
     * descriptive element displayed at bottom of box (e.g. item type like "Bilderserie")
     */
    description: {
      type: String,
      default: null
    },
    /**
     * determines if the box should be selectable and the checkbox is displayed
     */
    selectable: {
      type: Boolean,
      default: !1
    },
    /**
     * specify the size of the box
     */
    boxSize: {
      type: Object,
      default: () => ({ width: "212px", height: "212px" })
    }
  },
  data() {
    return {
      boxPosition: { top: 0, left: 0 }
    };
  },
  methods: {
    /**
     * to set the position of the box from outside
     * @param {MouseEvent} e
     */
    setPosition(t) {
      let e = t.layerX, o = t.layerY;
      const i = parseInt(this.boxSize.width.replace("px", ""), 10), n = this.$el, l = window.getComputedStyle(n, null).getPropertyValue("margin").replace("px", "");
      t.clientX + 3 * l + i > window.innerWidth && (e = t.layerX - i - 2 * l), t.clientY + 2 * l + i > window.innerHeight && (o = t.layerY - i - l), this.boxPosition = { top: `${o}px`, left: `${e}px` };
    }
  }
};
var p = function() {
  var e = this, o = e._self._c;
  return o("div", { staticClass: "base-hover-box", style: [e.boxSize, e.boxPosition] }, [o("base-image-box", e._b({}, "base-image-box", e.$props, !1))], 1);
}, x = [], d = /* @__PURE__ */ r(
  s,
  p,
  x,
  !1,
  null,
  "a34eca50",
  null,
  null
);
const m = d.exports;
export {
  m as default
};
//# sourceMappingURL=BaseHoverBox.vue.es.js.map
