{"version":3,"file":"BaseDetailBox.vue.es.js","sources":["../../../src/components/BaseDetailBox/BaseDetailBox.vue"],"sourcesContent":["<template>\n  <base-box\n    :box-size=\"{ width: '100%' }\"\n    :box-hover=\"false\"\n    box-ratio=\"0\"\n    class=\"base-detail-box\">\n    <dl class=\"base-detail-box-dl\">\n      <template\n        v-for=\"(item, index) in data\">\n        <dt :key=\"'dt' + index\">\n          {{ getLangLabel(item[labelPropertyName], true) }}\n        </dt>\n        <dd :key=\"'dd' + index\">\n          <!-- TODO: if necessary also add language specific function here! -->\n          {{ item[valuePropertyName] }}\n        </dd>\n      </template>\n    </dl>\n  </base-box>\n</template>\n\n<script>\nimport BaseBox from '../BaseBox/BaseBox';\nimport setLanguage from '../../mixins/i18n';\n\nexport default {\n  name: 'BaseDetailBox',\n  components: {\n    BaseBox,\n  },\n  mixins: [\n    setLanguage,\n  ],\n  props: {\n    /**\n     * an array with objects to pass the data to be displayed, expecting an object with\n     * `label` and `value` properties - if different please use `valuePropertyName`\n     * and `labelPropertyName` respectively!\n     */\n    data: {\n      type: Array,\n      default: () => [],\n    },\n    /**\n     * customize the value property displayed\n     */\n    valuePropertyName: {\n      type: String,\n      default: 'value',\n    },\n    /**\n     * customize the label property displayed\n     */\n    labelPropertyName: {\n      type: String,\n      default: 'label',\n    },\n    /**\n     * specify a language (ISO 639-1) (used for label if label is language specific object\n     * e.g. `{ de: 'xxx', en: 'yyy' }`)\n     */\n    language: {\n      type: String,\n      default: 'en',\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  @import \"../../styles/variables\";\n\n  $width-dl: 20%;\n  $width-dd: 80%;\n\n  .base-detail-box {\n    padding: $spacing;\n  }\n\n  .base-detail-box-dl {\n    display: block;\n\n    dt {\n      color: $font-color-second;\n      margin-top: $spacing;\n    }\n\n    dt:first-of-type {\n      margin-top: 0;\n    }\n\n    dd {\n      margin-top: $spacing-small;\n    }\n\n    @media screen and (min-width: 640px) {\n      display: flex;\n      flex-wrap: wrap;\n\n      dt,\n      dd {\n        margin-top: $spacing;\n      }\n\n      dt {\n        position: relative;\n        margin-right: $spacing;\n        overflow: hidden;\n\n        &:after {\n          content: '';\n          height: 100%;\n          width: $fade-out-width;\n          position: absolute;\n          top: 0;\n          right: -1px;\n          background: linear-gradient(to right, rgba(255, 255, 255, 0) , rgba(255, 255, 255, 1));\n        }\n      }\n\n      dd {\n        margin-left: $spacing;\n      }\n\n      dt:first-of-type,\n      dd:first-of-type {\n        margin-top: 0;\n      }\n\n      dt {\n        width: calc(#{$width-dl} - #{$spacing});\n      }\n\n      dt + dd {\n        width: calc(#{$width-dd} - #{$spacing-large});\n      }\n\n      dd + dd {\n        width: calc(#{$width-dd} - #{$spacing-large});\n        margin-top: $spacing-small;\n        margin-left: calc(#{$width-dl} + #{$spacing});\n      }\n    }\n  }\n</style>\n"],"names":["_sfc_main","BaseBox","setLanguage"],"mappings":";;;;AAyBA,MAAAA,IAAA;AAAA,EACA,MAAA;AAAA,EACA,YAAA;AAAA,IACA,SAAAC;AAAA,EACA;AAAA,EACA,QAAA;AAAA,IACAC;AAAAA,EACA;AAAA,EACA,OAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,MAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA,MAAA,CAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,mBAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,mBAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,UAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA,EACA;AACA;;;;;;;;;;;;;;;;;"}