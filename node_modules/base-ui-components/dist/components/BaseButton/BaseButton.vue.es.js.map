{"version":3,"file":"BaseButton.vue.es.js","sources":["../../../src/components/BaseButton/BaseButton.vue"],"sourcesContent":["<template>\n  <button\n    :disabled=\"disabled\"\n    :aria-disabled=\"disabled\"\n    :aria-labelledby=\"setLabelIdReference ? internalId : false\"\n    :aria-describedby=\"description ? `${internalId}-description` : false\"\n    :type=\"buttonType\"\n    :class=\"['base-button',\n             `base-button-${buttonStyle}`,\n             `base-button-icon-${iconPosition}`,\n             `base-button-align-${alignText}`,\n             { 'base-button-background': hasBackgroundColor },\n             { 'base-button-active': active }]\"\n    @click.prevent=\"clicked\">\n    <base-icon\n      v-if=\"icon\"\n      :name=\"icon\"\n      :title=\"iconTitle\"\n      :class=\"['base-button-icon',\n               'base-button-icon-' + iconSize,\n               { 'base-button-icon-colored': iconColored },\n               { 'base-button-icon-hide': hideIcon }]\" />\n\n    <!-- @slot create custom content (e.g. icon) left of text -->\n    <slot name=\"left-of-text\" />\n\n    <!-- @slot have your own text element which also allows for easier custom styling.\n      @binding {string|number} label-id If you are using this slot please also set the id of your custom element to `label-id` since this id is used for the <button> `aria-labelledby` attribute -->\n    <slot\n      name=\"text\"\n      :label-id=\"internalId\">\n      <span\n        v-if=\"text && buttonStyle !== 'circle'\"\n        :id=\"internalId\"\n        :class=\"['base-button-text', { 'base-button-text__nowrap': !buttonTextWrap }]\">\n        {{ text }}\n      </span>\n    </slot>\n\n    <!-- @slot create custom content (e.g. icon) right of text -->\n    <slot name=\"right-of-text\" />\n\n    <BaseBoxTooltip\n      v-if=\"showTooltip\"\n      @clicked=\"clicked\" />\n    <span\n      v-if=\"description\"\n      :id=\"`${internalId}-description`\"\n      class=\"hide\">\n      {{ description }}\n    </span>\n  </button>\n</template>\n\n<script>\nimport { createId } from '@/utils/utils';\nimport BaseIcon from '../BaseIcon/BaseIcon';\nimport BaseBoxTooltip from '../BaseBoxTooltip/BaseBoxTooltip';\n\n/**\n * Standard buttons\n */\nexport default {\n  name: 'BaseButton',\n  components: {\n    BaseIcon,\n    BaseBoxTooltip,\n  },\n  props: {\n    /**\n     * Button Text\n     *\n     * if button text is left empty and slot `text` is not used (so this is a button only\n     *  with an icon) please set at least the prop `description` or `iconTitle` for accessibility reasons!\n     */\n    text: {\n      type: String,\n      default: '',\n    },\n    // TODO: need to check if it is possible to use custom icons --> if yes description!\n    /**\n     * icon displayed\n     * see [BaseIcon](BaseIcon) for available icons\n     */\n    icon: {\n      type: String,\n      default: null,\n    },\n    /**\n     * set from outside if icon should be made invisible\n     */\n    hideIcon: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * specify if icon should be displayed left or right\n     */\n    iconPosition: {\n      type: String,\n      default: 'left',\n      validator(val) {\n        return ['top', 'right', 'left'].includes(val);\n      },\n    },\n    /**\n     * set button active (will display a colored border on botton) (row style)\n     * or keep icon colored (single style)\n     */\n    active: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * specify a button style\n     */\n    buttonStyle: {\n      type: String,\n      default: 'single',\n      validator(val) {\n        return ['single', 'row', 'secondary', 'circle'].includes(val);\n      },\n    },\n    /**\n     * display icon with app-color\n     */\n    iconColored: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * specify icon size\n     * **Caveat**: this will have no effect on `buttonStyle`: `secondary` | `circle` - icon will always be small\n     */\n    iconSize: {\n      type: String,\n      default: 'small',\n      validator(val) {\n        return ['small', 'large'].includes(val);\n      },\n    },\n    /**\n     * set a title for the icon that is shown as a tooltip on hover\n     */\n    iconTitle: {\n      type: String,\n      default: '',\n    },\n    /**\n     * set button inactive\n     */\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * set button type\n     */\n    buttonType: {\n      type: String,\n      default: 'button',\n    },\n    /**\n     * define alignment of button content\n     * Info: has no effect, if iconPosition 'top' is set\n     */\n    alignText: {\n      type: String,\n      default: 'center',\n      validator(val) {\n        return ['center', 'left', 'right'].includes(val);\n      },\n    },\n    /**\n     * background color is fixed however at least possibility to\n     * display transparent instead\n     */\n    hasBackgroundColor: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * show tooltip\n     */\n    showTooltip: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Add a button description to be used by aria-describedby\n     */\n    description: {\n      type: String,\n      default: '',\n    },\n    /**\n     * set false if button text should not be wrapped\n     */\n    buttonTextWrap: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    return {\n      internalId: createId(),\n    };\n  },\n  computed: {\n    setLabelIdReference() {\n      return !!this.text || !!this.$slots.text;\n    },\n  },\n  methods: {\n    clicked(event) {\n      /**\n       * triggered on button click\n       * @event clicked\n       * @param {Event} - the native click event\n       */\n      this.$emit('clicked', event);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  @import '../../styles/variables.scss';\n\n  .base-button {\n    position: relative;\n    padding: 0 $spacing;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    background-color: transparent;\n    transition: all 0.2s ease-in-out;\n    justify-content: center;\n    color: inherit;\n\n    .base-button-text {\n      text-align: center;\n\n      &.base-button-text__nowrap {\n        white-space: nowrap;\n      }\n    }\n\n    .base-button-icon {\n      height: $icon-small;\n      width: $icon-small;\n      max-width: $icon-small;\n      flex: 0 0 auto;\n      // added for drop icon animation\n      transition: transform 0.5s ease;\n\n      &.base-button-icon-colored {\n        color: $app-color;\n      }\n    }\n\n    /**\n     * button-style: row\n     */\n    &.base-button-row {\n      min-height: $row-height-large;\n\n      &.base-button-background {\n        background-color: white;\n      }\n\n      .base-button-icon-large {\n        height: $icon-large;\n        width: $icon-large;\n        max-width: $icon-large;\n      }\n\n      .base-button-icon-small {\n        height: $icon-medium;\n        width: $icon-medium;\n        max-width: $icon-medium;\n      }\n\n      &.base-button-active {\n        /* TODO: adjust this to style guide if necessary */\n        box-shadow: $box-shadow-reg, inset 0 (-$border-active-width) 0 0 $app-color;\n        z-index: map-get($zindex, button-active);\n      }\n    }\n\n    /**\n     * button-style: single\n     */\n    &.base-button-single {\n      min-height: $row-height-small;\n\n      &.base-button-background {\n        background-color: $button-header-color;\n      }\n\n      .base-button-icon-large {\n        height: $icon-medium;\n        width: $icon-medium;\n        max-width: $icon-medium;\n      }\n\n      .base-button-icon-small {\n        height: $icon-small;\n        width: $icon-small;\n        max-width: $icon-small;\n      }\n\n      &.base-button-active .base-button-icon {\n        color: $app-color;\n      }\n    }\n\n    /**\n     * button-style: secondary\n     */\n    &.base-button-secondary {\n      font-size: $font-size-small;\n      color: $font-color-second;\n\n      &.base-button-background {\n        background-color: $button-header-color;\n      }\n\n      &:disabled {\n        color: $font-color-third;\n\n        &:hover, &:focus, &:active, &:active .base-button-icon, &:focus .base-button-icon {\n          color: $font-color-third;\n        }\n      }\n    }\n\n    .base-button-icon-hide {\n      visibility: hidden;\n    }\n\n    /**\n     * button-style: circle\n     */\n    &.base-button-circle {\n      background-color: #ffffff;\n      border-radius: 50%;\n      color: $font-color-second;\n      border: 1px solid $font-color-second;\n      padding: 0;\n      width: 24px;\n      height: 24px;\n\n      &:hover {\n        color: $app-color;\n        border-color: $app-color;\n      }\n\n      &:focus {\n        color: $app-color;\n      }\n    }\n\n    /**\n     * modifiers\n     */\n    &.base-button-active {\n      /* TODO: adjust this to style guide if necessary */\n      box-shadow: $box-shadow-reg, inset 0 (-$border-active-width) 0 0 $app-color;\n      z-index: map-get($zindex, button-active);\n    }\n\n    &.base-button-align-left:not(&.base-button-icon-top) {\n      justify-content: flex-start;\n    }\n\n    &.base-button-align-center {\n      justify-content: center;\n    }\n\n    &.base-button-align-right:not(&.base-button-icon-top)  {\n      justify-content: flex-end;\n    }\n\n    &.base-button-icon-top {\n      flex-direction: column;\n      justify-content: center;\n      line-height: $line-height;\n    }\n\n    &.base-button-icon-left {\n      .base-button-icon + .base-button-text {\n        margin-left: $spacing;\n      }\n    }\n\n    &.base-button-icon-right {\n      .base-button-icon {\n        order: 1;\n\n        & + .base-button-text {\n          margin-right: $spacing;\n        }\n      }\n    }\n\n    /* class is set in following components: baseExpandBox and BaseAdvancedSearch */\n    &.base-button-icon-rotate-180 {\n      .base-button-icon {\n        transform: rotate(180deg);\n      }\n    }\n\n    &:hover {\n      color: $app-color;\n    }\n\n    &:active .base-button-icon, &:focus .base-button-icon {\n      color: $app-color;\n    }\n\n    &:disabled {\n      cursor: default;\n      color: $graytext-color;\n\n      &:hover, &:focus, &:active, &:active .base-button-icon, &:focus .base-button-icon {\n        color: $graytext-color;\n      }\n    }\n  }\n</style>\n"],"names":["_sfc_main","BaseIcon","BaseBoxTooltip","val","createId","event"],"mappings":";;;;;AA8DA,MAAAA,IAAA;AAAA,EACA,MAAA;AAAA,EACA,YAAA;AAAA,IACA,UAAAC;AAAA,IACA,gBAAAC;AAAA,EACA;AAAA,EACA,OAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,MAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,MAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,UAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,cAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,MACA,UAAAC,GAAA;AACA,eAAA,CAAA,OAAA,SAAA,MAAA,EAAA,SAAAA,CAAA;AAAA,MACA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,QAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,aAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,MACA,UAAAA,GAAA;AACA,eAAA,CAAA,UAAA,OAAA,aAAA,QAAA,EAAA,SAAAA,CAAA;AAAA,MACA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,aAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,UAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,MACA,UAAAA,GAAA;AACA,eAAA,CAAA,SAAA,OAAA,EAAA,SAAAA,CAAA;AAAA,MACA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,WAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,UAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,YAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,WAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,MACA,UAAAA,GAAA;AACA,eAAA,CAAA,UAAA,QAAA,OAAA,EAAA,SAAAA,CAAA;AAAA,MACA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,oBAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,aAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,aAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,gBAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,OAAA;AACA,WAAA;AAAA,MACA,YAAAC,EAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,UAAA;AAAA,IACA,sBAAA;AACA,aAAA,CAAA,CAAA,KAAA,QAAA,CAAA,CAAA,KAAA,OAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,SAAA;AAAA,IACA,QAAAC,GAAA;AAMA,WAAA,MAAA,WAAAA,CAAA;AAAA,IACA;AAAA,EACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}