import a from "vue-click-outside";
import l from "vue2-datepicker";
import s from "vue2-datepicker/locale/en";
import r from "vue2-datepicker/locale/de";
import o from "vue2-datepicker/locale/fr";
import p from "../BaseIcon/BaseIcon.vue.es.js";
import "./BaseDatePanel.vue.es2.js";
import "./BaseDatePanel.vue.es3.js";
import u from "../../_virtual/_plugin-vue2_normalizer.es.js";
const c = {
  name: "BaseDatePanel",
  components: {
    BaseIcon: p,
    DatePicker: l
  },
  directives: {
    ClickOutside: a
  },
  model: {
    prop: "input",
    event: "selected"
  },
  props: {
    /**
     * specify if icon should be displayed left or right
     */
    iconPosition: {
      type: String,
      default: "left",
      validator(t) {
        return ["left", "right"].includes(t);
      }
    },
    /**
     * set input field from outside.
     * format: `{ date: 'yyyy-MM-dd' }`
     */
    input: {
      type: Object,
      default: () => ({})
    },
    /**
     * show panel permanently
     */
    isInline: {
      type: Boolean,
      default: !1
    },
    /**
     * label, required for usability purposes, handle
     * showing of label with property `showLabel`
     */
    label: {
      type: String,
      required: !0
    },
    /**
     * set calendar language
     */
    language: {
      type: String,
      default: "en"
    },
    /**
     * defines if input label should be visible
     */
    showLabel: {
      type: Boolean,
      default: !0
    },
    /**
     * select type of calendar
     */
    type: {
      type: String,
      default: "date",
      validator(t) {
        return ["date", "week"].includes(t);
      }
    },
    /**
     * label will be replaced with selected date unless this is set `false`
     */
    showDateSelected: {
      type: Boolean,
      default: !0
    }
  },
  data() {
    return {
      inputInt: null,
      isOpen: !1,
      /**
       * datepicker localisations
       *   using object fixes problem of missing localisation files in rollup-esm-build
       */
      lang: {
        de: r,
        en: s,
        fr: o
      }
    };
  },
  computed: {
    labelInt() {
      return !this.isInline && this.showDateSelected && this.inputInt ? new Date(this.inputInt).toLocaleDateString(this.language) : this.label;
    }
  },
  watch: {
    input: {
      handler(t) {
        t && this.inputInt && t.date !== this.inputInt && (this.inputInt = t.date);
      },
      // to not need to do extra assignment in created()
      immediate: !0
    },
    inputInt: {
      handler(t, e) {
        t && t !== e && (this.emitData(t), this.isOpen = !1);
      },
      deep: !0
    }
  },
  methods: {
    /**
     * Define object to emit
     *
     * @param {string} date
     * @returns {object}
     */
    emitObject(t) {
      const e = {
        date: t
      };
      return this.type === "week" && (e.week = this.$refs.datePanel.getWeek(new Date(t))), e;
    },
    /**
     * emit data function
     */
    emitData(t) {
      this.$emit("selected", this.emitObject(t));
    }
  }
};
var d = function() {
  var e = this, i = e._self._c;
  return i("div", { directives: [{ name: "click-outside", rawName: "v-click-outside", value: () => e.isOpen = !1, expression: "() => isOpen = false" }], staticClass: "base-date-panel" }, [i("div", { class: [
    "base-date-panel__label",
    { "base-date-panel__label--hover": !e.isInline }
  ], on: { keydown: function(n) {
    if (!n.type.indexOf("key") && e._k(n.keyCode, "enter", 13, n.key, "Enter"))
      return null;
    e.isOpen = !e.isOpen;
  }, click: function(n) {
    n.stopPropagation(), e.isOpen = !e.isOpen;
  } } }, [e.isInline ? e._e() : i("base-icon", { class: [
    "base-date-panel__icon",
    { "base-date-panel__icon--active": e.isOpen },
    { "base-date-panel__icon--right": e.iconPosition === "right" }
  ], attrs: { name: "calendar-many", title: e.label } }), e.showLabel || !e.isInline ? i("label", [e._v(" " + e._s(e.labelInt || e.label) + " ")]) : e._e()], 1), i("div", { on: { click: function(n) {
    n.stopPropagation();
  } } }, [i("DatePicker", { ref: "datePanel", attrs: { "append-to-body": !1, clearable: !1, editable: !1, inline: e.isInline, input: e.input, lang: e.lang[e.language], type: e.type, format: "YYYY-MM-DD", open: e.isOpen, "value-type": "format" }, model: { value: e.inputInt, callback: function(n) {
    e.inputInt = n;
  }, expression: "inputInt" } })], 1)]);
}, f = [], m = /* @__PURE__ */ u(
  c,
  d,
  f,
  !1,
  null,
  "6a54d9cb",
  null,
  null
);
const D = m.exports;
export {
  D as default
};
//# sourceMappingURL=BaseDatePanel.vue.es.js.map
