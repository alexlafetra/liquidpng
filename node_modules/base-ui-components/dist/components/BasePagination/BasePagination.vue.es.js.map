{"version":3,"file":"BasePagination.vue.es.js","sources":["../../../src/components/BasePagination/BasePagination.vue"],"sourcesContent":["<template>\n  <nav\n    ref=\"pagination\"\n    class=\"base-pagination\">\n    <component\n      :is=\"numberElement\"\n      :to=\"!!useLinkElement ? getLinkPath(active - 1 > 0 ? active - 1 : 1) : false\"\n      :aria-disabled=\"active <= 1\"\n      :tabindex=\"active <= 1 ? -1 : 0\"\n      :class=\"[\n        'base-pagination__arrow',\n        { 'base-pagination__arrow-icon-inactive': active <= 1 },\n      ]\"\n      aria-label=\"Go to previous page\"\n      @click.prevent=\"active - 1 > 0 && !useLinkElement ? setActivePage(active - 1) : false\"\n      @click.native.prevent=\"active - 1 > 0 && !useLinkElement ? setActivePage(active - 1) : false\"\n      @keydown.enter=\"active - 1 > 0 && !useLinkElement ? setActivePage(active - 1) : false\">\n      <base-icon\n        class=\"base-pagination__arrow-icon base-pagination__arrow-icon-left\"\n        name=\"arrow-left\" />\n    </component>\n    <div class=\"base-pagination__row\">\n      <!-- ELEMENT TO DISPLAY WHEN TOTAL NUMBER OF ELEMENTS FITS INTO PARENT -->\n      <template v-if=\"total <= maxNumbers\">\n        <component\n          :is=\"numberElement\"\n          v-for=\"n in total\"\n          :key=\"n\"\n          :to=\"useLinkElement ? getLinkPath(n) : false\"\n          :tabindex=\"!useLinkElement ? 0 : false\"\n          :aria-current=\"active === n ? 'true' : false\"\n          :aria-label=\"`${active === n ? 'Current Page, Page' : 'Go to page'} ${n}`\"\n          :class=\"['base-pagination__number', { 'base-pagination__number-active': active === n }]\"\n          @keydown.enter=\"setActivePage(n)\"\n          @click.native.prevent=\"setActivePage(n)\"\n          @click.prevent=\"setActivePage(n)\">\n          {{ n }}\n        </component>\n      </template>\n      <template v-else>\n        <component\n          :is=\"numberElement\"\n          v-if=\"start !== 1\"\n          :to=\"useLinkElement ? getLinkPath(1) : false\"\n          :tabindex=\"!useLinkElement ? 0 : false\"\n          :aria-current=\"active === 1 ? 'true' : false\"\n          :aria-label=\"`${active === 1 ? 'Current Page, Page' : 'Go to page'} ${1}`\"\n          :class=\"['base-pagination__number', { 'base-pagination__number-active': active === 1 }]\"\n          @keydown.enter=\"setActivePage(1)\"\n          @click.native.prevent=\"setActivePage(1)\"\n          @click.prevent=\"setActivePage(1)\">\n          {{ 1 }}\n        </component>\n        <span\n          v-if=\"start > 2\"\n          class=\"base-pagination__more\">&#8943;</span>\n        <component\n          :is=\"numberElement\"\n          v-for=\"n in subset\"\n          :key=\"n\"\n          :to=\"useLinkElement ? getLinkPath(n) : false\"\n          :tabindex=\"!useLinkElement ? 0 : false\"\n          :aria-current=\"active === n ? 'true' : false\"\n          :aria-label=\"`${active === n ? 'Current Page, Page' : 'Go to page'} ${n}`\"\n          :class=\"['base-pagination__number', { 'base-pagination__number-active': active === n }]\"\n          @keydown.enter=\"setActivePage(n)\"\n          @click.native.prevent=\"setActivePage(n)\"\n          @click.prevent=\"setActivePage(n)\">\n          {{ n }}\n        </component>\n        <span\n          v-if=\"(end) < (total - 1) && (end) !== (total - 1)\"\n          class=\"base-pagination__more\">&#8943;</span>\n        <component\n          :is=\"numberElement\"\n          v-if=\"(end - 1) < (total - 1) && (end - 1) !== (total - 1)\"\n          :to=\"useLinkElement ? getLinkPath(total) : false\"\n          :tabindex=\"!useLinkElement ? 0 : false\"\n          :aria-current=\"active === total ? 'true' : false\"\n          :aria-label=\"`${active === total ? 'Current Page, Page' : 'Go to page'} ${total}`\"\n          :class=\"['base-pagination__number',\n                   { 'base-pagination__number-active': active === total }]\"\n          @keydown.enter=\"setActivePage(total)\"\n          @click.native.prevent=\"setActivePage(total)\"\n          @click.prevent=\"setActivePage(total)\">\n          {{ total }}\n        </component>\n      </template>\n    </div>\n    <component\n      :is=\"numberElement\"\n      :to=\"!!useLinkElement ? getLinkPath(active + 1 <= total ? active + 1 : total) : false\"\n      :aria-disabled=\"active >= total\"\n      :tabindex=\"active >= total ? -1 : 0\"\n      :class=\"[\n        'base-pagination__arrow',\n        { 'base-pagination__arrow-icon-inactive': active >= total },\n      ]\"\n      aria-label=\"Go to next Page\"\n      @click.prevent=\"active + 1 <= total && !useLinkElement ? setActivePage(active + 1) : false\"\n      @click.native.prevent.prevent=\"active + 1 <= total && !useLinkElement\n        ? setActivePage(active + 1) : false\"\n      @keydown.enter=\"active + 1 <= total && !useLinkElement ? setActivePage(active + 1) : false\">\n      <base-icon\n        class=\"base-pagination__arrow-icon base-pagination__arrow-icon-right\"\n        name=\"arrow-left\" />\n    </component>\n  </nav>\n</template>\n\n<script>\nimport { debounce } from '@/utils/utils';\nimport BaseIcon from '../BaseIcon/BaseIcon';\n\n/**\n * Pagination component\n */\n\nexport default {\n  name: 'BasePagination',\n  components: {\n    BaseIcon,\n  },\n  model: {\n    prop: 'current',\n    event: 'set-page',\n  },\n  props: {\n    /**\n     * specify total number of pages\n     */\n    total: {\n      type: Number,\n      default: null,\n    },\n    /**\n     * currently active page number\n     */\n    current: {\n      type: Number,\n      default: 1,\n    },\n    /**\n     * specify if pagination elements should be links - specify a vue link element or\n     * set the variable false if element should not be a link\n     * (this needs vue-router)\n     * currently only vue components (like 'RouterLink' or 'NuxtLink') are supported!\n     */\n    useLinkElement: {\n      type: [String, Boolean],\n      default: false,\n      validator: val => (typeof val === 'boolean' && !val) || (typeof val === 'string' && val),\n    },\n  },\n  data() {\n    return {\n      /**\n       * currently active page number\n       * @type {number}\n       */\n      active: this.current,\n      /**\n       * number the displayed pages between '...' should start with\n       * (only relevant if not all numbers can be displayed)\n       * @type {?number}\n       */\n      start: null,\n      /**\n       * number the displayed pages between the '...' should end with\n       * (only relevant if not all numbers can be displayed)\n       * @type {?number}\n       */\n      end: null,\n      /**\n       * total numbers to be displayed before the '...' depending on the width of the\n       * pagination element (only relevant if not all numbers can be displayed)\n       * @type {number}\n       */\n      subsetNumber: 7,\n      /**\n       * max numbers to be displayed\n       * @type {number}\n       */\n      maxNumbers: 10,\n      /**\n       * an observer to adjust displayed numbers according to component\n       * width\n       * @type {?ResizeObserver}\n       */\n      resizeObserver: null,\n    };\n  },\n  computed: {\n    /**\n     * calculate the actual subset page numbers to be displayed\n     * @returns {number[]}\n     */\n    subset() {\n      // check if subset number would exceed total number of items and start\n      // array from total - subsetNumber\n      const subsetStart = this.start + this.subsetNumber > this.total\n        ? this.total - this.subsetNumber + 1 : this.start;\n      return Array.from(\n        { length: this.subsetNumber },\n        (v, k) => k + subsetStart,\n      );\n    },\n    /**\n     * check if element should be displayed as a link element, otherwise make it a <span>\n     * @returns {String|Boolean|string}\n     */\n    numberElement() {\n      return this.useLinkElement ? this.useLinkElement : 'div';\n    },\n  },\n  watch: {\n    /**\n     * in case\n     */\n    $route(to) {\n      if (this.useLinkElement && to && to.query && to.query.page && to.query.page !== this.active) {\n        this.active = Number(to.query.page);\n      }\n    },\n    /**\n     * if active number changes inform parent\n     * @param {number} val - the new page number active\n     */\n    active(val) {\n      // check if new number is different from prop value\n      if (this.current !== val) {\n        /**\n         * triggered on page select\n         *\n         * @event set-page\n         * @param {number} - the new page number\n         */\n        this.$emit('set-page', val);\n      }\n      // adjust the start and end value accordingly (if not all numbers can be displayed)\n      this.setStartEnd();\n    },\n    /**\n     * check if parent prop changes\n     * @param {number} val - the page number provided by the parent component\n     */\n    current(val) {\n      this.active = val;\n    },\n  },\n  mounted() {\n    // initialize the start and end variable in case not all numbers can be displayed\n    this.setStartEnd();\n    // add an resize observer to adapt visible page numbers to component width\n    this.initObserver();\n  },\n  beforeDestroy() {\n    // remove observer again\n    if (this.resizeObserver) this.resizeObserver.disconnect();\n  },\n  methods: {\n    /**\n     * function to initialize the resize observer necessary to adapt\n     * pagination to component width at all times\n     */\n    initObserver() {\n      // create an observer with the set overflow calc function\n      const tempResizeObserver = new ResizeObserver(debounce(50, () => {\n        this.setStartEnd();\n      }));\n      // put it on the relevant element\n      tempResizeObserver.observe(this.$refs.pagination);\n      // store it\n      this.resizeObserver = tempResizeObserver;\n    },\n    /**\n     * depending on with of the parent element of the pagination calculate\n     * how many page numbers can be displayed\n     */\n    setStartEnd() {\n      // since observer is carried out one last time before component is destroyed\n      // we need to check if element still exists or was unmounted already\n      if (this.$refs.pagination) {\n        // get parent width\n        const elementWidth = this.$refs.pagination.clientWidth;\n        // set the subset and the max number accordingly\n        if (elementWidth < 400) {\n          this.subsetNumber = 1;\n          this.maxNumbers = 5;\n        } else if (elementWidth < 550) {\n          this.subsetNumber = 3;\n          this.maxNumbers = 8;\n        } else if (elementWidth < 700) {\n          this.subsetNumber = 5;\n          this.maxNumbers = 8;\n        } else {\n          this.subsetNumber = 7;\n          this.maxNumbers = 10;\n        }\n        // calc start and end number from the subset number\n        this.start = this.active - this.subsetNumber / 2 > 0\n          ? this.active - Math.floor(this.subsetNumber / 2) : 1;\n        this.end = this.active + this.subsetNumber / 2 < this.total\n          ? this.active + Math.floor(this.subsetNumber / 2) : this.total;\n      }\n    },\n    /**\n     * function to set a new page number active\n     * @param {number} page - the new page number\n     */\n    setActivePage(page) {\n      // if new page is not set via url set it here manually\n      if (!this.useLinkElement) {\n        // set internal variable to new page number\n        this.active = page;\n      }\n    },\n    /**\n     * get the correct link in case element is a link element\n     * @param {number} page - the page number of the element in question\n     * @returns {{path: string, query: Object}|string}\n     */\n    getLinkPath(page) {\n      // check if router in project and link element is used and set link path accordingly if yes\n      if (!!this.useLinkElement && this.$route) {\n        return ({ path: this.$route.fullPath, query: { page } });\n      }\n      return '';\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n  @import '../../styles/variables.scss';\n\n  .base-pagination {\n    text-align: center;\n    margin-top: $spacing;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    .base-pagination__arrow, .base-pagination__number {\n      cursor: pointer;\n    }\n\n    .base-pagination__row {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      .base-pagination__number {\n        position: relative;\n        font-weight: bold;\n        background-color: $box-color;\n        padding: 0 $spacing-small;\n        height: 2 * $spacing;\n        min-width: 2 * $spacing;\n        margin-right: $spacing-small;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        transition: all 0.2s ease;\n\n        &:last-child {\n          margin-right: 0;\n        }\n\n        &:hover, &:focus, &:active, &:focus-within {\n          color: $app-color;\n        }\n\n        &.base-pagination__number-active {\n          color: white;\n          background-color: $app-color;\n          cursor: default;\n\n          &:hover {\n            color: white;\n          }\n        }\n        .base-pagination__link {\n          position: absolute;\n          height: 100%;\n          width: 100%;\n        }\n      }\n\n      .base-pagination__more {\n        margin-right: $spacing-small;\n      }\n    }\n\n    .base-pagination__arrow {\n      &:hover .base-pagination__arrow-icon,\n      &:active .base-pagination__arrow-icon,\n      &:focus .base-pagination__arrow-icon {\n        fill: $app-color;\n      }\n\n      .base-pagination__arrow-icon {\n        height: $icon-medium;\n        width: $icon-medium;\n        margin: 0 $spacing;\n\n        &.base-pagination__arrow-icon-right {\n          transform: rotate(180deg);\n        }\n      }\n\n      &.base-pagination__arrow-icon-inactive {\n        cursor: default;\n\n        .base-pagination__arrow-icon,\n        &:hover .base-pagination__arrow-icon {\n          fill: $graytext-color;\n        }\n      }\n    }\n\n    .base-pagination__row, .base-pagination__arrow-icon {\n      flex: 0 0 auto;\n    }\n\n    .base-pagination__arrow, .base-pagination__number {\n      outline: none;\n    }\n  }\n\n  @media screen and (max-width: $mobile) {\n    .base-pagination__arrow-icon {\n      margin: 0 $spacing-small;\n    }\n  }\n</style>\n"],"names":["_sfc_main","BaseIcon","val","subsetStart","v","k","to","tempResizeObserver","debounce","elementWidth","page"],"mappings":"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"}