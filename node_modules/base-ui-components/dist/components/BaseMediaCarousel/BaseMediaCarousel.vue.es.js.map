{"version":3,"file":"BaseMediaCarousel.vue.es.js","sources":["../../../src/components/BaseMediaCarousel/BaseMediaCarousel.vue"],"sourcesContent":["<template>\n  <transition name=\"grow\">\n    <div\n      v-if=\"showInt\"\n      ref=\"mediaCarousel\"\n      class=\"base-media-carousel\">\n      <div class=\"base-media-carousel__background\" />\n\n      <button\n        class=\"base-media-carousel__close\"\n        @click=\"hide\">\n        <base-icon\n          name=\"remove\" />\n      </button>\n\n      <div\n        :id=\"swiperId\"\n        class=\"swiper-container\">\n        <template\n          v-if=\"items.length > 1\">\n          <base-icon\n            name=\"prev\"\n            class=\"swiper-button swiper-button-prev\" />\n\n          <base-icon\n            name=\"next\"\n            class=\"swiper-button swiper-button-next\" />\n        </template>\n\n        <div class=\"swiper-wrapper\">\n          <div\n            v-for=\"(media, index) in items\"\n            :key=\"index\"\n            class=\"swiper-slide\">\n            <base-media-carousel-item\n              ref=\"baseMedia\"\n              :autoplay=\"index === initialSlide\"\n              :additional-info=\"media.additionalInfo\"\n              :allow-download=\"allowDownload\"\n              :current-slide-info=\"items.length > 1 ? `${index + 1} / ${items.length}` : ''\"\n              :display-name=\"media.title\"\n              :display-size=\"media.displaySize\"\n              :download-url=\"media.downloadUrl\"\n              :info-texts=\"infoTexts\"\n              :media-url=\"media.mediaUrl\"\n              :media-poster-url=\"media.mediaPosterUrl\"\n              :media-type=\"media.mediaType\"\n              :orientation=\"media.orientation\"\n              :previews=\"media.previews\"\n              :hls-start-level=\"media.hlsStartLevel\"\n              tabindex=\"0\"\n              @download=\"download\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport BaseMediaCarouselItem from '@/components/BaseMediaCarousel/BaseMediaCarouselItem';\nimport BaseIcon from '@/components/BaseIcon/BaseIcon';\nimport popUpLock from '../../mixins/popUpLock';\n\n/**\n * Component allowing sliding through images,\n * audio, video (currently only hls format) and files\n */\n\nexport default {\n  name: 'BaseMediaCarousel',\n  components: {\n    BaseMediaCarouselItem,\n    BaseIcon,\n  },\n  mixins: [popUpLock],\n  props: {\n    /**\n     * items to display in a swiper carousel\n     *\n     * array of objects with the following **required** properties:\n     *  **title** `string` - the asset title\n     *  **mediaUrl** `string` - url of the medium to be displayed\n     *\n     *  additionally, type `video` also requires the following properties:\n     *  **mediaPosterUrl** `string` - url of image for poster property in html5 video tag\n     *  **displaySize** `Object` - set height and with from outside, needs to be an object with properties `height` and/or `width`.\n     *\n     *  **optional** properties:\n     *  **additionalInfo** `string[]` - additional info text below file name, an array of strings.\n     *  **downloadUrl** `string` - url for downloading the file\n     *  **mediaType** `string` - specify the media type - needs to be one of: `image`, `video`, `audio`, `pdf`. **Caveat**: if media type is not specified it is automatically determined from file ending!\n     *  **orientation** `number` - define how the image should be rotated (EXIF orientation values) (only for type `image`)\n     *  **previews** `Object[]` - specify an image `srcset` as an array of objects in the form `{ [mediawidth]: 'url' }` (only for type `image`)\n     *  **hlsStartLevel** `number` - define startLevel (size) of hls-video\n     *\n     */\n    items: {\n      type: Array,\n      default: () => [],\n    },\n    /**\n     * index of initial slide\n     *   this NEEDS to be provided if carousel should start with any other\n     *   than first image in items array\n     */\n    initialSlide: {\n      type: [Number, String],\n      default: 0,\n    },\n    /**\n     * define if download button should be shown and download be enabled\n     */\n    allowDownload: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * define information texts for download and view (for pdfs) buttons\n     */\n    infoTexts: {\n      type: Object,\n      default: () => ({\n        download: 'Download',\n        view: 'View',\n      }),\n    },\n    /**\n     * steer the display of the lightbox\n     */\n    showPreview: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * specify [swiper API options](https://swiperjs.com/swiper-api)\n     */\n    swiperOptions: {\n      type: Object,\n      default: () => ({\n        speed: 500,\n        keyboard: {\n          enabled: true,\n        },\n      }),\n    },\n  },\n  data() {\n    return {\n      showInt: this.showPreview,\n      // needed for popUpLock mixin\n      targetName: 'mediaCarousel',\n      swiper: null,\n      // eslint-disable-next-line\n      swiperId: `base-media-carousel__swiper${this._uid}`,\n      isMounted: false,\n    };\n  },\n  watch: {\n    showPreview(val) {\n      this.showInt = val;\n    },\n  },\n  mounted() {\n    this.isMounted = true;\n  },\n  updated() {\n    this.$nextTick(() => {\n      if (this.isMounted && this.showInt && this.swiper === null) {\n        this.initSwiper();\n        this.$el.addEventListener('keyup', e => this.escapeEvent(e));\n        this.$el.addEventListener('keydown', e => this.tabEvents(e));\n      }\n\n      if (!this.showInt) {\n        this.swiper = null;\n        this.$el.removeEventListener('keyup', e => this.escapeEvent(e));\n        this.$el.removeEventListener('keydown', e => this.tabEvents(e));\n      }\n    });\n  },\n  methods: {\n    /**\n     * hide preview\n     */\n    hide() {\n      /**\n       * triggered by clicking on close button\n       *\n       * @event hide\n       *\n       */\n      this.$emit('hide');\n    },\n    /**\n     * init Swiper\n     * control media after swipe\n     */\n    async initSwiper() {\n      // import swiper and plugins\n      // to avoid import/require issues in an SSR setup\n      // we import swiper when the component is already mounted\n      const { Swiper } = await import('swiper');\n      const { Keyboard } = await import('swiper');\n      const { Navigation } = await import('swiper');\n\n      const additionalOptions = {\n        init: false,\n        initialSlide: this.initialSlide,\n        navigation: {\n          nextEl: '.swiper-button-next',\n          prevEl: '.swiper-button-prev',\n        },\n        lazyPreloaderClass: 'base-media-preview-preloader',\n        // Threshold value in px.\n        // If \"touch distance\" will be lower than this value then swiper will not move\n        threshold: 10,\n        modules: [Navigation, Keyboard],\n      };\n\n      this.swiper = new Swiper(`#${this.swiperId}`, {\n        ...this.swiperOptions,\n        ...additionalOptions,\n      });\n\n      this.swiper.on('slideChange', () => {\n        this.mediaPause();\n      });\n\n      this.swiper.on('transitionEnd', () => {\n        // check if swiper is still there since this event is also called on swiper hide\n        if (this.swiper) {\n          // select active slide and set focus\n          const media = this.$refs.baseMedia[this.swiper.activeIndex];\n          media.$el.focus();\n        }\n      });\n\n      // calc of slide width is wrong on first initialization using component in ssr\n      // quickfix is to trigger resize after swiper init\n      // TODO: clarify and find better solution\n      this.swiper.on('init', () => {\n        // edge needs somehow setTimeout to trigger resize\n        setTimeout(() => {\n          window.dispatchEvent(new Event('resize'));\n        }, 0);\n      });\n\n      this.swiper.init();\n\n      // set focus to opened slide/media - otherwise esc key won't work on first slide\n      this.$refs.baseMedia[this.swiper.activeIndex].$el.focus();\n    },\n    /**\n     * pause media on previous slide\n     */\n    mediaPause() {\n      const media = this.$refs.baseMedia[this.swiper.previousIndex];\n\n      // video\n      if (media && media.$refs.baseMediaVideo) {\n        media.$refs.baseMediaVideo.pause();\n      }\n\n      // audio\n      if (media && media.$refs.baseMediaAudio) {\n        media.$refs.baseMediaAudio.pause();\n      }\n    },\n    /**\n     * intercept escape key event, hide modal\n     */\n    escapeEvent(e) {\n      if (e.key === 'Escape') {\n        this.hide();\n      }\n    },\n    /**\n     * intercept tab key event\n     * due swiper breaks using tab keys\n     */\n    tabEvents(e) {\n      if (e.shiftKey && e.key === 'Tab') {\n        e.preventDefault();\n\n        this.setFocus('prev');\n        return;\n      }\n\n      if (e.key === 'Tab') {\n        e.preventDefault();\n        this.setFocus('next');\n      }\n    },\n    /**\n     * get focusable dom elements per slide\n     *\n     * @return array\n     */\n    getFocusableItems() {\n      const focusable = 'button, audio, video[tabindex=\"0\"]';\n      const focusableBySlide = [];\n\n      this.$refs.baseMedia.forEach((slide) => {\n        // focusable dom elements\n        const items = Array.from(slide.$el.querySelectorAll(focusable));\n        // add current slide (is focused after slide change)\n        items.unshift(slide.$el);\n\n        focusableBySlide.push(items);\n      });\n\n      return focusableBySlide;\n    },\n    /**\n     * set focus to prev/next focusable dom element\n     * trigger slideEvent if needed\n     *\n     * @param {string} direction 'prev', 'next'\n     */\n    setFocus(direction = 'next') {\n      const items = this.getFocusableItems();\n      let currentSlide;\n      let currentFocus;\n\n      items.forEach((item, itemIndex) => {\n        item.forEach((element, elemIndex) => {\n          if (element.matches(':focus')) {\n            currentSlide = itemIndex;\n            currentFocus = elemIndex;\n          }\n        });\n      });\n\n      if (direction === 'next') {\n        if (items[currentSlide] && items[currentSlide][currentFocus + 1]) {\n          items[currentSlide][currentFocus + 1].focus();\n          return;\n        }\n        this.swiper.slideNext();\n      }\n\n      if (direction === 'prev') {\n        if (items[currentSlide] && items[currentSlide][currentFocus - 1]) {\n          items[currentSlide][currentFocus - 1].focus();\n          return;\n        }\n        this.swiper.slidePrev();\n      }\n    },\n    download(value) {\n      /**\n       * download button clicked\n       *\n       * @event download\n       * @property {string} url - the download url\n       * @property {string} name - the file name\n       *\n       */\n      this.$emit('download', value);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  @import \"../../styles/variables\";\n\n  // import swiper styles\n  @import '../../../node_modules/swiper/swiper.scss';\n  @import '../../../node_modules/swiper/modules/navigation/navigation.scss';\n  @import '../../../node_modules/swiper/modules/pagination/pagination.scss';\n  @import '../../../node_modules/swiper/modules/keyboard/keyboard.scss';\n  @import '../../../node_modules/swiper/modules/autoplay/autoplay.scss';\n\n  .base-media-carousel {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: map-get($zindex, modal_bg);\n    display: flex;\n    overflow: hidden;\n\n    &__background {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: $overlay-background-dark;\n    }\n\n    &__close {\n      position: absolute;\n      top: $spacing-large;\n      right: $spacing-large;\n      width: $icon-large;\n      height: $icon-large;\n      color: white;\n      z-index: 5;\n      transition: color 250ms ease-in-out;\n\n      &:focus,\n      &:hover {\n        cursor: pointer;\n        color: $app-color;\n      }\n\n      svg {\n        width: 100%;\n        height: 100%;\n      }\n    }\n\n    &__slide {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    &::v-deep {\n      .swiper-container {\n        width: 100%;\n      }\n\n      .swiper-button {\n        display: block;\n        width: calc(#{$icon-large} + (2 * #{$spacing-small}));\n        padding: 0 $spacing-small;\n        fill: white;\n        transform: translateY(-50%);\n        transition: fill 250ms ease-in-out;\n\n        &:focus,\n        &:hover {\n          fill: $app-color;\n        }\n\n        &-prev {\n          left: $spacing;\n        }\n\n        &-next {\n          right: $spacing;\n        }\n\n        @media screen and (max-width: $mobile) {\n          display: none;\n        }\n      }\n    }\n  }\n\n  .grow-enter-active,\n  .grow-leave-active {\n    transition: all 300ms ease-in-out;\n  }\n\n  .grow-enter, .grow-leave-to {\n    transform: scale(0.33);\n    opacity: 0;\n  }\n</style>\n"],"names":["_sfc_main","BaseMediaCarouselItem","BaseIcon","popUpLock","val","Swiper","Keyboard","Navigation","additionalOptions","media","focusable","focusableBySlide","slide","items","direction","currentSlide","currentFocus","item","itemIndex","element","elemIndex","value"],"mappings":"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"}