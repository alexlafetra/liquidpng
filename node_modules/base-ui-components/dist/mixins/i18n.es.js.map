{"version":3,"file":"i18n.es.js","sources":["../../src/mixins/i18n.js"],"sourcesContent":["export default {\n  computed: {\n    /**\n     * check if i18n plugin is available\n     * @returns {boolean}\n     */\n    hasI18n() {\n      return Boolean(this.$i18n);\n    },\n  },\n  methods: {\n    /**\n     * get the i18n term from json files present in your project - this works exactly like\n     * vue-i18n except that the count variable can not be skipped if you want to use\n     * named formatting\n     *\n     * @param {string} key - your locale file key\n     * @param {number} count - your count number for pluralization\n     * @param {object} variables - your object for named formatting - object property needs\n     *  to be named like the localization file variable\n     *  (https://kazupon.github.io/vue-i18n/guide/formatting.html)\n     * @returns {string}\n     */\n    getI18nTerm(key, count = -1, variables = {}) {\n      if (!key) return '';\n      if (this.hasI18n && this.$te(key)) {\n        if (count >= 0) {\n          return this.$tc(key, count, variables);\n        }\n        return this.$t(key, variables);\n      }\n      const termPath = key.split('.');\n      return termPath.pop() || key;\n    },\n    /**\n     * function to provide an object with translations for all available languages\n     * @param {string} key - the locale file key\n     * @param {string[]} locales - an array of available locales\n     * @returns {Object}\n     */\n    setLangLabels(key, locales) {\n      return locales\n        .reduce((prev, curr) => {\n          this.$set(prev, curr, this.$i18n\n            ? this.$t(key, curr) : key.split('.').pop());\n          return prev;\n        }, {});\n    },\n    /**\n     * function to\n     * a) check if provided value is a language object and if yes\n     * b) get the correct label from an object with language (ISO 639-1) as property\n     *    (e.g. { de: 'yyy', en: 'xxx' })\n     * @param {string|Object} value - the string or object to be processed\n     * @param {boolean} useAny - specify if a label in a different language should be used\n     *  if the currently set language has no result\n     * @returns {Object|string}\n     */\n    getLangLabel(value, useAny = false) {\n      const language = this.hasI18n\n        ? this.language || this.$i18n.locale : this.language;\n      if (typeof value === 'string') return value;\n      if (value && language && value[language]) {\n        return value[language];\n      }\n      if (value && language && useAny) {\n        const availableLang = Object.keys(value).find(key => !!value[key]);\n        // return the first one that has content\n        return value[availableLang] || value[language] || '';\n      }\n      return value;\n    },\n  },\n};\n"],"names":["i18n","computed","hasI18n","Boolean","$i18n","methods","getI18nTerm","key","count","arguments","length","undefined","variables","$te","$tc","$t","termPath","split","pop","setLangLabels","locales","_this","reduce","prev","curr","$set","getLangLabel","value","useAny","language","locale","availableLang","Object","keys","find"],"mappings":"AAAA,MAAeA,IAAA;AAAA,EACbC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,IAKRC,SAAO,WAAG;AACR,aAAOC,EAAQ,KAAKC;AAAAA,IACtB;AAAA,EACD;AAAA,EACDC,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAaPC,aAAW,SAACC,GAAiC;AAAA,UAA5BC,IAAKC,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG,IAAIG,IAASH,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG,CAAA;AACvC,UAAI,CAACF;AAAK,eAAO;AACjB,UAAI,KAAKL,WAAW,KAAKW,IAAIN,CAAG;AAC9B,eAAIC,KAAS,IACJ,KAAKM,IAAIP,GAAKC,GAAOI,CAAS,IAEhC,KAAKG,GAAGR,GAAKK,CAAS;AAE/B,UAAMI,IAAWT,EAAIU,MAAM,GAAG;AAC9B,aAAOD,EAASE,IAAK,KAAIX;AAAAA,IAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAODY,eAAaA,SAACZ,GAAKa,GAAS;AAAA,UAAAC,IAAA;AAC1B,aAAOD,EACJE,OAAO,SAACC,GAAMC,GAAS;AACtBH,eAAAA,EAAKI,KAAKF,GAAMC,GAAMH,EAAKjB,QACvBiB,EAAKN,GAAGR,GAAKiB,CAAI,IAAIjB,EAAIU,MAAM,GAAG,EAAEC,IAAG,CAAE,GACtCK;AAAAA,MACR,GAAE,CAAE,CAAA;AAAA,IACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWDG,cAAY,SAACC,GAAuB;AAAA,UAAhBC,IAAMnB,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG,IACrBoB,IAAW,KAAK3B,UAClB,KAAK2B,YAAY,KAAKzB,MAAM0B,SAAS,KAAKD;AAC9C,UAAI,OAAOF,KAAU;AAAU,eAAOA;AACtC,UAAIA,KAASE,KAAYF,EAAME,CAAQ;AACrC,eAAOF,EAAME,CAAQ;AAEvB,UAAIF,KAASE,KAAYD,GAAQ;AAC/B,YAAMG,IAAgBC,OAAOC,KAAKN,CAAK,EAAEO,KAAK,SAAA3B,GAAG;AAAA,iBAAI,CAAC,CAACoB,EAAMpB,CAAG;AAAA,SAAE;AAElE,eAAOoB,EAAMI,CAAa,KAAKJ,EAAME,CAAQ,KAAK;AAAA,MACpD;AACA,aAAOF;AAAAA,IACT;AAAA,EACF;AACF;"}