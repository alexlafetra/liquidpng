{"version":3,"file":"BaseHoverBox.vue.es.js","sources":["../../../src/components/BaseHoverBox/BaseHoverBox.vue"],"sourcesContent":["<template>\n  <div\n    :style=\"[boxSize, boxPosition]\"\n    class=\"base-hover-box\">\n    <base-image-box v-bind=\"$props\" />\n  </div>\n</template>\n\n<script>\nimport BaseImageBox from '../BaseImageBox/BaseImageBox';\n\n/**\n * A box for information display after mouse hover or click<br><br>\n * <b>CAVEAT</b>: this component is deprecated!<br>\n * Usage not recommended!<br>\n * Have a look into [BaseTooltipBox](BaseTooltipBox) for a component with similar functionality\n */\n\nexport default {\n  name: 'BaseHoverBox',\n  components: {\n    BaseImageBox,\n  },\n  props: {\n    /**\n     * The title of the item in question, also used as img alt text\n     * (atm - TODO: should there be a separate alt text (then again - what would that be since\n     * file uploads dont have any properties)?)\n     */\n    title: {\n      type: String,\n      default: 'No title',\n    },\n    /**\n     * Text displayed directly below title (max one line; max 2 lines with title)\n     */\n    subtext: {\n      type: String,\n      default: '',\n    },\n    /**\n     * should the title be displayed or box only display the image\n     */\n    showTitle: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Specify text that should be displayed in the info box, should be an array of strings\n     */\n    boxText: {\n      type: Array,\n      default() {\n        return [];\n      },\n    },\n    /**\n     * image url\n     */\n    imageUrl: {\n      type: String,\n      default: null,\n    },\n    /**\n     * descriptive element displayed at bottom of box (e.g. item type like \"Bilderserie\")\n     */\n    description: {\n      type: String,\n      default: null,\n    },\n    /**\n     * determines if the box should be selectable and the checkbox is displayed\n     */\n    selectable: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * specify the size of the box\n     */\n    boxSize: {\n      type: Object,\n      default: () => ({ width: '212px', height: '212px' }),\n    },\n  },\n  data() {\n    return {\n      boxPosition: { top: 0, left: 0 },\n    };\n  },\n  methods: {\n    /**\n     * to set the position of the box from outside\n     * @param {MouseEvent} e\n     */\n    setPosition(e) {\n      let x = e.layerX;\n      let y = e.layerY;\n      const width = parseInt(this.boxSize.width.replace('px', ''), 10);\n      const elem = this.$el;\n      const boxMargin = window.getComputedStyle(elem, null)\n        .getPropertyValue('margin').replace('px', '');\n      if (e.clientX + 3 * boxMargin + width > window.innerWidth) {\n        x = e.layerX - width - 2 * boxMargin;\n      }\n      if (e.clientY + 2 * boxMargin + width > window.innerHeight) {\n        y = e.layerY - width - boxMargin;\n      }\n      this.boxPosition = { top: `${y}px`, left: `${x}px` };\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  @import '../../styles/variables.scss';\n\n  .base-hover-box {\n    box-shadow: $preview-box-shadow;\n    position: absolute;\n    z-index: map-get($zindex, hoverbox);\n    margin: $spacing;\n  }\n</style>\n"],"names":["_sfc_main","BaseImageBox","e","x","y","width","elem","boxMargin"],"mappings":";;;AAkBA,MAAAA,IAAA;AAAA,EACA,MAAA;AAAA,EACA,YAAA;AAAA,IACA,cAAAC;AAAA,EACA;AAAA,EACA,OAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,OAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,SAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,WAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,SAAA;AAAA,MACA,MAAA;AAAA,MACA,UAAA;AACA,eAAA;MACA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,UAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,aAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,YAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,SAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA,OAAA,EAAA,OAAA,SAAA,QAAA,QAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,OAAA;AACA,WAAA;AAAA,MACA,aAAA,EAAA,KAAA,GAAA,MAAA,EAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,YAAAC,GAAA;AACA,UAAAC,IAAAD,EAAA,QACAE,IAAAF,EAAA;AACA,YAAAG,IAAA,SAAA,KAAA,QAAA,MAAA,QAAA,MAAA,EAAA,GAAA,EAAA,GACAC,IAAA,KAAA,KACAC,IAAA,OAAA,iBAAAD,GAAA,IAAA,EACA,iBAAA,QAAA,EAAA,QAAA,MAAA,EAAA;AACA,MAAAJ,EAAA,UAAA,IAAAK,IAAAF,IAAA,OAAA,eACAF,IAAAD,EAAA,SAAAG,IAAA,IAAAE,IAEAL,EAAA,UAAA,IAAAK,IAAAF,IAAA,OAAA,gBACAD,IAAAF,EAAA,SAAAG,IAAAE,IAEA,KAAA,cAAA,EAAA,KAAA,GAAAH,CAAA,MAAA,MAAA,GAAAD,CAAA,KAAA;AAAA,IACA;AAAA,EACA;AACA;;;;;;;;;;;;;;;"}