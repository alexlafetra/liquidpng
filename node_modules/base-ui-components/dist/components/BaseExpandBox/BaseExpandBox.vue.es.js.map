{"version":3,"file":"BaseExpandBox.vue.es.js","sources":["../../../src/components/BaseExpandBox/BaseExpandBox.vue"],"sourcesContent":["<template>\n  <base-box\n    box-ratio=\"0\"\n    :box-size=\"{}\"\n    :box-hover=\"false\"\n    :style=\"style\"\n    :box-shadow-size=\"boxShadow ? 'small' : 'none'\"\n    :class=\"[\n      'base-expand-box',\n      'base-expand-box-padding-' + padding,\n      { 'base-expand-box-auto-height': autoHeight },\n      { 'base-expand-box-open': expandInt }]\">\n    <div\n      v-if=\"!!$slots.header\"\n      class=\"base-expand-box-header\">\n      <!-- @slot slot to add additional information before expandable content -->\n      <slot name=\"header\" />\n    </div>\n    <div\n      ref=\"content\"\n      :class=\"[\n        'base-expand-box-content',\n        { 'base-expand-box-content-fade-out': (!initialized || !expandInt && showButton) }]\">\n      <div\n        class=\"base-expand-box-content-inner\">\n        <!-- div is needed for calculation of content height -->\n        <div ref=\"contentInner\">\n          <!--\n            @slot add expand box content here\n          -->\n          <slot />\n        </div>\n      </div>\n    </div>\n\n    <base-button\n      v-if=\"showButton\"\n      :text=\"expandInt ? showLessText : showMoreText\"\n      :has-background-color=\"false\"\n      align-text=\"left\"\n      icon=\"drop-down\"\n      icon-position=\"right\"\n      :class=\"[\n        'base-expand-box-button',\n        { 'base-button-icon-rotate-180': expandInt }]\"\n      @clicked=\"clicked\" />\n\n    <div\n      v-if=\"!!$slots.footer\"\n      class=\"base-expand-box-footer\">\n      <div class=\"base-expand-box-footer-inner\">\n        <!-- @slot slot to add additional information after expandable content -->\n        <slot name=\"footer\" />\n      </div>\n    </div>\n  </base-box>\n</template>\n\n<script>\nimport { debounce } from '@/utils/utils';\nimport BaseBox from '../BaseBox/BaseBox';\nimport BaseButton from '../BaseButton/BaseButton';\n\n/**\n * Component to render content in expandable container\n */\n\nexport default {\n  name: 'BaseExpandBox',\n  components: {\n    BaseBox,\n    BaseButton,\n  },\n  props: {\n    /**\n     * expand box from the outside\n     */\n    expand: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * define padding of the box\n     */\n    padding: {\n      type: String,\n      default: 'small',\n      validator(val) {\n        return ['none', 'large', 'small'].includes(val);\n      },\n    },\n    /**\n     * button text to show more content\n     */\n    showMoreText: {\n      type: String,\n      default: 'Show more',\n    },\n    /**\n     * button text to show less content\n     */\n    showLessText: {\n      type: String,\n      default: 'Show less',\n    },\n    /**\n     * define whether box height depends on content\n     */\n    autoHeight: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * define the max height of the collapsed box in px\n     */\n    maxCollapsedHeight: {\n      type: Number,\n      default: 300,\n    },\n    /**\n     * define the height including margin of the show-more button in px\n     */\n    showButtonHeight: {\n      type: Number,\n      default: 54,\n    },\n    /**\n     * option to disable the box shadow if element is nested into a box\n     */\n    boxShadow: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    return {\n      elementId: null,\n      expandInt: false,\n      initialized: false,\n      showButton: false,\n      mutationObserver: null,\n      resizeObserver: null,\n    };\n  },\n  computed: {\n    maxCollapsedHeightInt() {\n      return this.showButton\n        ? this.maxCollapsedHeight - this.showButtonHeight\n        : this.maxCollapsedHeight;\n    },\n    style() {\n      return { '--max-collapsed-height': `${this.maxCollapsedHeightInt}px` };\n    },\n  },\n  mounted() {\n    this.init();\n  },\n  beforeDestroy() {\n    if (this.mutationObserver) this.mutationObserver.disconnect();\n    if (this.resizeObserver) this.resizeObserver.disconnect();\n  },\n  methods: {\n    /**\n     * init\n     */\n    init() {\n      // create an element id to generate unique dom selectors\n      // eslint-disable-next-line no-underscore-dangle\n      this.elementId = this._uid;\n      // set internal expand variable\n      if (this.expand) this.expandInt = true;\n      // calculate the show-more button visibility\n      this.calcButtonVisibility({});\n      // init observers (currently for resize and mutation)\n      this.initObserver();\n      // set initialization state\n      this.initialized = true;\n    },\n    /**\n     * create resize/mutation observer for the content container\n     * to trigger the calculation for the visibility of the show more button\n     */\n    initObserver() {\n      // create a resize observer with calculation functions\n      const resizeObserver = new ResizeObserver(debounce(50, () => this.calcButtonVisibility({})));\n\n      // create a mutation observer with calculation functions\n      const mutationObserver = new MutationObserver(() => this.calcButtonVisibility({ collapse: true }));\n\n      // attach the observers to the component\n      resizeObserver.observe(this.$refs.content);\n      mutationObserver.observe(this.$refs.content, { childList: true, subtree: true });\n\n      // store them in variables\n      this.resizeObserver = resizeObserver;\n      this.mutationObserver = mutationObserver;\n    },\n    /**\n     * calculate visibility of 'show more' button\n     * @param {boolean} collapse - defines if the content is collapsed\n     */\n    calcButtonVisibility({ collapse = false }) {\n      // check if content should be collapsed\n      if (collapse) this.expandInt = false;\n      if (this.$refs.contentInner) {\n        // clone inner content\n        const contentInnerTemp = this.$refs.contentInner.cloneNode(true);\n        // add unique id for later use\n        contentInnerTemp.setAttribute('id', `contentInnerTemp-${this.elementId}`);\n        // append the temporary element to the component\n        this.$el.appendChild(contentInnerTemp);\n        // get the height of the temporary element\n        const contentInnerTempHeight = contentInnerTemp.offsetHeight;\n        // remove  element\n        this.$el.removeChild(document.getElementById(`contentInnerTemp-${this.elementId}`));\n        // set button visibility\n        this.showButton = contentInnerTempHeight > this.maxCollapsedHeight;\n\n        // emit box-size\n        if (!this.expandInt) {\n          /**\n           * emitting box-height on resize\n           * @param {number} - the element offset height\n           */\n          this.$emit('box-height', this.$el.offsetHeight);\n        }\n      }\n    },\n    /**\n     * click event for the show-more button\n     */\n    clicked() {\n      this.expandInt = !this.expandInt;\n\n      /**\n       * event emitted on button click\n       * @param {boolean} - is box expanded\n       */\n      this.$emit('update:expand', this.expandInt);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  @import \"../../styles/variables\";\n\n  .base-expand-box {\n    flex-direction: column;\n\n    &.base-expand-box-padding-none {\n      padding: 0;\n    }\n\n    &.base-expand-box-padding-small {\n      padding: $spacing;\n    }\n\n    &.base-expand-box-padding-large {\n      padding: $spacing-large;\n    }\n\n    &.base-expand-box-auto-height:not(.base-expand-box-open) .base-expand-box-content {\n      max-height: var(--max-collapsed-height);\n    }\n\n    &:not(.base-expand-box-auto-height) .base-expand-box-content {\n      height: var(--max-collapsed-height);\n    }\n\n    .base-expand-box-content {\n      position: relative;\n      overflow: hidden;\n      line-height: $line-height;\n\n      &.base-expand-box-content-fade-out::after {\n        content: '';\n        width: 100%;\n        height: $line-height * 2;\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n        background: linear-gradient(to bottom, rgba(255, 255, 255, 0) , white);\n      }\n    }\n\n    .base-expand-box-content-inner {\n      position: relative;\n      height: 100%;\n      visibility: visible;\n    }\n\n    .base-expand-box-button {\n      margin-top: $spacing;\n      padding-left: 0;\n      justify-content: flex-start; // IE 11\n    }\n\n    &.base-expand-box-open {\n      .base-expand-box-content {\n        height: auto;\n      }\n    }\n\n    .base-expand-box-footer {\n      margin-top: auto;\n\n      .base-expand-box-footer-inner {\n        border-top: $border-width solid $background-color;\n        margin: $spacing 0 0;\n        padding-top: $spacing;\n      }\n    }\n  }\n</style>\n"],"names":["_sfc_main","BaseBox","BaseButton","val","resizeObserver","debounce","mutationObserver","collapse","contentInnerTemp","contentInnerTempHeight"],"mappings":"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"}