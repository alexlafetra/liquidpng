import "./BaseTooltip.vue.es2.js";
import n from "../../_virtual/_plugin-vue2_normalizer.es.js";
const c = {
  name: "BaseTooltip",
  props: {
    /**
     * HTMLElement to attach the tooltip
     * e.g.: vue ref element
     */
    attachTo: {
      type: null,
      // HTMLElement makes troubles with nuxt/nuxt-bridge
      required: !0
    },
    /**
     * add additional styling
     * **caveat**: properties `top`, `left` and `right` will be overwritten due position calculation
     */
    styles: {
      type: Object,
      default: () => ({})
    }
  },
  data() {
    return {
      isActive: !1,
      direction: "top",
      css: {},
      thresholdX: 10,
      // px, distance from window left or right side
      thresholdY: 3
      // px, distance between tooltip and attachTo element
    };
  },
  mounted() {
    document.querySelector("body").appendChild(this.$el), this.calcPosition(), this.isActive = !0;
  },
  methods: {
    calcPosition() {
      const { attachTo: s } = this, t = s.getBoundingClientRect(), e = this.$el, o = parseFloat(window.getComputedStyle(e, ":after").height) / 2, i = e.offsetWidth, l = e.offsetHeight + o;
      this.css = {};
      const { scrollY: h } = window;
      t.top < l ? (this.direction = "bottom", this.css.top = `${t.bottom + o + this.thresholdY + h}px`) : (this.direction = "top", this.css.top = `${t.top - l - this.thresholdY + h}px`), t.x < i / 2 ? (this.css.left = `${this.thresholdX}px`, this.css["--triangle-left"] = `${t.left + t.width / 2 - this.thresholdX}px`) : s.getBoundingClientRect().right + i / 2 > window.outerWidth ? (this.css.right = `${this.thresholdX}px`, this.css["--triangle-left"] = `${i - t.width / 2 + this.thresholdX - (window.outerWidth - s.getBoundingClientRect().right)}px`) : (this.css.left = `${t.left + t.width / 2 - i / 2}px`, this.css["--triangle-left"] = "50%");
    }
  }
};
var r = function() {
  var t = this, e = t._self._c;
  return e("div", { class: [
    "base-tooltip",
    "base-tooltip--" + t.direction,
    { "base-tooltip--active": t.isActive }
  ], style: { ...t.styles, ...t.css } }, [t._t("default", function() {
    return [e("i", [t._v("use default slot")])];
  })], 2);
}, d = [], a = /* @__PURE__ */ n(
  c,
  r,
  d,
  !1,
  null,
  "e4503b6a",
  null,
  null
);
const u = a.exports;
export {
  u as default
};
//# sourceMappingURL=BaseTooltip.vue.es.js.map
