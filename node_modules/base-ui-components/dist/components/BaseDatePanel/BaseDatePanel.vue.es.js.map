{"version":3,"file":"BaseDatePanel.vue.es.js","sources":["../../../src/components/BaseDatePanel/BaseDatePanel.vue"],"sourcesContent":["<template>\n  <div\n    v-click-outside=\"() => isOpen = false\"\n    class=\"base-date-panel\">\n    <div\n      :class=\"[\n        'base-date-panel__label',\n        { 'base-date-panel__label--hover': !isInline },\n      ]\"\n      @keydown.enter=\"isOpen = !isOpen\"\n      @click.stop=\"isOpen = !isOpen\">\n      <base-icon\n        v-if=\"!isInline\"\n        name=\"calendar-many\"\n        :title=\"label\"\n        :class=\"['base-date-panel__icon',\n                 { 'base-date-panel__icon--active': isOpen },\n                 { 'base-date-panel__icon--right': iconPosition === 'right' }]\" />\n      <!-- TODO: check if this is correct HTML - label associated Datepicker?\n       but also: is this currently accessible?? (should there be a (hidden) input field?? -->\n      <!-- eslint-disable-next-line  vuejs-accessibility/label-has-for -->\n      <label\n        v-if=\"showLabel || !isInline\">\n        {{ labelInt || label }}\n      </label>\n    </div>\n\n    <div @click.stop=\"\">\n      <DatePicker\n        ref=\"datePanel\"\n        v-model=\"inputInt\"\n        :append-to-body=\"false\"\n        :clearable=\"false\"\n        :editable=\"false\"\n        :inline=\"isInline\"\n        :input=\"input\"\n        :lang=\"lang[language]\"\n        :type=\"type\"\n        :format=\"'YYYY-MM-DD'\"\n        :open=\"isOpen\"\n        value-type=\"format\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport ClickOutside from 'vue-click-outside';\nimport DatePicker from 'vue2-datepicker';\n\nimport en from 'vue2-datepicker/locale/en';\nimport de from 'vue2-datepicker/locale/de';\nimport fr from 'vue2-datepicker/locale/fr';\n\nimport BaseIcon from '../BaseIcon/BaseIcon';\n\n/**\n * Date Panel\n *\n * >CAVEAT: this component is currently not production ready since it is not\n * >accessible and is therefore excluded from the styleguide. Using it is not recommended.\n */\nexport default {\n  name: 'BaseDatePanel',\n  components: {\n    BaseIcon,\n    DatePicker,\n  },\n  directives: {\n    ClickOutside,\n  },\n  model: {\n    prop: 'input',\n    event: 'selected',\n  },\n  props: {\n    /**\n     * specify if icon should be displayed left or right\n     */\n    iconPosition: {\n      type: String,\n      default: 'left',\n      validator(val) {\n        return ['left', 'right'].includes(val);\n      },\n    },\n    /**\n     * set input field from outside.\n     * format: `{ date: 'yyyy-MM-dd' }`\n     */\n    input: {\n      type: Object,\n      default: () => ({}),\n    },\n    /**\n     * show panel permanently\n     */\n    isInline: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * label, required for usability purposes, handle\n     * showing of label with property `showLabel`\n     */\n    label: {\n      type: String,\n      required: true,\n    },\n    /**\n     * set calendar language\n     */\n    language: {\n      type: String,\n      default: 'en',\n    },\n    /**\n     * defines if input label should be visible\n     */\n    showLabel: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * select type of calendar\n     */\n    type: {\n      type: String,\n      default: 'date',\n      validator(val) {\n        return ['date', 'week'].includes(val);\n      },\n    },\n    /**\n     * label will be replaced with selected date unless this is set `false`\n     */\n    showDateSelected: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    return {\n      inputInt: null,\n      isOpen: false,\n      /**\n       * datepicker localisations\n       *   using object fixes problem of missing localisation files in rollup-esm-build\n       */\n      lang: {\n        de,\n        en,\n        fr,\n      },\n    };\n  },\n  computed: {\n    labelInt() {\n      if (!this.isInline && this.showDateSelected && this.inputInt) {\n        return new Date(this.inputInt).toLocaleDateString(this.language);\n      }\n      return this.label;\n    },\n  },\n  watch: {\n    input: {\n      handler(val) {\n        // check if input string is different from inputInt\n        if (val && this.inputInt && val.date !== this.inputInt) {\n          this.inputInt = val.date;\n        }\n      },\n      // to not need to do extra assignment in created()\n      immediate: true,\n    },\n    inputInt: {\n      handler(val, before) {\n        if (val && val !== before) {\n          this.emitData(val);\n          this.isOpen = false;\n        }\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    /**\n     * Define object to emit\n     *\n     * @param {string} date\n     * @returns {object}\n     */\n    emitObject(date) {\n      const obj = {\n        date,\n      };\n\n      if (this.type === 'week') {\n        obj.week = this.$refs.datePanel.getWeek(new Date(date));\n      }\n      return obj;\n    },\n    /**\n     * emit data function\n     */\n    emitData(value) {\n      /**\n       * emit event when date or week is selected\n       * format: `{ date: 'yyyy-MM-dd' }`\n       *\n       * @event selected\n       * @type {Object} value - an object with the following properties:\n       * @property {string} date - the date string in format `YYYY-MM-DD`\n       * @property {string} week - if type is 'week' also the week is emitted\n       */\n      this.$emit('selected', this.emitObject(value));\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  @import \"../../styles/variables\";\n\n  .base-date-panel {\n    display: inline-block;\n    width: auto;\n    position: relative;\n    right: 0;\n  }\n\n  .base-date-panel__label {\n    display: flex;\n    align-items: center;\n    color: $font-color-second;\n    margin: $spacing-small 0;\n\n    &.base-date-panel__label--hover:hover {\n      color: $app-color;\n      cursor: pointer;\n\n      label {\n        cursor: pointer;\n      }\n\n      .base-date-panel__icon {\n        color: inherit;\n      }\n    }\n  }\n\n  .base-date-panel__icon {\n    width: $icon-large;\n    height: $icon-large;\n    color: $font-color-second;\n    margin-right: $spacing-small;\n\n    &.base-date-panel__icon--active {\n      color: $app-color;\n    }\n\n    &.base-date-panel__icon--right {\n      order: 1;\n      margin-left: $spacing-small;\n      margin-right: 0;\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n  @import '../../styles/_datepicker.scss';\n\n  .base-date-panel {\n    position: relative;\n\n    .mx-input-wrapper {\n      position: absolute;\n      visibility: hidden;\n    }\n\n    .mx-datepicker {\n      display: block;\n      width: auto;\n    }\n\n    .mx-calendar-week-mode {\n      .cell {\n        &:hover,\n        &.active {\n          color: inherit !important;\n        }\n      }\n\n      .mx-table-date {\n        .cell {\n          &.not-current-month {\n            color: $font-color-second;\n          }\n        }\n      }\n\n      .mx-date-row {\n        &:hover {\n          background-color: rgba(245, 245, 245, 1);\n        }\n\n        &.mx-active-week {\n          background-color: $app-color;\n\n          &:hover {\n            background-color: $app-color;\n          }\n\n          .cell {\n            &.not-current-month {\n              color: #fff;\n            }\n          }\n        }\n      }\n    }\n  }\n</style>\n"],"names":["_sfc_main","BaseIcon","DatePicker","ClickOutside","val","de","en","fr","before","date","obj","value"],"mappings":";;;;;;;;;AA6DA,MAAAA,IAAA;AAAA,EACA,MAAA;AAAA,EACA,YAAA;AAAA,IACA,UAAAC;AAAA,IACA,YAAAC;AAAA,EACA;AAAA,EACA,YAAA;AAAA,IACA,cAAAC;AAAA,EACA;AAAA,EACA,OAAA;AAAA,IACA,MAAA;AAAA,IACA,OAAA;AAAA,EACA;AAAA,EACA,OAAA;AAAA;AAAA;AAAA;AAAA,IAIA,cAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,MACA,UAAAC,GAAA;AACA,eeAAA,CAAA,QAAA,MAAA,EAAA,SAAAA,CAAA;AAAA,MACA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,kBAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,OAAA;AACA,WAAA;AAAA,MACA,UAAA;AAAA,MACA,QAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,MAAA;AAAA,QACA,IAAAC;AAAA,QACA,IAAAC;AAAA,QACA,IAAAC;AAAA,MACA;AAAA,IACA;AAAA,EACA;AAAA,EACA,UAAA;AAAA,IACA,WAAA;AACA,aAAA,CAAA,KAAA,YAAA,KAAA,oBAAA,KAAA,WACA,IAAA,KAAA,KAAA,QAAA,EAAA,mBAAA,KAAA,QAAA,IAEA,KAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,OAAA;AAAA,IACA,OAAA;AAAA,MACA,QAAAH,GAAA;AAEA,QAAAA,KAAA,KAAA,YAAAA,EAAA,SAAA,KAAA,aACA,KAAA,WAAAA,EAAA;AAAA,MAEA;AAAA;AAAA,MAEA,WAAA;AAAA,IACA;AAAA,IACA,UAAA;AAAA,MACA,QAAAA,GAAAI,GAAA;AACA,QAAAJ,KAAAA,MAAAI,MACA,KAAA,SAAAJ,CAAA,GACA,KAAA,SAAA;AAAA,MAEA;AAAA,MACA,MAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,WAAAK,GAAA;AACA,YAAAC,IAAA;AAAA,QACA,MAAAD;AAAA,MACA;AAEA,aAAA,KAAA,SAAA,WACAC,EAAA,OAAA,KAAA,MAAA,UAAA,QAAA,IAAA,KAAAD,CAAA,CAAA,IAEAC;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA,SAAAC,GAAA;AAUA,WAAA,MAAA,YAAA,KAAA,WAAAA,CAAA,CAAA;AAAA,IACA;AAAA,EACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}