import { debounce as s } from "../../utils/utils.es.js";
import r from "../BaseIcon/BaseIcon.vue.es.js";
import "./BasePagination.vue.es2.js";
import o from "../../_virtual/_plugin-vue2_normalizer.es.js";
const u = {
  name: "BasePagination",
  components: {
    BaseIcon: r
  },
  model: {
    prop: "current",
    event: "set-page"
  },
  props: {
    /**
     * specify total number of pages
     */
    total: {
      type: Number,
      default: null
    },
    /**
     * currently active page number
     */
    current: {
      type: Number,
      default: 1
    },
    /**
     * specify if pagination elements should be links - specify a vue link element or
     * set the variable false if element should not be a link
     * (this needs vue-router)
     * currently only vue components (like 'RouterLink' or 'NuxtLink') are supported!
     */
    useLinkElement: {
      type: [String, Boolean],
      default: !1,
      validator: (a) => typeof a == "boolean" && !a || typeof a == "string" && a
    }
  },
  data() {
    return {
      /**
       * currently active page number
       * @type {number}
       */
      active: this.current,
      /**
       * number the displayed pages between '...' should start with
       * (only relevant if not all numbers can be displayed)
       * @type {?number}
       */
      start: null,
      /**
       * number the displayed pages between the '...' should end with
       * (only relevant if not all numbers can be displayed)
       * @type {?number}
       */
      end: null,
      /**
       * total numbers to be displayed before the '...' depending on the width of the
       * pagination element (only relevant if not all numbers can be displayed)
       * @type {number}
       */
      subsetNumber: 7,
      /**
       * max numbers to be displayed
       * @type {number}
       */
      maxNumbers: 10,
      /**
       * an observer to adjust displayed numbers according to component
       * width
       * @type {?ResizeObserver}
       */
      resizeObserver: null
    };
  },
  computed: {
    /**
     * calculate the actual subset page numbers to be displayed
     * @returns {number[]}
     */
    subset() {
      const a = this.start + this.subsetNumber > this.total ? this.total - this.subsetNumber + 1 : this.start;
      return Array.from(
        { length: this.subsetNumber },
        (e, n) => n + a
      );
    },
    /**
     * check if element should be displayed as a link element, otherwise make it a <span>
     * @returns {String|Boolean|string}
     */
    numberElement() {
      return this.useLinkElement ? this.useLinkElement : "div";
    }
  },
  watch: {
    /**
     * in case
     */
    $route(a) {
      this.useLinkElement && a && a.query && a.query.page && a.query.page !== this.active && (this.active = Number(a.query.page));
    },
    /**
     * if active number changes inform parent
     * @param {number} val - the new page number active
     */
    active(a) {
      this.current !== a && this.$emit("set-page", a), this.setStartEnd();
    },
    /**
     * check if parent prop changes
     * @param {number} val - the page number provided by the parent component
     */
    current(a) {
      this.active = a;
    }
  },
  mounted() {
    this.setStartEnd(), this.initObserver();
  },
  beforeDestroy() {
    this.resizeObserver && this.resizeObserver.disconnect();
  },
  methods: {
    /**
     * function to initialize the resize observer necessary to adapt
     * pagination to component width at all times
     */
    initObserver() {
      const a = new ResizeObserver(s(50, () => {
        this.setStartEnd();
      }));
      a.observe(this.$refs.pagination), this.resizeObserver = a;
    },
    /**
     * depending on with of the parent element of the pagination calculate
     * how many page numbers can be displayed
     */
    setStartEnd() {
      if (this.$refs.pagination) {
        const a = this.$refs.pagination.clientWidth;
        a < 400 ? (this.subsetNumber = 1, this.maxNumbers = 5) : a < 550 ? (this.subsetNumber = 3, this.maxNumbers = 8) : a < 700 ? (this.subsetNumber = 5, this.maxNumbers = 8) : (this.subsetNumber = 7, this.maxNumbers = 10), this.start = this.active - this.subsetNumber / 2 > 0 ? this.active - Math.floor(this.subsetNumber / 2) : 1, this.end = this.active + this.subsetNumber / 2 < this.total ? this.active + Math.floor(this.subsetNumber / 2) : this.total;
      }
    },
    /**
     * function to set a new page number active
     * @param {number} page - the new page number
     */
    setActivePage(a) {
      this.useLinkElement || (this.active = a);
    },
    /**
     * get the correct link in case element is a link element
     * @param {number} page - the page number of the element in question
     * @returns {{path: string, query: Object}|string}
     */
    getLinkPath(a) {
      return this.useLinkElement && this.$route ? { path: this.$route.fullPath, query: { page: a } } : "";
    }
  }
};
var l = function() {
  var e = this, n = e._self._c;
  return n("nav", { ref: "pagination", staticClass: "base-pagination" }, [n(e.numberElement, { tag: "component", class: [
    "base-pagination__arrow",
    { "base-pagination__arrow-icon-inactive": e.active <= 1 }
  ], attrs: { to: e.useLinkElement ? e.getLinkPath(e.active - 1 > 0 ? e.active - 1 : 1) : !1, "aria-disabled": e.active <= 1, tabindex: e.active <= 1 ? -1 : 0, "aria-label": "Go to previous page" }, on: { click: function(t) {
    t.preventDefault(), e.active - 1 > 0 && !e.useLinkElement && e.setActivePage(e.active - 1);
  }, keydown: function(t) {
    if (!t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter"))
      return null;
    e.active - 1 > 0 && !e.useLinkElement && e.setActivePage(e.active - 1);
  } }, nativeOn: { click: function(t) {
    t.preventDefault(), e.active - 1 > 0 && !e.useLinkElement && e.setActivePage(e.active - 1);
  } } }, [n("base-icon", { staticClass: "base-pagination__arrow-icon base-pagination__arrow-icon-left", attrs: { name: "arrow-left" } })], 1), n("div", { staticClass: "base-pagination__row" }, [e.total <= e.maxNumbers ? e._l(e.total, function(t) {
    return n(e.numberElement, { key: t, tag: "component", class: ["base-pagination__number", { "base-pagination__number-active": e.active === t }], attrs: { to: e.useLinkElement ? e.getLinkPath(t) : !1, tabindex: e.useLinkElement ? !1 : 0, "aria-current": e.active === t ? "true" : !1, "aria-label": `${e.active === t ? "Current Page, Page" : "Go to page"} ${t}` }, on: { keydown: function(i) {
      return !i.type.indexOf("key") && e._k(i.keyCode, "enter", 13, i.key, "Enter") ? null : e.setActivePage(t);
    }, click: function(i) {
      return i.preventDefault(), e.setActivePage(t);
    } }, nativeOn: { click: function(i) {
      return i.preventDefault(), e.setActivePage(t);
    } } }, [e._v(" " + e._s(t) + " ")]);
  }) : [e.start !== 1 ? n(e.numberElement, { tag: "component", class: ["base-pagination__number", { "base-pagination__number-active": e.active === 1 }], attrs: { to: e.useLinkElement ? e.getLinkPath(1) : !1, tabindex: e.useLinkElement ? !1 : 0, "aria-current": e.active === 1 ? "true" : !1, "aria-label": `${e.active === 1 ? "Current Page, Page" : "Go to page"} 1` }, on: { keydown: function(t) {
    return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.setActivePage(1);
  }, click: function(t) {
    return t.preventDefault(), e.setActivePage(1);
  } }, nativeOn: { click: function(t) {
    return t.preventDefault(), e.setActivePage(1);
  } } }, [e._v(" " + e._s(1) + " ")]) : e._e(), e.start > 2 ? n("span", { staticClass: "base-pagination__more" }, [e._v("⋯")]) : e._e(), e._l(e.subset, function(t) {
    return n(e.numberElement, { key: t, tag: "component", class: ["base-pagination__number", { "base-pagination__number-active": e.active === t }], attrs: { to: e.useLinkElement ? e.getLinkPath(t) : !1, tabindex: e.useLinkElement ? !1 : 0, "aria-current": e.active === t ? "true" : !1, "aria-label": `${e.active === t ? "Current Page, Page" : "Go to page"} ${t}` }, on: { keydown: function(i) {
      return !i.type.indexOf("key") && e._k(i.keyCode, "enter", 13, i.key, "Enter") ? null : e.setActivePage(t);
    }, click: function(i) {
      return i.preventDefault(), e.setActivePage(t);
    } }, nativeOn: { click: function(i) {
      return i.preventDefault(), e.setActivePage(t);
    } } }, [e._v(" " + e._s(t) + " ")]);
  }), e.end < e.total - 1 && e.end !== e.total - 1 ? n("span", { staticClass: "base-pagination__more" }, [e._v("⋯")]) : e._e(), e.end - 1 < e.total - 1 && e.end - 1 !== e.total - 1 ? n(e.numberElement, { tag: "component", class: [
    "base-pagination__number",
    { "base-pagination__number-active": e.active === e.total }
  ], attrs: { to: e.useLinkElement ? e.getLinkPath(e.total) : !1, tabindex: e.useLinkElement ? !1 : 0, "aria-current": e.active === e.total ? "true" : !1, "aria-label": `${e.active === e.total ? "Current Page, Page" : "Go to page"} ${e.total}` }, on: { keydown: function(t) {
    return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.setActivePage(e.total);
  }, click: function(t) {
    return t.preventDefault(), e.setActivePage(e.total);
  } }, nativeOn: { click: function(t) {
    return t.preventDefault(), e.setActivePage(e.total);
  } } }, [e._v(" " + e._s(e.total) + " ")]) : e._e()]], 2), n(e.numberElement, { tag: "component", class: [
    "base-pagination__arrow",
    { "base-pagination__arrow-icon-inactive": e.active >= e.total }
  ], attrs: { to: e.useLinkElement ? e.getLinkPath(e.active + 1 <= e.total ? e.active + 1 : e.total) : !1, "aria-disabled": e.active >= e.total, tabindex: e.active >= e.total ? -1 : 0, "aria-label": "Go to next Page" }, on: { click: function(t) {
    t.preventDefault(), e.active + 1 <= e.total && !e.useLinkElement && e.setActivePage(e.active + 1);
  }, keydown: function(t) {
    if (!t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter"))
      return null;
    e.active + 1 <= e.total && !e.useLinkElement && e.setActivePage(e.active + 1);
  } }, nativeOn: { click: function(t) {
    t.preventDefault(), e.active + 1 <= e.total && !e.useLinkElement && e.setActivePage(e.active + 1);
  } } }, [n("base-icon", { staticClass: "base-pagination__arrow-icon base-pagination__arrow-icon-right", attrs: { name: "arrow-left" } })], 1)], 1);
}, c = [], m = /* @__PURE__ */ o(
  u,
  l,
  c,
  !1,
  null,
  null,
  null,
  null
);
const g = m.exports;
export {
  g as default
};
//# sourceMappingURL=BasePagination.vue.es.js.map
