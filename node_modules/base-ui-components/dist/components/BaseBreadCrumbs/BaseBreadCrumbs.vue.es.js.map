{"version":3,"file":"BaseBreadCrumbs.vue.es.js","sources":["../../../src/components/BaseBreadCrumbs/BaseBreadCrumbs.vue"],"sourcesContent":["<template>\n  <div\n    class=\"base-bread-crumbs\">\n    <template\n      v-for=\"({ route, label, showLabel, icon }, index) in routes\">\n      <BaseLink\n        :key=\"route\"\n        external-link-target=\"_self\"\n        :identifier-property-value=\"route\"\n        :value=\"label\"\n        :render-link-as=\"renderLinkAs\"\n        :additional-attributes=\"{ ariaCurrentValue: 'page' }\"\n        :class=\"['base-bread-crumbs__link', { 'base-bread-crumbs__link--icon-only': showLabel === false }]\">\n        <template\n          #label>\n          <span class=\"base-bread-crumbs__label\">\n            <BaseIcon\n              v-if=\"icon\"\n              :key=\"label\"\n              :name=\"icon\"\n              :title=\"showLabel === false ? label : undefined\"\n              :class=\"['base-bread-crumbs__icon',\n                       { 'base-bread-crumbs__icon--with-label': showLabel !== false }]\" />\n            <span\n              v-if=\"showLabel !== false\"\n              class=\"base-bread-crumbs__label-text\">\n              {{ label }}\n            </span>\n          </span>\n        </template>\n      </BaseLink>\n      <BaseIcon\n        v-if=\"index < routes.length - 1\"\n        :key=\"`${route}-separator`\"\n        name=\"next\"\n        class=\"base-bread-crumbs__separator\" />\n    </template>\n  </div>\n</template>\n\n<script>\n/**\n * component to display breadcrumb-style navigation\n */\nimport BaseLink from '@/components/BaseLink/BaseLink';\n\nexport default {\n  name: 'BaseBreadCrumbs',\n  components: {\n    BaseLink,\n    BaseIcon: () => import('@/components/BaseIcon/BaseIcon').then(m => m.default || m),\n  },\n  props: {\n    /**\n     * specify an array with the properties `route`, `label` and (optional) `icon` and `showLabel` that\n     *  should be used for navigation - these have to be internal\n     *  links, i.e. without a protocol like `http:` or `mailto:` in the url\n     * `showLabel` set to false is only considered if the `icon` property is set!\n     */\n    routes: {\n      type: Array,\n      default: () => [{ route: '', label: '' }],\n      validator: arr => !arr.some(\n        val => (val.route\n            // check that link is specified without protocol\n            && !!(val.route.match(/^([a-z][a-z0-9+\\-.]*:\\/\\/)/)\n              || val.route.match(/^mailto:/)\n              || val.route.match(/^tel:/)))\n          // and check that icon is specified when `showLabel` is\n          || (val.showLabel === false && !val.icon),\n      ),\n    },\n    /**\n     * specify how link element should be rendered - this needs to be a\n     * valid vue link component (e.g. RouterLink, NuxtLink) and vue-router\n     * is necessary\n     */\n    renderLinkAs: {\n      type: String,\n      default: 'RouterLink',\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../styles/variables\";\n\n.base-bread-crumbs {\n  position: relative;\n  color: $font-color-second;\n  font-size: $font-size-small;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: wrap;\n\n  .base-bread-crumbs__link {\n    padding-right: $spacing-small-half;\n    display: flex;\n    align-items: center;\n    color: $font-color-second;\n    // get child to respect parent width\n    // (needed because of white-space: nowrap; further down the line)\n    min-width: 100px;\n\n    &.base-bread-crumbs__link--icon-only {\n      flex-shrink: 0;\n      min-width: $icon-medium;\n    }\n\n    &:hover {\n      text-decoration: none;\n    }\n\n    &:focus, &:hover {\n      color: $app-color;\n    }\n\n    &:nth-child(n+2) {\n      padding-left: $spacing-small-half;\n    }\n\n    &:last-child {\n      text-decoration: underline;\n    }\n\n    .base-bread-crumbs__label {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      overflow: hidden;\n\n      .base-bread-crumbs__icon {\n        width: $icon-medium;\n        height: $icon-medium;\n        margin: $spacing-small-half 0;\n        flex-shrink: 0;\n\n        &.base-bread-crumbs__icon--with-label {\n          margin: $spacing-small-half $spacing-small-half $spacing-small-half 0;\n        }\n      }\n\n      .base-bread-crumbs__label-text {\n        display: inline;\n        justify-content: flex-start;\n        align-items: center;\n        text-overflow: ellipsis;\n        overflow: hidden;\n      }\n    }\n  }\n\n  .base-bread-crumbs__separator {\n    height: $icon-min;\n    width: $icon-min;\n    flex-shrink: 0;\n    color: $font-color-second;\n  }\n}\n</style>\n"],"names":["_sfc_main","BaseLink","m","arr","val"],"mappings":";;;AA8CA,MAAAA,IAAA;AAAA,EACA,MAAA;AAAA,EACA,YAAA;AAAA,IACA,UAAAC;AAAA,IACA,UAAA,MAAA,OAAA,gCAAA,EAAA,KAAA,CAAAC,MAAAA,EAAA,WAAAA,CAAA;AAAA,EACA;AAAA,EACA,OAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,QAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA,MAAA,CAAA,EAAA,OAAA,IAAA,OAAA,IAAA;AAAA,MACA,WAAA,CAAAC,MAAA,CAAAA,EAAA;AAAA,QACA,CAAAC,MAAAA,EAAA,SAEA,CAAA,EAAAA,EAAA,MAAA,MAAA,4BAAA,KACAA,EAAA,MAAA,MAAA,UAAA,KACAA,EAAA,MAAA,MAAA,OAAA,MAEAA,EAAA,cAAA,MAAA,CAAAA,EAAA;AAAA,MACA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,cAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA,EACA;AACA;;;;;;;;;;;;;;;;;;;;;;"}