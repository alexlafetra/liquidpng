{"version":3,"file":"BasePopUp.vue.cjs.js","sources":["../../../src/components/BasePopUp/BasePopUp.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"['base-pop-up',\n             { 'base-pop-up--fullscreen-on-mobile': fullscreenOnMobile }]\">\n    <div\n      :class=\"[\n        'base-pop-up__background',\n        { 'base-pop-up__background--visible': overlayBackgroundVisible },\n      ]\" />\n    <div\n      ref=\"popUpBody\"\n      :aria-labelledby=\"headerId\"\n      :aria-describedby=\"descriptionElementId\"\n      role=\"alertdialog\"\n      aria-modal=\"true\"\n      class=\"popup-box\">\n      <!-- POP UP HEADER -->\n      <div class=\"popup-header\">\n        <!-- @slot add a custom header title instead of the text defined with the prop `title`.\n          @binding header-id {string, number} - set this id on your custom element as it is used by the aria-labelledby attribute of the pop up container -->\n        <slot\n          name=\"header-title\"\n          :header-id=\"headerId\">\n          <div\n            :id=\"headerId\"\n            tabindex=\"-1\"\n            class=\"popup-title\">\n            {{ title }}\n          </div>\n        </slot>\n        <!-- @event close -->\n        <button\n          v-if=\"!closeButtonDisabled\"\n          type=\"button\"\n          aria-label=\"close pop up\"\n          class=\"base-popup__close-button\"\n          @click=\"close\">\n          <base-icon\n            class=\"popup-remove\"\n            name=\"remove\" />\n        </button>\n      </div>\n\n      <!-- POP UP CONTENT -->\n      <div class=\"popup-content\">\n        <!-- @slot slot to fill the body of the box with custom content -->\n        <slot />\n        <div\n          v-if=\"showButtonRow\"\n          class=\"popup-button-row\">\n          <!-- @slot custom button row -->\n          <slot name=\"button-row\">\n            <BaseButton\n              id=\"popup-left-button\"\n              :text=\"buttonLeftText\"\n              :icon=\"buttonLeftIcon\"\n              :icon-position=\"'right'\"\n              :icon-size=\"'small'\"\n              class=\"base-popup-button\"\n              @clicked=\"buttonLeft\" />\n            <BaseButton\n              id=\"popup-right-button\"\n              :text=\"buttonRightText\"\n              :icon=\"!isLoading ? buttonRightIcon : ''\"\n              :icon-position=\"'right'\"\n              :icon-size=\"'small'\"\n              :disabled=\"buttonRightDisabled\"\n              class=\"base-popup-button\"\n              @clicked=\"buttonRight\">\n              <template\n                #right-of-text>\n                <span\n                  v-show=\"isLoading\"\n                  class=\"base-popup-button-loader\">\n                  <BaseLoader />\n                </span>\n              </template>\n            </BaseButton>\n          </slot>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, watchEffect } from 'vue';\nimport { useTabKeyHandler } from '@/composables/useTabKeyHandler';\nimport BaseIcon from '@/components/BaseIcon/BaseIcon';\nimport BaseButton from '@/components/BaseButton/BaseButton';\nimport popUpLock from '../../mixins/popUpLock';\n/**\n * A component as overlay to display messages\n *\n */\n\nexport default {\n  name: 'BasePopUp',\n  components: {\n    BaseIcon,\n    BaseButton,\n    BaseLoader: () => import('../BaseLoader/BaseLoader').then(m => m.default || m),\n  },\n  mixins: [popUpLock],\n  props: {\n    /**\n     * pop up header text\n     */\n    title: {\n      type: String,\n      default: 'Pop Up',\n    },\n    /**\n     * customize the popup header id.\n     *  if you are using the `header-title` slot this should also be set as id on your custom title element\n     */\n    headerId: {\n      type: [String, Number],\n      default: 'popup-title',\n    },\n    /**\n     * specify the id of the element containing a description - for accessibility only\n     */\n    descriptionElementId: {\n      type: String,\n      default: '',\n    },\n    /**\n     * text shown in left button\n     */\n    buttonLeftText: {\n      type: String,\n      default: 'Cancel',\n    },\n    /**\n     * text shown in right button\n     */\n    buttonRightText: {\n      type: String,\n      default: 'Submit',\n    },\n    /**\n     * icon shown in left button\n     */\n    buttonLeftIcon: {\n      type: String,\n      default: 'remove',\n    },\n    /**\n     * icon shown in right button\n     */\n    buttonRightIcon: {\n      type: String,\n      default: 'check-mark',\n    },\n    /**\n     * disable right button\n     */\n    buttonRightDisabled: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * disable close button\n     */\n    closeButtonDisabled: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * if true button loader will be shown\n     */\n    isLoading: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * HTMLElement to focus after opening the popup\n     * **Note:** If empty, the header title will be focused by default.\n     *           If using the slot for a custom header, be sure to\n     *           define an id attribute with the value `popup-title`\n     *           The value should be a valid CSS selector.\n     * **useful IDs:**\n     * - left-button: `popup-left-button`\n     * - right-button: `popup-right-button`\n     */\n    initialFocusElement: {\n      type: String,\n      default: '',\n    },\n    /**\n     * specify to render component with max height and width\n     */\n    fullscreenOnMobile: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * list of focusable HTML elements using tab key navigation\n     */\n    focusableElements: {\n      type: Array,\n      // also add all elements in general that have a tabindex, except the ones with value -1\n      default: () => ['a[href]', 'button:enabled', 'input:enabled', '*[tabindex]:not([tabindex=\"-1\"])'],\n    },\n    /**\n     * specify to disable the tab key handler within the component\n     */\n    disableTabKeyHandler: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * button row visibility\n     */\n    showButtonRow: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * define if the overlay background should be visible\n     * (semitransparent black)\n     */\n    overlayBackgroundVisible: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  setup(props) {\n    // get reference to element\n    const popUpBody = ref(null);\n    // init tab key handler\n    const { focusableHTMLTags, disableHandler } = useTabKeyHandler(popUpBody, props.focusableElements.join(', '), props.disableTabKeyHandler);\n    // watcher to set specific properties\n    watchEffect(() => {\n      focusableHTMLTags.value = props.focusableElements;\n      disableHandler.value = props.disableTabKeyHandler;\n    });\n\n    return {\n      popUpBody,\n    };\n  },\n  data() {\n    return {\n      // this is needed for popUpLock mixin!\n      targetName: 'popUpBody',\n      // HTML element that should be focused when the component is closed\n      prevActiveElement: undefined,\n    };\n  },\n  mounted() {\n    document.onkeyup = (e) => {\n      if (document.querySelector('.popup-box')) {\n        if (!this.closeButtonDisabled && e.key === 'Escape') {\n          const btn = document.querySelector('.popup-box .base-popup__close-button');\n          btn.dispatchEvent(new Event('click'));\n        }\n      }\n    };\n    // also set the previously active element so it can be used to return to\n    // if pop up is closed\n    this.prevActiveElement = document.activeElement;\n    this.$nextTick(() => {\n      this.determineFocus();\n    });\n  },\n  beforeDestroy() {\n    // when the popup is closed, try to focus the previous triggering element\n    if (this.prevActiveElement) {\n      this.prevActiveElement.focus();\n      this.prevActiveElement = false;\n    }\n  },\n  methods: {\n    close() {\n      /**\n       * Event triggered on right top corner close action\n       *\n       * @event close\n       */\n      this.$emit('close');\n    },\n    buttonRight() {\n      /**\n       * Event triggered with right button\n       *\n       * @event button-right\n       */\n      this.$emit('button-right');\n    },\n    buttonLeft() {\n      /**\n       * Event triggered with left button\n       *\n       * @event button-left\n       */\n      this.$emit('button-left');\n    },\n\n    /** INITIAL FOCUS */\n    determineFocus() {\n      // try to focus the element defined with the initialFocusElement property\n      if (!!this.initialFocusElement && this.$el?.querySelector(this.initialFocusElement)) {\n        this.$el.querySelector(this.initialFocusElement).focus();\n        // or the popup title\n      } else if (this.$el?.querySelector(`#${this.headerId}`)) {\n        this.$el.querySelector(`#${this.headerId}`).focus();\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  @import '../../styles/variables.scss';\n\n  .base-pop-up {\n    .base-pop-up__background {\n      position: fixed;\n      top: 0;\n      left: 0;\n      height: 100%;\n      width: 100%;\n      /* specific to be higher than base header */\n      z-index: map-get($zindex, modal_bg);\n      overflow: hidden;\n\n      &.base-pop-up__background--visible {\n        background: $overlay-background-light;\n      }\n    }\n\n    .popup-box {\n      box-shadow: $pop-up-shadow;\n      position: fixed;\n      top: 20vh;\n      left: 50%;\n      z-index: map-get($zindex, modal);\n      min-width: 288px;\n      width: 50%;\n      max-width: 700px;\n      display: flex;\n      flex-direction: column;\n      transform: translateX(-50%);\n\n      .popup-header {\n        background-color: $button-header-color;\n        height: $row-height-large;\n        padding: 0 #{$spacing};\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n        flex-shrink: 0;\n\n        .popup-title {\n          margin-right: $spacing-small;\n          display: -webkit-box;\n          -webkit-line-clamp: 2;\n          -webkit-box-orient: vertical;\n          overflow: hidden;\n        }\n\n        .base-popup__close-button {\n          &:active, &:focus {\n            color: $app-color;\n            fill: $app-color;\n          }\n\n          .popup-remove {\n            width: $icon-medium;\n            min-width: $icon-medium;\n            cursor: pointer;\n          }\n        }\n      }\n\n      .popup-content {\n        padding: $spacing;\n        background-color: white;\n\n        .popup-button-row {\n          margin-top: $spacing;\n          display: flex;\n          flex-direction: row;\n\n          /* TODO: check if button size should just be adjustable via props in general\" */\n          .base-popup-button {\n            margin-right: $spacing;\n            // width: calc(50% - 8px);\n            flex-basis: 50%;\n          }\n\n          & .base-popup-button:last-child {\n            margin-right: 0;\n          }\n\n          .base-popup-button-loader {\n            position: relative;\n            transform: scale(0.5);\n            margin-left: $spacing;\n            padding-left: $spacing;\n          }\n        }\n      }\n    }\n  }\n\n  @media screen and (max-width: $tablet) {\n    .base-pop-up {\n      .popup-box {\n        max-width: 100%;\n        width: 70%;\n      }\n    }\n  }\n\n  @media screen and (max-width: $mobile) {\n    .base-pop-up {\n      .popup-box {\n        max-width: 100%;\n        width: 90%;\n        top: 10vh;\n\n        .popup-content {\n          padding: $spacing $spacing-small;\n\n          .popup-button-row {\n            flex-wrap: wrap;\n\n            & .base-popup-button {\n              margin-right: 0;\n              flex-basis: 100%;\n            }\n\n            & .base-popup-button:last-child {\n              margin-top: $spacing-small;\n            }\n          }\n        }\n      }\n\n      &.base-pop-up--fullscreen-on-mobile {\n        .popup-box {\n          top: 0;\n          width: 100%;\n          min-height: 100%;\n          height: 100%;\n\n          .popup-content {\n            display: flex;\n            flex: auto;\n            flex-direction: column;\n\n            .body {\n              flex: auto;\n              align-content: flex-start;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @media screen and (max-height: 1042px) {\n    .base-pop-up {\n      .popup-box {\n        top: 10vh;\n      }\n    }\n  }\n\n  @media screen and (max-height: 500px) {\n    .base-pop-up {\n      .popup-box {\n        top: 2vh;\n      }\n    }\n  }\n</style>\n"],"names":["_sfc_main","BaseIcon","BaseButton","m","popUpLock","props","popUpBody","ref","focusableHTMLTags","disableHandler","useTabKeyHandler","watchEffect","e","_a","_b"],"mappings":"uaAgGAA,EAAA,CACA,KAAA,YACA,WAAA,CACA,SAAAC,EAAA,QACA,WAAAC,EAAA,QACA,WAAA,IAAA,QAAA,QAAA,EAAA,KAAA,IAAA,QAAA,qCAAA,GAAA,KAAAC,GAAAA,EAAA,SAAAA,CAAA,CACA,EACA,OAAA,CAAAC,EAAAA,OAAA,EACA,MAAA,CAIA,MAAA,CACA,KAAA,OACA,QAAA,QACA,EAKA,SAAA,CACA,KAAA,CAAA,OAAA,MAAA,EACA,QAAA,aACA,EAIA,qBAAA,CACA,KAAA,OACA,QAAA,EACA,EAIA,eAAA,CACA,KAAA,OACA,QAAA,QACA,EAIA,gBAAA,CACA,KAAA,OACA,QAAA,QACA,EAIA,eAAA,CACA,KAAA,OACA,QAAA,QACA,EAIA,gBAAA,CACA,KAAA,OACA,QAAA,YACA,EAIA,oBAAA,CACA,KAAA,QACA,QAAA,EACA,EAIA,oBAAA,CACA,KAAA,QACA,QAAA,EACA,EAIA,UAAA,CACA,KAAA,QACA,QAAA,EACA,EAWA,oBAAA,CACA,KAAA,OACA,QAAA,EACA,EAIA,mBAAA,CACA,KAAA,QACA,QAAA,EACA,EAIA,kBAAA,CACA,KAAA,MAEA,QAAA,IAAA,CAAA,UAAA,iBAAA,gBAAA,kCAAA,CACA,EAIA,qBAAA,CACA,KAAA,QACA,QAAA,EACA,EAIA,cAAA,CACA,KAAA,QACA,QAAA,EACA,EAKA,yBAAA,CACA,KAAA,QACA,QAAA,EACA,CACA,EACA,MAAAC,EAAA,CAEA,MAAAC,EAAAC,MAAA,IAAA,EAEA,CAAA,kBAAAC,EAAA,eAAAC,GAAAC,EAAAA,iBAAAJ,EAAAD,EAAA,kBAAA,KAAA,IAAA,EAAAA,EAAA,oBAAA,EAEAM,OAAAA,EAAAA,YAAA,IAAA,CACAH,EAAA,MAAAH,EAAA,kBACAI,EAAA,MAAAJ,EAAA,oBACA,CAAA,EAEA,CACA,UAAAC,CACA,CACA,EACA,MAAA,CACA,MAAA,CAEA,WAAA,YAEA,kBAAA,MACA,CACA,EACA,SAAA,CACA,SAAA,QAAAM,GAAA,CACA,SAAA,cAAA,YAAA,GACA,CAAA,KAAA,qBAAAA,EAAA,MAAA,UACA,SAAA,cAAA,sCAAA,EACA,cAAA,IAAA,MAAA,OAAA,CAAA,CAGA,EAGA,KAAA,kBAAA,SAAA,cACA,KAAA,UAAA,IAAA,CACA,KAAA,eAAA,CACA,CAAA,CACA,EACA,eAAA,CAEA,KAAA,oBACA,KAAA,kBAAA,QACA,KAAA,kBAAA,GAEA,EACA,QAAA,CACA,OAAA,CAMA,KAAA,MAAA,OAAA,CACA,EACA,aAAA,CAMA,KAAA,MAAA,cAAA,CACA,EACA,YAAA,CAMA,KAAA,MAAA,aAAA,CACA,EAGA,gBAAA,SAEA,KAAA,uBAAAC,EAAA,KAAA,MAAA,MAAAA,EAAA,cAAA,KAAA,sBACA,KAAA,IAAA,cAAA,KAAA,mBAAA,EAAA,SAEAC,EAAA,KAAA,MAAA,MAAAA,EAAA,cAAA,IAAA,KAAA,QAAA,KACA,KAAA,IAAA,cAAA,IAAA,KAAA,QAAA,EAAA,EAAA,OAEA,CACA,CACA"}